<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Post-rsses on gam0022.net</title>
    <link>https://gam0022.net/post/index.xml</link>
    <description>Recent content in Post-rsses on gam0022.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <copyright>&amp;copy; 2021 gam0022</copyright>
    <lastBuildDate>Wed, 16 Apr 2025 09:00:00 +0900</lastBuildDate>
    <atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>draw(tokyo); #2でVJデビュー！（GLSLライブコーディング）</title>
      <link>https://gam0022.net/blog/2025/04/16/draw2/</link>
      <pubDate>Wed, 16 Apr 2025 09:00:00 +0900</pubDate>
      
      <guid>https://gam0022.net/blog/2025/04/16/draw2/</guid>
      <description>&lt;p&gt;3/22に渋谷のCIRCUS TOKYOでオーディオビジュアルイベント&lt;a href=&#34;https://function-draw.com/tokyo2&#34;&gt;draw(tokyo);#2&lt;/a&gt;が開催されました。&lt;/p&gt;

&lt;p&gt;私は&lt;a href=&#34;https://x.com/toufu0301&#34;&gt;とうふおさおい&lt;/a&gt;さんのVJとして出演し、Sh4derJockeyを使ったGLSLライブコーディングによるVJを行いました。&lt;/p&gt;

&lt;p&gt;初めてのVJでしたが、オーディエンスの反応なども感じられて、とても楽しくVJできました。&lt;/p&gt;

&lt;p&gt;想定外のトラブルはありつつも、全体としては満足できる結果になったので良かったです。&lt;/p&gt;

&lt;p&gt;会場に足を運んでくださった皆さん、クルーやスタッフの方々、最高のイベントをありがとうございました！！&lt;/p&gt;

&lt;p&gt;本記事では、VJの技術的な要素や当日の振り返りを紹介します。&lt;/p&gt;

&lt;h1 id=&#34;パフォーマンスの動画&#34;&gt;パフォーマンスの動画&lt;/h1&gt;

&lt;p&gt;友人に撮影してもらった動画をつなぎ合わせたダイジェスト版はこちらです。&lt;/p&gt;

&lt;div class=&#34;movie-wrap&#34;&gt;
&lt;iframe width=&#34;1920&#34; height=&#34;1080&#34; src=&#34;https://www.youtube.com/embed/WNBRxQE55NE?si=cTud1nD9U_d4n9Oa&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34;  referrerpolicy=&#34;strict-origin-when-cross-origin&#34; allowfullscreenn&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;本番時のフルバージョンの画面録画です。&lt;/p&gt;

&lt;div class=&#34;movie-wrap&#34;&gt;
&lt;iframe width=&#34;1920&#34; height=&#34;1080&#34; src=&#34;https://www.youtube.com/embed/JZLX5l94lCA?si=dO1kT8MESDHx4Tye&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34;  referrerpolicy=&#34;strict-origin-when-cross-origin&#34; allowfullscreenn&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;本番では処理落ちが発生してしまったため、処理落ちのないリハーサル時の動画も紹介します。画面の点滅も控えめなので、本番時より目に優しいと思います。&lt;/p&gt;

&lt;div class=&#34;movie-wrap&#34;&gt;
&lt;iframe width=&#34;1920&#34; height=&#34;1080&#34; src=&#34;https://www.youtube.com/embed/YVTtvUtDMto?si=A4MyFHJtKz6dsQHQ&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34;  referrerpolicy=&#34;strict-origin-when-cross-origin&#34; allowfullscreenn&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h1 id=&#34;目指したもの&#34;&gt;目指したもの&lt;/h1&gt;

&lt;p&gt;新千歳空港国際アニメーション映画祭で見た「パソコン音楽クラブ x Renard」のVJが最高すぎたので、これを目標にしました。&lt;/p&gt;

&lt;div class=&#34;movie-wrap&#34;&gt;
&lt;iframe width=&#34;1920&#34; height=&#34;1080&#34; src=&#34;https://www.youtube.com/embed/rKY-w3Ss8fE?si=TW8BiDCD-KmN6Wak&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34;  referrerpolicy=&#34;strict-origin-when-cross-origin&#34; allowfullscreenn&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;最初に2Dのパターンから作り、次に3Dのレイマーチング行うことで、少しずつ絵が完成していくビルドアップ的な要素を見せつつ、曲の盛り上がりに合わせて2Dと3Dの素材を組み合わせるという全体的なVJの構成を参考にしました。&lt;/p&gt;

&lt;p&gt;何も無い状態から0からライブコーディングするわけではなく、シェーダーのベース部分を事前に作り込んでおいて、パラメーターやコンポジット処理をリアルタムに編集するような形式にしました。&lt;/p&gt;

&lt;p&gt;初のVJだったので、なるべく失敗のリスクを軽減したいのと、曲に合わせて絵を変化させるために自分の余裕を持たせたいという意図があり、結果的に正解だったと思います。&lt;/p&gt;

&lt;h1 id=&#34;sh4derjockeyのプロジェクト&#34;&gt;Sh4derJockeyのプロジェクト&lt;/h1&gt;

&lt;p&gt;Sh4derJockeyのプロジェクトはGitHubに公開しました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gam0022/draw2&#34;&gt;github.com/gam0022/draw2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;基本的なレイヤーは以下の3つです。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;2Dのパターン&lt;/li&gt;
&lt;li&gt;3Dのレイマーチングのライブコーディング用のシーン&lt;/li&gt;
&lt;li&gt;3Dの&lt;a href=&#34;https://www.youtube.com/watch?v=194E3UWj870&#34;&gt;Transcendental Cube&lt;/a&gt;の移植シーン&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;これらの3レイヤーをコンポジットのレイヤーで合成したり、複数レイヤーのポストエフェクトが重ねがけを可能にしました。&lt;/p&gt;

&lt;p&gt;特にGlitchポストエフェクトは、色収差をベースにカスタマイズしたもので個人的にお気に入りです。
通常の色収差は画面端ほど強度が強くなりますが、ボロノイやCyclic Noiseなどの複数のノイズパターンを合成して色収差ができるようにしました。ノイズの強度はMIDIコンで細かく制御できます。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;最強にかっこいいGlitch🔥&lt;a href=&#34;https://twitter.com/hashtag/function_draw?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#function_draw&lt;/a&gt; &lt;a href=&#34;https://t.co/RudBTR9vl4&#34;&gt;https://t.co/RudBTR9vl4&lt;/a&gt; &lt;a href=&#34;https://t.co/GGer0GO5eV&#34;&gt;pic.twitter.com/GGer0GO5eV&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1904552820369690658?ref_src=twsrc%5Etfw&#34;&gt;March 25, 2025&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&#34;sh4derjockeyでのフォントの描画&#34;&gt;Sh4derJockeyでのフォントの描画&lt;/h2&gt;

&lt;p&gt;フォントは以下の2種類を使用しました。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://booth.pm/ja/items/6128508&#34;&gt;レシートフォント - mikannoki-font - BOOTH&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://fonts.google.com/specimen/Orbitron&#34;&gt;Orbitron Designed by Matt McInerney&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Sh4derJockeyにはフォントのレンダリング機能がないため、&lt;a href=&#34;https://github.com/Chlumsky/msdf-atlas-gen&#34;&gt;msdf-atlas-gen&lt;/a&gt;を使ってフォントのアトラステクスチャを生成しました。&lt;/p&gt;

&lt;p&gt;このツールは&lt;a href=&#34;https://x.com/kanetaaaaa&#34;&gt;かねた&lt;/a&gt;さんに教えてもらいました🙏&lt;/p&gt;

&lt;p&gt;msdf-atlas-genのGitHub ReleasesにはWindows用のビルド済みバイナリが配布されているので、パスの通った場所に&lt;code&gt;msdf-atlas-gen.exe&lt;/code&gt;を配置し、以下のように利用しました。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;msdf-atlas-gen.exe -format png -uniformcellconstraint square4 -imageout &amp;quot;font_receipt_all.png&amp;quot; -font &amp;quot;レシートフォント.ttf&amp;quot; -allglyphs -type mtsdf
msdf-atlas-gen.exe -format png -uniformcellconstraint square4 -imageout &amp;quot;font_orbitron_ascii.png&amp;quot; -font &amp;quot;Orbitron-VariableFont_wght.ttf&amp;quot; -type mtsdf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以下のオプションを指定しました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-uniformcellconstraint square4&lt;/code&gt; : 等幅なアトラステクスチャにする&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-type mtsdf&lt;/code&gt; : Multi-channel signed distance fieldを指定&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;msdf-atlas-genでは、フォントに収録されていない文字のスペースが詰められてしまうため、ASCIIコードとテクスチャアトラスのインデックスがずれる問題が発生しました。&lt;/p&gt;

&lt;p&gt;この問題はGLSL側でインデックスをオフセットすることで対処しましたが、存在しない文字のテクスチャアトラスを空白として残すオプションがあると便利だと感じました。&lt;/p&gt;

&lt;p&gt;フォントの描画（適切なUVを計算してアトラスをサンプリング）は、&lt;a href=&#34;https://github.com/Forenard/VJ-at-lambda-2023-06-10/blob/main/Shader/font.glsl&#34;&gt;Renardさんのソースコード&lt;/a&gt;を参考にカスタマイズしました。&lt;/p&gt;

&lt;p&gt;msdf-atlas-genが生成するテクスチャのアルファは滑らかなグラデーションになっていたため、2値化して使用するようにしました。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;@@ -223,11 +223,11 @@ float Print_Char(vec2 uv, int id) {
         dist -= 0.5;
     }
     float sig = fwidth(dist);
-    float c = smoothstep(-sig, sig, dist) * col.a * float(id != 0);
+    float c = smoothstep(-sig, sig, dist) * step(0.5, col.a) * float(id != 0);
     if (Font_Style == STYLE_OUTLINE || Font_Style == STYLE_OUTLINE_ITALIC) {
         dist -= 0.2;
         sig = fwidth(dist);
-        c -= smoothstep(-sig, sig, dist) * col.a * float(id != 0);
+        c -= smoothstep(-sig, sig, dist) * step(0.5, col.a) * float(id != 0);
     }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;また、msdf-atlas-genが生成するテクスチャは左上がインデックス0に対応しますが、参考にしたコードは左下に対応していたため、上下を反転する改造を行いました。&lt;/p&gt;

&lt;h1 id=&#34;vjの技術構成&#34;&gt;VJの技術構成&lt;/h1&gt;

&lt;p&gt;VJで使用したソフトウェアやハードウェアを以下の図にまとめました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/draw2_system.png&#34; alt=&#34;構成図&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/slerpyyy/sh4der-jockey&#34;&gt;Sh4derJockey&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;GLSLでライブコーディングを行うためのソフトウェア&lt;/li&gt;
&lt;li&gt;マルチパスやテクスチャが使える&lt;/li&gt;
&lt;li&gt;MIDIコントローラーなども使える&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ETCLabs/Sound2Light&#34;&gt;Sound2Light&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;音を解析してBPMなどを取得できるソフトウェア&lt;/li&gt;
&lt;li&gt;Renardさんに教えてもらった&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;図には記載していませんが、GLSLのエディターとしてVSCodeを使用しました。&lt;/p&gt;

&lt;p&gt;また、Sh4derJockeyの画面にVSCodeのコードを合成するため、OBSのクロマキー合成を活用しました。&lt;/p&gt;

&lt;p&gt;さらに、VJ画面をHDMI出力する際にもOBSの全画面プロジェクター機能を利用しました。&lt;/p&gt;

&lt;p&gt;VJの使用ソフトウェアは「パソコン音楽クラブ x Renard」とほぼ同じだと思います。&lt;/p&gt;

&lt;h2 id=&#34;sound2lightからsh4derjockeyへのbpmの自動同期システム&#34;&gt;Sound2LightからSh4derJockeyへのBPMの自動同期システム&lt;/h2&gt;

&lt;p&gt;Sound2LightはOSC（Open Sound Control）プロトコルでBPM情報を他のソフトウェアに送信できます。しかし、Sh4derJockeyは外部からの情報をMIDIでしか受け取れません。&lt;/p&gt;

&lt;p&gt;そこで、OSCからMIDIに信号を変換する仕組みをNode.jsで実装しました。&lt;/p&gt;

&lt;p&gt;MIDI信号は7bit（0～127）の範囲でしか送信できないため、BPM情報を下位7bitと上位7bitに分割し、2つのMIDI CCチャンネルで送信しました。&lt;/p&gt;

&lt;p&gt;仮想オーディオデバイスの必要性に気づかず試行錯誤しましたが、RenardさんのアドバイスでloopMIDIを導入して解決しました。&lt;/p&gt;

&lt;p&gt;ソースコードをGitHubで公開し、READMEに使い方を詳しく記載しました。興味のある方はGitHubを見てください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gam0022/osc-to-midi.js&#34;&gt;github.com/gam0022/osc-to-midi.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;オーディオインターフェイスの導入&#34;&gt;オーディオインターフェイスの導入&lt;/h2&gt;

&lt;p&gt;DJの音源を取得する方法がわからなかったため、&lt;a href=&#34;https://x.com/0b5vr&#34;&gt;0b5vr&lt;/a&gt;さんに相談し、&lt;a href=&#34;https://amzn.to/42Adfgg&#34;&gt;Behringer U-PHONO UFO202&lt;/a&gt;というオーディオインターフェイスを購入しました。&lt;/p&gt;

&lt;p&gt;UFO202を使って、DJミキサーからRCAケーブルで出力されるアナログ音源をデジタル音源に変換しました。&lt;/p&gt;

&lt;div class=&#34;kaerebalink-box&#34; style=&#34;text-align:left;padding-bottom:20px;font-size:small;zoom: 1;overflow: hidden;&#34;&gt;&lt;div class=&#34;kaerebalink-image&#34; style=&#34;float:left;margin:0 15px 10px 0;&#34;&gt;&lt;a href=&#34;https://hb.afl.rakuten.co.jp/hgc/g0000014.uo1a9aa4.g0000014.uo1aa66b/kaereba_main_202504150316354973?pc=https%3A%2F%2Fproduct.rakuten.co.jp%2Fproduct%2F-%2Ffbc1d98f472e340fe1f0af43fd2c33b4%2F&amp;m=http%3A%2F%2Fm.product.rakuten.co.jp%2Fproduct%2Ffbc1d98f472e340fe1f0af43fd2c33b4%2F&amp;rafcid=wsc_i_ps_1087413314923222742&#34; target=&#34;_blank&#34; &gt;&lt;img src=&#34;https://thumbnail.image.rakuten.co.jp/ran/img/3001/0004/033/653/030/601/30010004033653030601_1.jpg?_ex=320x320&#34; style=&#34;border: none;&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;kaerebalink-info&#34; style=&#34;line-height:120%;zoom: 1;overflow: hidden;&#34;&gt;&lt;div class=&#34;kaerebalink-name&#34; style=&#34;margin-bottom:10px;line-height:120%&#34;&gt;&lt;a href=&#34;https://hb.afl.rakuten.co.jp/hgc/g0000014.uo1a9aa4.g0000014.uo1aa66b/kaereba_main_202504150316354973?pc=https%3A%2F%2Fproduct.rakuten.co.jp%2Fproduct%2F-%2Ffbc1d98f472e340fe1f0af43fd2c33b4%2F&amp;m=http%3A%2F%2Fm.product.rakuten.co.jp%2Fproduct%2Ffbc1d98f472e340fe1f0af43fd2c33b4%2F&amp;rafcid=wsc_i_ps_1087413314923222742&#34; target=&#34;_blank&#34; &gt;BEHRINGER 2入力2出力USBオーディオインターフェース UFO202&lt;/a&gt;&lt;div class=&#34;kaerebalink-powered-date&#34; style=&#34;font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%&#34;&gt;posted with &lt;a href=&#34;https://kaereba.com&#34; rel=&#34;nofollow&#34; target=&#34;_blank&#34;&gt;カエレバ&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;kaerebalink-detail&#34; style=&#34;margin-bottom:5px;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;kaerebalink-link1&#34; style=&#34;margin-top:10px;&#34;&gt;&lt;div class=&#34;shoplinkrakuten&#34; style=&#34;margin-right:5px;background: url(&#39;//img.yomereba.com/kz_k_01.gif&#39;) 0 -50px no-repeat;padding: 2px 0 2px 18px;white-space: nowrap;&#34;&gt;&lt;a href=&#34;https://hb.afl.rakuten.co.jp/hgc/g0000014.uo1a9aa4.g0000014.uo1aa66b/kaereba_main_202504150316354973?pc=https%3A%2F%2Fproduct.rakuten.co.jp%2Fproduct%2F-%2Ffbc1d98f472e340fe1f0af43fd2c33b4%2F&amp;m=http%3A%2F%2Fm.product.rakuten.co.jp%2Fproduct%2Ffbc1d98f472e340fe1f0af43fd2c33b4%2F&amp;rafcid=wsc_i_ps_1087413314923222742&#34; target=&#34;_blank&#34; &gt;楽天市場で購入&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;shoplinkamazon&#34; style=&#34;margin-right:5px;background: url(&#39;//img.yomereba.com/kz_k_01.gif&#39;) 0 0 no-repeat;padding: 2px 0 2px 18px;white-space: nowrap;&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/gp/search?keywords=Behringer%20U-PHONO%20UFO202&amp;__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&amp;tag=gam00220c-22&#34; target=&#34;_blank&#34; &gt;Amazonで購入&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;shoplinkyahoo&#34; style=&#34;margin-right:5px;background: url(&#39;//img.yomereba.com/kz_k_01.gif&#39;) 0 -150px no-repeat;padding: 2px 0 2px 18px;white-space: nowrap;&#34;&gt;&lt;a href=&#34;//ck.jp.ap.valuecommerce.com/servlet/referral?sid=3737095&amp;pid=891162462&amp;vc_url=http%3A%2F%2Fsearch.shopping.yahoo.co.jp%2Fsearch%3Fp%3DBehringer%2520U-PHONO%2520UFO202&amp;vcptn=kaereba&#34; target=&#34;_blank&#34; &gt;Yahooショッピングで購入&lt;img src=&#34;//ad.jp.ap.valuecommerce.com/servlet/gifbanner?sid=3737095&amp;pid=891162462&#34; height=&#34;1&#34; width=&#34;1&#34; border=&#34;0&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;shoplinkseven&#34; style=&#34;margin-right:5px;background: url(&#39;//img.yomereba.com/kz_k_01.gif&#39;) 0 -100px no-repeat;padding: 2px 0 2px 18px;white-space: nowrap;&#34;&gt;&lt;a href=&#34;//ck.jp.ap.valuecommerce.com/servlet/referral?sid=3737095&amp;pid=891162462&amp;vc_url=http%3A%2F%2F7net.omni7.jp%2Fsearch%2F%3Fkeyword%3DBehringer%2520U-PHONO%2520UFO202%26searchKeywordFlg%3D1&amp;vcptn=kaereba&#34; target=&#34;_blank&#34; &gt;7netで購入&lt;img src=&#34;//ad.jp.ap.valuecommerce.com/servlet/atq/gifbanner?sid=3737095&amp;pid=891162462&#34; height=&#34;1&#34; width=&#34;1&#34; border=&#34;0&#34;&gt;&lt;/a&gt;&lt;/div&gt;                                       &lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;booklink-footer&#34; style=&#34;clear: left&#34;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&#34;midiコントローラーのボタン設定&#34;&gt;MIDIコントローラーのボタン設定&lt;/h2&gt;

&lt;p&gt;KORGの&lt;a href=&#34;https://amzn.to/42zrlhP&#34;&gt;nanoKONTROL2&lt;/a&gt;というMIDIコントローラーを使用しましたが、設定にいくつか苦労しました。&lt;/p&gt;

&lt;p&gt;インターネット上にVJやMIDIコンの情報が少なく、試行錯誤が必要でした。最終的には&lt;a href=&#34;https://x.com/Kinakomoti2357&#34;&gt;きなこ餅&lt;/a&gt;さんのアドバイスで解決できました🙏&lt;/p&gt;

&lt;p&gt;以下にポイントをまとめます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MIDI信号にはCC（スライダー）とnote（ボタン）の2種類があり、nanoKONTROL2の工場出荷時には全部CCになっている

&lt;ul&gt;
&lt;li&gt;ボタンとしてMIDIコンをするためには、&lt;a href=&#34;https://www.korg.com/jp/support/download/software/0/159/533/&#34;&gt;専用ソフト（nanoKONTROL2/KORG KONTROL EDITOR）&lt;/a&gt;でnoteに設定する必要がある&lt;/li&gt;
&lt;li&gt;nanoKONTROL2側に設定が書き込まれるので、PCごとに設定する必要はない&lt;/li&gt;
&lt;li&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/KORG_KONTROL_EDITOR.png&#34; alt=&#34;KORG_KONTROL_EDITOR&#34; /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Windows10/11はMIDIデバイスを10個までしか認識できない問題があり、MIDI Driver Uninstall Utilityで不要なMIDIデバイスを削除する必要がある

&lt;ul&gt;
&lt;li&gt;自分の場合はKORG KONTROL EDITORがnanoKONTROL2を認識できない問題が発生した&lt;/li&gt;
&lt;li&gt;参考: &lt;a href=&#34;https://note.com/bluembler/n/n20e7c5544e53&#34;&gt;KORG nanoKONTROL2が認識しなかった話&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;詳細は後日、別の記事にまとめる予定です。&lt;/p&gt;

&lt;div class=&#34;kaerebalink-box&#34; style=&#34;text-align:left;padding-bottom:20px;font-size:small;zoom: 1;overflow: hidden;&#34;&gt;&lt;div class=&#34;kaerebalink-image&#34; style=&#34;float:left;margin:0 15px 10px 0;&#34;&gt;&lt;a href=&#34;https://hb.afl.rakuten.co.jp/hgc/g0000014.uo1a9aa4.g0000014.uo1aa66b/kaereba_main_202504150310458941?pc=https%3A%2F%2Fproduct.rakuten.co.jp%2Fproduct%2F-%2Ff044da28797a92e15f159a56edd0414b%2F&amp;m=http%3A%2F%2Fm.product.rakuten.co.jp%2Fproduct%2Ff044da28797a92e15f159a56edd0414b%2F&amp;rafcid=wsc_i_ps_1087413314923222742&#34; target=&#34;_blank&#34; &gt;&lt;img src=&#34;https://thumbnail.image.rakuten.co.jp/ran/img/1001/0004/959/112/081/086/10010004959112081086_1.jpg?_ex=320x320&#34; style=&#34;border: none;&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;kaerebalink-info&#34; style=&#34;line-height:120%;zoom: 1;overflow: hidden;&#34;&gt;&lt;div class=&#34;kaerebalink-name&#34; style=&#34;margin-bottom:10px;line-height:120%&#34;&gt;&lt;a href=&#34;https://hb.afl.rakuten.co.jp/hgc/g0000014.uo1a9aa4.g0000014.uo1aa66b/kaereba_main_202504150310458941?pc=https%3A%2F%2Fproduct.rakuten.co.jp%2Fproduct%2F-%2Ff044da28797a92e15f159a56edd0414b%2F&amp;m=http%3A%2F%2Fm.product.rakuten.co.jp%2Fproduct%2Ff044da28797a92e15f159a56edd0414b%2F&amp;rafcid=wsc_i_ps_1087413314923222742&#34; target=&#34;_blank&#34; &gt;KORG コルグ nanoKONTROL2 BK ブラック&lt;/a&gt;&lt;div class=&#34;kaerebalink-powered-date&#34; style=&#34;font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%&#34;&gt;posted with &lt;a href=&#34;https://kaereba.com&#34; rel=&#34;nofollow&#34; target=&#34;_blank&#34;&gt;カエレバ&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;kaerebalink-detail&#34; style=&#34;margin-bottom:5px;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;kaerebalink-link1&#34; style=&#34;margin-top:10px;&#34;&gt;&lt;div class=&#34;shoplinkrakuten&#34; style=&#34;margin-right:5px;background: url(&#39;//img.yomereba.com/kz_k_01.gif&#39;) 0 -50px no-repeat;padding: 2px 0 2px 18px;white-space: nowrap;&#34;&gt;&lt;a href=&#34;https://hb.afl.rakuten.co.jp/hgc/g0000014.uo1a9aa4.g0000014.uo1aa66b/kaereba_main_202504150310458941?pc=https%3A%2F%2Fproduct.rakuten.co.jp%2Fproduct%2F-%2Ff044da28797a92e15f159a56edd0414b%2F&amp;m=http%3A%2F%2Fm.product.rakuten.co.jp%2Fproduct%2Ff044da28797a92e15f159a56edd0414b%2F&amp;rafcid=wsc_i_ps_1087413314923222742&#34; target=&#34;_blank&#34; &gt;楽天市場で購入&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;shoplinkamazon&#34; style=&#34;margin-right:5px;background: url(&#39;//img.yomereba.com/kz_k_01.gif&#39;) 0 0 no-repeat;padding: 2px 0 2px 18px;white-space: nowrap;&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/gp/search?keywords=nanoKONTROL2&amp;__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&amp;tag=gam00220c-22&#34; target=&#34;_blank&#34; &gt;Amazonで購入&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;shoplinkyahoo&#34; style=&#34;margin-right:5px;background: url(&#39;//img.yomereba.com/kz_k_01.gif&#39;) 0 -150px no-repeat;padding: 2px 0 2px 18px;white-space: nowrap;&#34;&gt;&lt;a href=&#34;//ck.jp.ap.valuecommerce.com/servlet/referral?sid=3737095&amp;pid=891162462&amp;vc_url=http%3A%2F%2Fsearch.shopping.yahoo.co.jp%2Fsearch%3Fp%3DnanoKONTROL2&amp;vcptn=kaereba&#34; target=&#34;_blank&#34; &gt;Yahooショッピングで購入&lt;img src=&#34;//ad.jp.ap.valuecommerce.com/servlet/gifbanner?sid=3737095&amp;pid=891162462&#34; height=&#34;1&#34; width=&#34;1&#34; border=&#34;0&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;shoplinkseven&#34; style=&#34;margin-right:5px;background: url(&#39;//img.yomereba.com/kz_k_01.gif&#39;) 0 -100px no-repeat;padding: 2px 0 2px 18px;white-space: nowrap;&#34;&gt;&lt;a href=&#34;//ck.jp.ap.valuecommerce.com/servlet/referral?sid=3737095&amp;pid=891162462&amp;vc_url=http%3A%2F%2F7net.omni7.jp%2Fsearch%2F%3Fkeyword%3DnanoKONTROL2%26searchKeywordFlg%3D1&amp;vcptn=kaereba&#34; target=&#34;_blank&#34; &gt;7netで購入&lt;img src=&#34;//ad.jp.ap.valuecommerce.com/servlet/atq/gifbanner?sid=3737095&amp;pid=891162462&#34; height=&#34;1&#34; width=&#34;1&#34; border=&#34;0&#34;&gt;&lt;/a&gt;&lt;/div&gt;                                     &lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;booklink-footer&#34; style=&#34;clear: left&#34;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&#34;当日のトラブル発生&#34;&gt;当日のトラブル発生！&lt;/h1&gt;

&lt;p&gt;WindowsノートPCを持っていなかったので、当日はきなこ餅さんからノートPCをレンタルして使わせていただきました🙇（圧倒的感謝）&lt;/p&gt;

&lt;p&gt;ただし、不幸なトラブルにより、処理落ちが発生してしまいました🥹&lt;/p&gt;

&lt;p&gt;原因は、同一PC内で異なるWindowsアカウントを使ってそれぞれVJソフトを起動していたため、バックグラウンドでGPUリソースが競合してしまったことです。あまり詳しくないのですが、Windowsではアカウントにログインしていない状態でもバックグラウンドでGPUを使用する仕様のようでした。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;がむさんと私のVJやたらと重かったの共有したPCがお互いのソフトをバックグラウンドで動かしてたのが原因だったの面白かった&lt;br&gt;&lt;br&gt;お互いリソースを食い合うVJ&lt;/p&gt;&amp;mdash; kinankomoti (@Kinakomoti2357) &lt;a href=&#34;https://twitter.com/Kinakomoti2357/status/1903475130418020585?ref_src=twsrc%5Etfw&#34;&gt;March 22, 2025&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;本来はもっと滑らかなアニメーションやカメラワークになる想定でした。&lt;/p&gt;

&lt;p&gt;参考までに意図したフレームレートで再生されたリハーサル時の動画を貼っておきます。&lt;/p&gt;

&lt;div class=&#34;movie-wrap&#34;&gt;
&lt;iframe width=&#34;1920&#34; height=&#34;1080&#34; src=&#34;https://www.youtube.com/embed/YVTtvUtDMto?si=A4MyFHJtKz6dsQHQ&amp;amp;start=1313&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34;  referrerpolicy=&#34;strict-origin-when-cross-origin&#34; allowfullscreenn&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;また、OBSのレイアウト設定に問題があり、Sh4derJockeyの画面が少し下にずれてしまい、画面上部に白い余白ができてしまいました。&lt;/p&gt;

&lt;p&gt;とはいえ、本番のPCでのVJはぶっつけ本番だったため、オーディオインターフェイスやMIDIコントローラーを問題なく使用できただけでもラッキーだったと感じています。&lt;/p&gt;

&lt;p&gt;小さな失敗もありましたが、致命的な問題にはならなかったのが幸いでした。次回のVJではこうした点に気をつけたいと思います。&lt;/p&gt;

&lt;h1 id=&#34;まとめ&#34;&gt;まとめ&lt;/h1&gt;

&lt;p&gt;draw(tokyo); #2での初VJは、多くの方々のサポートのおかげで無事にやり遂げることができました。協力してくださった皆さんに心から感謝しています。本当にありがとうございました！&lt;/p&gt;

&lt;p&gt;とうふおさおいさんの素晴らしいDJパフォーマンスのおかげで、私自身も楽しみながらVJができました。&lt;/p&gt;

&lt;p&gt;まだまだVJとしては未熟ですが、今回が初めての一歩となり、VJの楽しさや雰囲気をしっかり感じることができたと思います。次の機会があれば、ぜひまた挑戦したいです！&lt;/p&gt;

&lt;p&gt;実は3年ほど前からVJに憧れがあり「いつかVJをやってみたい」と漠然と考えていました。まさかこんな素晴らしいイベントでVJデビューできるとは思ってもみなかったので、本当に嬉しく、良い思い出になりました。本当にお誘いありがとうございました！&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;3年越しの伏線を回収した&lt;br&gt;（VJのお誘いをいただけて本当に感謝しています）&lt;a href=&#34;https://twitter.com/hashtag/function_draw?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#function_draw&lt;/a&gt; &lt;a href=&#34;https://t.co/fijBlpCjq0&#34;&gt;https://t.co/fijBlpCjq0&lt;/a&gt; &lt;a href=&#34;https://t.co/ZTvTTSKBER&#34;&gt;pic.twitter.com/ZTvTTSKBER&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1904194416044294478?ref_src=twsrc%5Etfw&#34;&gt;March 24, 2025&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h1 id=&#34;他の演者の記事紹介&#34;&gt;他の演者の記事紹介&lt;/h1&gt;

&lt;p&gt;他の演者の方々のパフォーマンスも最高でした。技術解説や振り返り記事のリンクを紹介します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://shivaduke28.hatenablog.com/entry/2025/03/25/205506&#34;&gt;Rectorについて - shivaduke28’s blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://note.com/monoton_music/n/nae24acb2298f&#34;&gt;draw(tokyo); #2 後記 「演奏するビジュアル」｜monoton&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://note.com/sainakey5/n/nf9b7f1ef5e5a&#34;&gt;【自作VJソフト】「ジェネラティブVJ　やり方」と draw(tokyo); #2 と気持ち ｜Saina&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://butadiene.hatenablog.com/entry/2025/03/24/233041&#34;&gt;自分の撮った写真数千枚を使って、リアルタイムに画像を生成してくれるVJツールを作った話 - Butadiene Works&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://scrapbox.io/0b5vr/20250322_draw(tokyo);_%232_Live_Coding&#34;&gt;20250322 draw(tokyo); #2 Live Coding | 0b5vr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://x.com/ore_ukonpower/status/1903886119047205336&#34;&gt;x.com/ore_ukonpower/status/1903886119047205336&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;写真&#34;&gt;写真&lt;/h1&gt;

&lt;p&gt;友人に撮影してもらったVJ中の写真です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/PXL_20250322_075002256.PORTRAIT.jpg&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/PXL_20250322_075002256.PORTRAIT.jpg&#34; alt=&#34;PXL_20250322_075002256.PORTRAIT&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/PXL_20250322_075042891.MP.jpg&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/PXL_20250322_075042891.MP.jpg&#34; alt=&#34;PXL_20250322_075042891.MP&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/PXL_20250322_075130158.NIGHT.jpg&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/PXL_20250322_075130158.NIGHT.jpg&#34; alt=&#34;PXL_20250322_075130158.NIGHT&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/PXL_20250322_075139920.NIGHT.jpg&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/PXL_20250322_075139920.NIGHT.jpg&#34; alt=&#34;PXL_20250322_075139920.NIGHT&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/PXL_20250322_075332869.PORTRAIT.jpg&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/PXL_20250322_075332869.PORTRAIT.jpg&#34; alt=&#34;PXL_20250322_075332869.PORTRAIT&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/PXL_20250322_075600776.NIGHT.jpg&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/PXL_20250322_075600776.NIGHT.jpg&#34; alt=&#34;PXL_20250322_075600776.NIGHT&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/PXL_20250322_075710213.NIGHT.jpg&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/PXL_20250322_075710213.NIGHT.jpg&#34; alt=&#34;PXL_20250322_075710213.NIGHT&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/PXL_20250322_075748895.NIGHT.jpg&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/PXL_20250322_075748895.NIGHT.jpg&#34; alt=&#34;PXL_20250322_075748895.NIGHT&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/PXL_20250322_075821809.PORTRAIT.ORIGINAL.jpg&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/PXL_20250322_075821809.PORTRAIT.ORIGINAL.jpg&#34; alt=&#34;PXL_20250322_075821809.PORTRAIT.ORIGINAL&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/PXL_20250322_080319396.PORTRAIT.ORIGINAL.jpg&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/PXL_20250322_080319396.PORTRAIT.ORIGINAL.jpg&#34; alt=&#34;PXL_20250322_080319396.PORTRAIT.ORIGINAL&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/PXL_20250322_080409969.NIGHT.jpg&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/PXL_20250322_080409969.NIGHT.jpg&#34; alt=&#34;PXL_20250322_080409969.NIGHT&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/PXL_20250322_080431371.NIGHT.jpg&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/PXL_20250322_080431371.NIGHT.jpg&#34; alt=&#34;PXL_20250322_080431371.NIGHT&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/L1000169.jpg&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/L1000169.jpg&#34; alt=&#34;L1000169&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/L1000180.jpg&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/L1000180.jpg&#34; alt=&#34;L1000180&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/L1000181.jpg&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/L1000181.jpg&#34; alt=&#34;L1000181&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/L1000182.jpg&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/L1000182.jpg&#34; alt=&#34;L1000182&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/L1000183.jpg&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/L1000183.jpg&#34; alt=&#34;L1000183&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/L1000199.jpg&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2025-04-12-draw2/L1000199.jpg&#34; alt=&#34;L1000199&#34; /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SESSIONS 2024参加記録（セミナー登壇・ShaderJam解説・Realtime Graphics）</title>
      <link>https://gam0022.net/blog/2024/12/11/sessions2024-summary/</link>
      <pubDate>Wed, 11 Dec 2024 23:30:00 +0900</pubDate>
      
      <guid>https://gam0022.net/blog/2024/12/11/sessions2024-summary/</guid>
      <description>&lt;p&gt;これは&lt;a href=&#34;https://adventar.org/calendars/10732&#34;&gt;SESSIONS Advent Calendar 2024&lt;/a&gt;の11日目の記事です。&lt;/p&gt;

&lt;h1 id=&#34;はじめに&#34;&gt;はじめに&lt;/h1&gt;

&lt;p&gt;2024年11月16日～17日に日本科学未来館で開催された&lt;a href=&#34;https://sessions-party.com/events/sessions-2024/&#34;&gt;SESSIONS 2024&lt;/a&gt;に参加しました。&lt;/p&gt;

&lt;p&gt;今回のSESSIONSでは3つのプログラムに携わったので、それぞれ簡単に説明します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Realtime Graphicsコンペティションに作品提出&lt;/li&gt;
&lt;li&gt;セミナー登壇&lt;/li&gt;
&lt;li&gt;Shader Jamの解説&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;なお、SESSIONSの様子は&lt;a href=&#34;https://www.youtube.com/@SESSIONS_Party&#34;&gt;公式のYouTubeチャンネル&lt;/a&gt;でアーカイブされています。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h1 id=&#34;realtime-graphicsコンペティションに作品提出&#34;&gt;Realtime Graphicsコンペティションに作品提出&lt;/h1&gt;

&lt;p&gt;2日目のRealtime Graphicsコンペティションに『GUARDI▲N』という「特撮」をコンセプトにしたBrowser Demoを投稿して3位をいただきました。&lt;/p&gt;

&lt;p&gt;2名のチーム制作を行い、映像とストーリーは私（gam0022）が担当し、音楽はHADHADさんが担当しました。&lt;/p&gt;

&lt;p&gt;詳細については、以下の記事をご覧ください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gam0022.net/blog/2024/12/02/sessions2024-guardian/&#34;&gt;SESSIONS 2024のRealtime Graphicsコンペティションで3位入賞しました（グラフィックス解説） | gam0022.net&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;&amp;quot;GUARDI▲N&amp;quot; by &lt;a href=&#34;https://twitter.com/gam0022?ref_src=twsrc%5Etfw&#34;&gt;@gam0022&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://twitter.com/katai5plate?ref_src=twsrc%5Etfw&#34;&gt;@katai5plate&lt;/a&gt;&lt;br&gt;&lt;br&gt;3rd Place in Realtime Graphics Competition at &lt;a href=&#34;https://twitter.com/hashtag/SESSIONS_Party?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SESSIONS_Party&lt;/a&gt; 2024&lt;a href=&#34;https://twitter.com/SESSIONS_Party?ref_src=twsrc%5Etfw&#34;&gt;@SESSIONS_Party&lt;/a&gt; 2024のリアルタイムGraphicsコンポで3位に入賞しました！&lt;br&gt;&lt;br&gt;映像は自作のWebGLエンジンによる24KB制限です。&lt;br&gt;&lt;br&gt;「特撮」をコンセプトにしました。 &lt;a href=&#34;https://t.co/wDVVRXWX26&#34;&gt;pic.twitter.com/wDVVRXWX26&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1858308509856678328?ref_src=twsrc%5Etfw&#34;&gt;November 18, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h1 id=&#34;セミナー登壇-レイマーチングの距離関数を極める&#34;&gt;セミナー登壇「レイマーチングの距離関数を極める！」&lt;/h1&gt;

&lt;p&gt;2日目の朝に「レイマーチングの距離関数を極める！」というセミナーで発表しました。&lt;/p&gt;

&lt;p&gt;レイマーチングの距離関数のモデリングにおいてハマりがちな罠だったり、あまり知られていなそうなテクニックや小ネタをTwitter（X）で募集し、それらを簡単に解説しました。&lt;/p&gt;

&lt;p&gt;ネタを提供していただいたみなさん（敬称略: @c5h12 @Kinakomoti2357 @Appletea_VRC @suzuki_ith @butadiene121 @shr_id @kamoshika_vrc）、本当にありがとうございました！&lt;/p&gt;

&lt;p&gt;距離関数では平行移動や回転のために座標を逆操作する必要があるため、混乱しやすいと思うのですが、距離関数によるモデリングにおいては、 &lt;strong&gt;「オブジェクトそのものではなく、空間の方を操作している」&lt;/strong&gt; という基本を思い出すことが重要ということが、この発表で一番伝えたい点でした。&lt;/p&gt;

&lt;p&gt;さまざまな話題が出てきましたが、空間を操作しているという基本に立ち返ると、多くの問題の解決の糸口となることが多いと感じています。&lt;/p&gt;

&lt;p&gt;このセミナーを通じて、参加者の皆さんに少しでも役立つ情報を提供できたなら幸いです。&lt;/p&gt;

&lt;div class=&#34;google-slide-wrap&#34;&gt;
&lt;iframe src=&#34;https://docs.google.com/presentation/d/e/2PACX-1vSdXEePaddAxc0hAOjyF3PlfQAXs2NAHn4LOQpQNT8MHLlr2G4Xd-8vDTSqNlT6lVPAM0QGN4rX9bro/embed?start=false&amp;loop=false&amp;delayms=3000&#34; frameborder=&#34;0&#34; width=&#34;1440&#34; height=&#34;839&#34; allowfullscreen=&#34;true&#34; mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;動画のアーカイブはこちらです。&lt;/p&gt;

&lt;div class=&#34;movie-wrap&#34;&gt;
&lt;iframe width=&#34;1920&#34; height=&#34;1080&#34; src=&#34;https://www.youtube.com/embed/UaWxTNwFSBc?si=m6q0CkZebzxocH3N&amp;amp;start=55&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34;  referrerpolicy=&#34;strict-origin-when-cross-origin&#34; allowfullscreenn&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;セミナー3: 「レイマーチングの距離関数を極める！」の発表資料です！&lt;br&gt;&lt;br&gt;Googleスライド版&lt;a href=&#34;https://t.co/PTyaGZR9kS&#34;&gt;https://t.co/PTyaGZR9kS&lt;/a&gt;&lt;br&gt;&lt;br&gt;Speaker Deck版&lt;a href=&#34;https://t.co/RBhgstXSiD&#34;&gt;https://t.co/RBhgstXSiD&lt;/a&gt;&lt;a href=&#34;https://twitter.com/hashtag/SESSIONS_Party?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SESSIONS_Party&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1858007444896756222?ref_src=twsrc%5Etfw&#34;&gt;November 17, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1yQgHPNS2H0UkODCxCVnHnzsmdn5nLBXfXaUHv2Kgpbw/edit#slide=id.p&#34;&gt;Googleスライド版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://speakerdeck.com/gam0022/mastering-distance-functions&#34;&gt;Speaker Deck版&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;shader-jamの解説&#34;&gt;Shader Jamの解説&lt;/h1&gt;

&lt;p&gt;1日目のShader Jamというイベントの解説とオペレーションの一部を行いました。&lt;/p&gt;

&lt;p&gt;Shader Jamは大人数でGLSLのシェーダーを書き、1時間ほどの時間でリアルタイムに作品を作っていくイベントです。&lt;/p&gt;

&lt;p&gt;たくさんのシェーダー作品がリアルタイムに実装され、作り上げられていく様子はまさに圧巻でした。&lt;/p&gt;

&lt;div class=&#34;movie-wrap&#34;&gt;
&lt;iframe width=&#34;1920&#34; height=&#34;1080&#34; src=&#34;https://www.youtube.com/embed/QfQglocVFTk?si=zbYZrc5mebwt_aIc&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;今回SESSIONSのShader Jamでは国内外から合計13人のGLSLコーダーが参加しました！&lt;/p&gt;

&lt;p&gt;13人分の初見のシェーダーを瞬時に理解しながらリアルタイムに解説するのは自分にとってはかなり大変でしたが、少しでも来場者の理解の助けになっていたら幸いです。&lt;/p&gt;

&lt;p&gt;頑張ればもう少し上手に解説できた気もするという反省もありますが、今後もっと経験を積んで、より上手に解説できることを目標にしたいです。&lt;/p&gt;

&lt;p&gt;どのシェーダーもユニークで素晴らしかったのですが、個人的に印象的だったのはRenardさんのComputeShaderを使ったパーティクルの作品、Kinakomotiさんのパストレーシングの作品、そしてKamoshikaさんのLog-polar Mappingの作品です。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/hashtag/SESSIONS_Party?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SESSIONS_Party&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/glsl?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#glsl&lt;/a&gt;&lt;br&gt;Shader Jamで書いたやつ&lt;br&gt;evvvvil,wrighter先生達のコードを見ただけの付け焼刃compute shaderだったけど可能性を感じた &lt;a href=&#34;https://t.co/W2UQViP6bo&#34;&gt;pic.twitter.com/W2UQViP6bo&lt;/a&gt;&lt;/p&gt;&amp;mdash; Renard (@Renard_VRC) &lt;a href=&#34;https://twitter.com/Renard_VRC/status/1857810156131856566?ref_src=twsrc%5Etfw&#34;&gt;November 16, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/hashtag/SESSIONS_Party?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SESSIONS_Party&lt;/a&gt; &lt;br&gt;Sessionsでshaderjamをやらせて頂きました&lt;br&gt;壁紙製造機(?)shaderです &lt;a href=&#34;https://t.co/ZcA1kcJ7W7&#34;&gt;pic.twitter.com/ZcA1kcJ7W7&lt;/a&gt;&lt;/p&gt;&amp;mdash; kiNaNkomoti (@Kinakomoti2357) &lt;a href=&#34;https://twitter.com/Kinakomoti2357/status/1858192661192245529?ref_src=twsrc%5Etfw&#34;&gt;November 17, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;Shader Jamで書いたやつです！&lt;br&gt;歪んだリングを組み合わせた物体をレイマーチングで描画しました。&lt;a href=&#34;https://t.co/zqqXrZLe4m&#34;&gt;https://t.co/zqqXrZLe4m&lt;/a&gt;&lt;a href=&#34;https://twitter.com/hashtag/SESSIONS_Party?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SESSIONS_Party&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/GLSL?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#GLSL&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/Shader?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#Shader&lt;/a&gt;&lt;br&gt;&lt;br&gt;(Shader Jamの音は Niko_14さん &lt;a href=&#34;https://twitter.com/himazin917?ref_src=twsrc%5Etfw&#34;&gt;@himazin917&lt;/a&gt; が作ってくださいました！) &lt;a href=&#34;https://t.co/S28qM1Jpgs&#34;&gt;pic.twitter.com/S28qM1Jpgs&lt;/a&gt;&lt;/p&gt;&amp;mdash; Kamoshika (@kamoshika_vrc) &lt;a href=&#34;https://twitter.com/kamoshika_vrc/status/1858848861164630386?ref_src=twsrc%5Etfw&#34;&gt;November 19, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Shader JamのすべてのGLSLシェーダーはtotetmattさんによってアーカイブされているので、興味があればぜひご覧ください。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://livecode.demozoo.org/event/2024_11_16_shader_jam_sessions.html#mc&#34;&gt;Sessions 2024-11-16 Shader Jam ◈ livecode.demozoo.org&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;まとめ&#34;&gt;まとめ&lt;/h1&gt;

&lt;p&gt;SESSIONS 2024は本当に素晴らしいイベントでした。&lt;/p&gt;

&lt;p&gt;セミナーの発表やShader Jamの解説など、新たな形でイベントに貢献できたことは貴重な経験となりました。&lt;/p&gt;

&lt;p&gt;会場の雰囲気や臨場感を直接肌で感じることができ、オフラインイベントの特別な魅力を再認識することができました。&lt;/p&gt;

&lt;p&gt;参加者との交流を通じて、作品に対する感想やアイデアの交換を行い、新たな視点やインスピレーションを得ることができました。また、会場の音響や再生環境が例年より大幅に改善されていた点も非常に良かったです。&lt;/p&gt;

&lt;p&gt;さらに、今年から刷新された応募カテゴリーにより、ProcessingやジェネVJなど多様な分野の参加者が集まり、例年以上の盛り上がりを感じることができました。&lt;/p&gt;

&lt;p&gt;SESSIONS 2024の運営や準備をしてくださったオーガナイザーの皆さん、そして参加者の皆さん、本当にありがとうございました。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SESSIONS 2024のRealtime Graphicsコンペティションで3位入賞しました（グラフィックス解説）</title>
      <link>https://gam0022.net/blog/2024/12/02/sessions2024-guardian/</link>
      <pubDate>Mon, 02 Dec 2024 22:00:00 +0900</pubDate>
      
      <guid>https://gam0022.net/blog/2024/12/02/sessions2024-guardian/</guid>
      <description>&lt;p&gt;これは&lt;a href=&#34;https://adventar.org/calendars/10732&#34;&gt;SESSIONS Advent Calendar 2024&lt;/a&gt;の2日目の記事です。&lt;/p&gt;

&lt;h1 id=&#34;はじめに&#34;&gt;はじめに&lt;/h1&gt;

&lt;p&gt;2024年11月16日～17日に日本科学未来館で開催された&lt;a href=&#34;https://sessions-party.com/events/sessions-2024/&#34;&gt;SESSIONS 2024&lt;/a&gt;に参加し、Realtime Graphicsコンペティションで3位をいただきました！&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/IMG_4279.HEIC&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/IMG_4279.jpg&#34; alt=&#34;ファイルサイズ&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SESSIONS 2024では、Realtime Graphicsコンペティションに作品を提出した他、セミナーとShader Jamの解説を行わせていただきました。&lt;/p&gt;

&lt;p&gt;セミナーとShader Jamについてはこちらの記事で紹介しました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gam0022.net/blog/2024/12/11/sessions2024-summary/&#34;&gt;SESSIONS 2024参加記録（セミナー登壇・ShaderJam解説・Realtime Graphics） | gam0022.net&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この記事では、Realtime Graphicsコンペティションの提出作品である『GUARDI▲N』のグラフィックス（主に距離関数によるモデリング）について解説をします。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h1 id=&#34;guardi-nについて&#34;&gt;GUARDI▲Nについて&lt;/h1&gt;

&lt;p&gt;『GUARDI▲N』は「特撮」をコンセプトのデモ作品（Browser Demo）です。&lt;/p&gt;

&lt;p&gt;2人でチーム制作を行い、映像とストーリーは私（gam0022）が担当し、音楽はHADHADさんが担当しました。&lt;/p&gt;

&lt;p&gt;当初のアイデアは「天使vs悪魔」の映画的なストーリーを持つデモを作りたいというものでしたが、最終的には「特撮」の要素に振り切ることにしました。ガーディアンが天使のリングを持つのは初期設定の名残りです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=T-V3mHlsgzQ&#34;&gt;📺️YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/live/8bzBYGiifIQ?t=16325s&#34;&gt;🔦Live Footage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://t.co/nXZkIBYdnC&#34;&gt;💬Pouet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://x.com/gam0022/status/1858308509856678328&#34;&gt;🐦️X/Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gam0022.net/webgl/#demoscne_guardian&#34;&gt;🌍️Online version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gam0022/chromatiq&#34;&gt;🐙 GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;movie-wrap&#34;&gt;
&lt;iframe width=&#34;1920&#34; height=&#34;1080&#34; src=&#34;https://www.youtube.com/embed/T-V3mHlsgzQ?si=1-AUgqum39BhrvsZ&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;&amp;quot;GUARDI▲N&amp;quot; by &lt;a href=&#34;https://twitter.com/gam0022?ref_src=twsrc%5Etfw&#34;&gt;@gam0022&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://twitter.com/katai5plate?ref_src=twsrc%5Etfw&#34;&gt;@katai5plate&lt;/a&gt;&lt;br&gt;&lt;br&gt;3rd Place in Realtime Graphics Competition at &lt;a href=&#34;https://twitter.com/hashtag/SESSIONS_Party?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SESSIONS_Party&lt;/a&gt; 2024&lt;a href=&#34;https://twitter.com/SESSIONS_Party?ref_src=twsrc%5Etfw&#34;&gt;@SESSIONS_Party&lt;/a&gt; 2024のリアルタイムGraphicsコンポで3位に入賞しました！&lt;br&gt;&lt;br&gt;映像は自作のWebGLエンジンによる24KB制限です。&lt;br&gt;&lt;br&gt;「特撮」をコンセプトにしました。 &lt;a href=&#34;https://t.co/wDVVRXWX26&#34;&gt;pic.twitter.com/wDVVRXWX26&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1858308509856678328?ref_src=twsrc%5Etfw&#34;&gt;November 18, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;Realtime Graphics Competitionで3位🥉をいただきました！ありがとうございます！&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://twitter.com/hashtag/SESSIONS_Party?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SESSIONS_Party&lt;/a&gt; &lt;a href=&#34;https://t.co/jhPsIPW867&#34;&gt;pic.twitter.com/jhPsIPW867&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1858103266183442445?ref_src=twsrc%5Etfw&#34;&gt;November 17, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h1 id=&#34;制作環境&#34;&gt;制作環境&lt;/h1&gt;

&lt;p&gt;『GUARDI▲N』は自作のWebGLエンジンによるデモです。&lt;/p&gt;

&lt;p&gt;音声のみ外部ファイル（mp3ファイル）で、映像は24KBのHTMLファイルで構成されています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/file-size.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/file-size.jpg&#34; alt=&#34;ファイルサイズ&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Revision 2020用に開発した「Chromatiq」という名前のシンプルなWebGLエンジンを再利用しました。&lt;/p&gt;

&lt;p&gt;「Chromatiq」はShadertoyのようなFullScreenQuadにマルチパスな描画ができるとてもシンプルなWebGLエンジンです。&lt;/p&gt;

&lt;p&gt;イメージとしてはGLSLエディターを排除したスタンドアローンなShadertoyが近いかもしれません。&lt;/p&gt;

&lt;p&gt;「Chromatiq」の詳細については以下の記事で説明しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gam0022.net/blog/2020/04/30/revision2020/&#34;&gt;Revision2020 PC 64K Intro 優勝作品『RE: SIMULATED』の技術解説 | gam0022.net&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;4年前からの変更点として、&lt;a href=&#34;https://lil-gui.georgealways.com/#&#34;&gt;lil-gui&lt;/a&gt;から&lt;a href=&#34;https://tweakpane.github.io/docs/&#34;&gt;Tweakpane&lt;/a&gt;に乗り換えました。&lt;/p&gt;

&lt;p&gt;Tweakpaneの方がスライダーが圧倒的に使い勝手が良く、小数点以下の細かい数字も調整できるため、制作効率が改善しました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/editor.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/editor.png&#34; alt=&#34;Editor画面&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tweakpaneは&lt;a href=&#34;https://normalize.fm/056/&#34;&gt;normalize.fmの#56&lt;/a&gt;で知りました。個人的には超オススメです！&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/hashtag/normalizeFM?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#normalizeFM&lt;/a&gt; で知ったけど良さそう。&lt;a href=&#34;https://t.co/D5A4eFNZjU&#34;&gt;https://t.co/D5A4eFNZjU&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1751515480735785026?ref_src=twsrc%5Etfw&#34;&gt;January 28, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h1 id=&#34;ビルや街の距離関数&#34;&gt;ビルや街の距離関数&lt;/h1&gt;

&lt;p&gt;ビルや街の地形の距離関数はMandelboxをベースにしています。&lt;/p&gt;

&lt;h2 id=&#34;完成カット&#34;&gt;完成カット&lt;/h2&gt;

&lt;p&gt;当初のコンセプトは「天使vs悪魔」でしたので、空に浮遊する巨大な空中都市をイメージしながらモデリングを行いました。&lt;/p&gt;

&lt;p&gt;しかし、途中から「特撮」に方向転換したため、天界という設定を残しつつも、「特撮」に合うような現代的なビルのジオメトリーとマテリアルに調整しました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/city-final-1.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/city-final-1.jpg&#34; alt=&#34;街 完成 カット1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/city-final-2.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/city-final-2.jpg&#34; alt=&#34;街 完成 カット2&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/city-final-3.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/city-final-3.jpg&#34; alt=&#34;街 完成 カット3&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;unityでの下書き&#34;&gt;Unityでの下書き&lt;/h2&gt;

&lt;p&gt;ビルのような突起のついたMandelboxをベースに、Unityを使ってパラメーターを調整しながら街の形状に仕上げました。&lt;/p&gt;

&lt;p&gt;球体でMandelboxの上部を切り取ることで、完成カットの街のような形状にしています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/city-unity-1.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/city-unity-1.jpg&#34; alt=&#34;街 Unity上の下書き カット1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/city-unity-2.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/city-unity-2.jpg&#34; alt=&#34;街 Unity上の下書き カット2&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;制作途中の様子&#34;&gt;制作途中の様子&lt;/h2&gt;

&lt;p&gt;制作途中の様子です。最初は中東風のジオメトリーでした。途中で鉄と錆を使ったスチームパンク風のマテリアルも試していました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/city-wip-1.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/city-wip-1.jpg&#34; alt=&#34;街 WIP カット1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;マテリアルについても鉄と錆によるスチームパンクのような渋い方向性も試していました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/city-wip-2.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/city-wip-2.jpg&#34; alt=&#34;街 WIP カット2&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/city-wip-3.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/city-wip-3.jpg&#34; alt=&#34;街 WIP カット3&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;ガーディアンの距離関数&#34;&gt;ガーディアンの距離関数&lt;/h1&gt;

&lt;p&gt;ガーディアンの距離関数はIFS（Iterated Function System）による折りたたみを使用しています。&lt;/p&gt;

&lt;p&gt;forループ内で空間を適当に回転や並行移動させ、最後にBoxの距離関数を評価しています。&lt;/p&gt;

&lt;p&gt;このアプローチは『Transcendental Cube』と完全に同じですので、IFSに興味がある方は以下の記事もご覧ください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gam0022.net/blog/2023/05/31/sessions2023-glsl-compo/&#34;&gt;SESSIONS 2023のGLSL Graphics Compoで準優勝しました（グラフィックス解説） | gam0022.net&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;UnityでIFSのパラメーターを調整しながらガーディアンのイメージに近づけていきました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/guardian-unity-1.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/guardian-unity-1.jpg&#34; alt=&#34;ガーディアン Unity上の下書き カット1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;制作の最初期には金色と黒色の百式風カラーリングも試しましたが、最終的には白と金色のカラーリングに決定しました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/guardian-prototype-2.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/guardian-prototype-2.jpg&#34; alt=&#34;ガーディアン プロトタイプ カット2&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/guardian-prototype-4.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/guardian-prototype-4.jpg&#34; alt=&#34;ガーディアン プロトタイプ カット4&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;モデリングについては、最初期の案がそのまま最終版となりました。&lt;/p&gt;

&lt;p&gt;最終版には、天使の要素として天使のリングを追加しました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/guardian-wip-1.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/guardian-wip-1.jpg&#34; alt=&#34;ガーディアン WIP カット1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/guardian-wip-2.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/guardian-wip-2.jpg&#34; alt=&#34;ガーディアン WIP カット2&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;戦闘機の距離関数&#34;&gt;戦闘機の距離関数&lt;/h1&gt;

&lt;p&gt;作品の中盤で怪獣に全滅させられてしまう戦闘機もIFSによる折りたたみを使用しています&lt;/p&gt;

&lt;p&gt;同じ天界の陣営であるため、雰囲気を統一するために戦闘機とガーディアンに同じIFSのアプローチを採用しました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/fighter-unity-1.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/fighter-unity-1.jpg&#34; alt=&#34;戦闘機 Unity上の下書き カット1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;video playsinline=&#34;&#34; loop=&#34;&#34; muted=&#34;&#34; controls=&#34;&#34; autoplay=&#34;&#34; width=&#34;100%&#34; src=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/fighter-movie-1.mp4&#34; poster=&#34;/images/posts/2024-12-02-sessions2024-guardian/fighter-movie-1.jpg&#34;&gt;&lt;/video&gt;

&lt;h1 id=&#34;怪獣の距離関数&#34;&gt;怪獣の距離関数&lt;/h1&gt;

&lt;p&gt;怪獣（ボス）もIFSを使用しています。&lt;/p&gt;

&lt;p&gt;元の距離関数はガーディアンと同様にBoxですが、Smooth Unionを使って角を丸め、生物の有機的なイメージに近づけました。&lt;/p&gt;

&lt;p&gt;こちらもUnityでIFSのパラメーターを調整し、怪獣のイメージに仕上げました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/boss-unity-1.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/boss-unity-1.jpg&#34; alt=&#34;怪獣 Unity上の下書き カット1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/boss-wip-1.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/boss-wip-1.jpg&#34; alt=&#34;怪獣 WIP カット1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;初期案では目玉がありませんでした。&lt;/p&gt;

&lt;video playsinline=&#34;&#34; loop=&#34;&#34; muted=&#34;&#34; controls=&#34;&#34; autoplay=&#34;&#34; width=&#34;100%&#34; src=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/boss-prototype-1.mp4&#34; poster=&#34;/images/posts/2024-12-02-sessions2024-guardian/boss-prototype-1.jpg&#34;&gt;&lt;/video&gt;

&lt;p&gt;ボスがレーザーで破壊されるアニメーションは、IFSの平行移動のパラメーターで実現しました。&lt;/p&gt;

&lt;video playsinline=&#34;&#34; loop=&#34;&#34; muted=&#34;&#34; controls=&#34;&#34; autoplay=&#34;&#34; width=&#34;100%&#34; src=&#34;https://gam0022.net/images/posts/2024-12-02-sessions2024-guardian/boss-death-1.mp4&#34; poster=&#34;/images/posts/2024-12-02-sessions2024-guardian/boss-death-1.jpg&#34;&gt;&lt;/video&gt;

&lt;h1 id=&#34;距離関数によるモデリングまとめ&#34;&gt;距離関数によるモデリングまとめ&lt;/h1&gt;

&lt;p&gt;Mandelboxから生み出したビルや街については、個人的にはかなり自信作です。今回のデモで終わらせるのはもったいないので、何か別の作品でもぜひ活用してみたいと考えています。&lt;/p&gt;

&lt;p&gt;ガーディアン、戦闘機、怪獣の3要素にはいずれもIFS（Iterated Function System）を使用しました。&lt;/p&gt;

&lt;p&gt;怪獣はよくあるIFS感が強すぎたので、可能ならもうひと工夫が必要だったかもしれません。&lt;/p&gt;

&lt;p&gt;ここ数年でIFSを多用しているため、次回作では別のアプローチも検討したいと思います。一方で、IFSにはまだ未開拓の可能性があると感じています。&lt;/p&gt;

&lt;h1 id=&#34;振り返り&#34;&gt;振り返り&lt;/h1&gt;

&lt;p&gt;かなり短期間の制作スケジュールでしたが、最終的にはなんとか形になったので良かったと思います。&lt;/p&gt;

&lt;p&gt;10月の前半は&lt;a href=&#34;https://gam0022.net/blog/2024/10/23/rtcamp10/&#34;&gt;レイトレ合宿 10&lt;/a&gt;などで忙しく、SESSIONSへの着手が遅れてしまいました。&lt;/p&gt;

&lt;p&gt;今回は映像に登場する要素の距離関数によるモデリングを完全に固めてから、最後にカメラワークと演出をつけるという制作フローで映像を制作しました。なんとか最終的には形になりましたが、仕上げの工程の時間がほとんど無くなってしまったのは反省点です。&lt;/p&gt;

&lt;p&gt;これまでの作品も多少ストーリー性はありましたが、アブストラクトなモデリングが多かったため、特撮という非アブストラクトなテーマで映像を作るのにはかなり苦労しました。『Transcendental Cube』では通常のカメラワークを乱数で生成していましたが、今回はカットごとにカメラワークを調整する必要があったため、過去作品と比べると工数が大幅に増えました。&lt;/p&gt;

&lt;p&gt;Code Graphics（GLSL Graphics）Compoのように映像を1パスで作成したため（※ポストエフェクトや半透明は別パスにしました）、GLSLが巨大化し、コンパイル時間の増加でイテレーション効率が低下したのも課題でした。&lt;/p&gt;

&lt;p&gt;ストーリー性のある複雑な作品を作る場合には、3D空間上にオブジェクトを配置し、オブジェクトスペースのレイマーチングを行えるような仕組みを構築するべきだと改めて感じました。&lt;/p&gt;

&lt;p&gt;今回は音楽が間に合わなかった場合、Code Graphicsで提出する可能性もあったため、1パスで進めることにしました。&lt;/p&gt;

&lt;p&gt;音楽担当のHADHADさんへの相談も締切直前になってしまいましたが、特撮感のある力強い曲を短期間で作っていただき、とても感謝しています。ありがとうございました🙏&lt;/p&gt;

&lt;h1 id=&#34;おわりに&#34;&gt;おわりに&lt;/h1&gt;

&lt;p&gt;SESSIONS 2024は最高のイベントでした！&lt;/p&gt;

&lt;p&gt;会場の雰囲気や臨場感を肌で直接感じることができ、やはりオフラインイベントには特別な魅力があると再認識できました。&lt;/p&gt;

&lt;p&gt;実際に参加者と話をしたり、作品についての感想やアイデアを交換したりすることで、新たな視点やインスピレーションを得ることができました。&lt;/p&gt;

&lt;p&gt;また、会場の音響や再生環境が例年より大幅に改善されていた点も非常に良かったです。&lt;/p&gt;

&lt;p&gt;今年から刷新された応募カテゴリーにより、ProcessingやジェネVJ界隈の人々も参加し、例年以上の盛り上がりを感じました。&lt;/p&gt;

&lt;p&gt;SESSIONS 2024の運営や準備をしてくださったオーガナイザーの皆さん、そして参加者の皆さん、本当にありがとうございました！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>レイトレ合宿10でポータルをテーマにしたアニメーションを作成しました</title>
      <link>https://gam0022.net/blog/2024/10/23/rtcamp10/</link>
      <pubDate>Wed, 23 Oct 2024 00:50:00 +0900</pubDate>
      
      <guid>https://gam0022.net/blog/2024/10/23/rtcamp10/</guid>
      <description>&lt;p&gt;10月11日(金)～10月13日(日)に熱海の初島で開催された&lt;a href=&#34;https://sites.google.com/view/rtcamp10&#34;&gt;レイトレ合宿10&lt;/a&gt;に参加しました。&lt;/p&gt;

&lt;p&gt;私はポータルをテーマにしたアニメーションを作成しました。&lt;/p&gt;

&lt;p&gt;前半はプリミティブな屋内シーン、後半はレイマーチングを用いた複雑なジオメトリーの屋外シーンと、対照的な2つのシーンを作成しました。&lt;/p&gt;

&lt;p&gt;水銀のような不思議な球体がポータルで2つのシーンを移動するという、少しストーリー性のあるアニメーションを目指しました。&lt;/p&gt;

&lt;p&gt;自作のレンダラーで &lt;strong&gt;256秒の制限時間&lt;/strong&gt; でレンダリングして同率6位（22人中）をいただきました！&lt;/p&gt;

&lt;p&gt;次の動画は合宿運営側で制限時間内にレンダリングしたものです。&lt;/p&gt;

&lt;video playsinline=&#34;&#34; loop=&#34;&#34; muted=&#34;&#34; controls=&#34;&#34; width=&#34;100%&#34; src=&#34;https://gam0022.net/images/posts/2024-10-20-rtcamp10/redflash_gam0022_gpu.mp4&#34; poster=&#34;/images/posts/2024-10-20-rtcamp10/200.jpg&#34;&gt;&lt;/video&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; 10に参加して、同率6位でした！&lt;br&gt;&lt;br&gt;添付の動画は、制限時間256秒で実際にレンダリングされたものです。&lt;br&gt;&lt;br&gt;ポータル用のBSDFを実装し、レンダラー本体のポータル専用処理を最小限に抑えました。&lt;br&gt;&lt;br&gt;今年もレイマーチングとポリゴンが混在するシーンに対応しました！&lt;br&gt;&lt;br&gt;みなさまお疲れ様でした！ &lt;a href=&#34;https://t.co/fzaxSYTA6C&#34;&gt;pic.twitter.com/fzaxSYTA6C&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1845357806406283371?ref_src=twsrc%5Etfw&#34;&gt;October 13, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;時間制限なしで、「4K解像度 + 0.5倍速 + 最後のフェードアウト演出あり」でレンダリングした動画をYouTubeにアップロードしました。&lt;/p&gt;

&lt;div class=&#34;movie-wrap&#34;&gt;
&lt;iframe width=&#34;1920&#34; height=&#34;1080&#34; src=&#34;https://www.youtube.com/embed/AvjOInfFRh0?si=kYcDkfmNEN9tltjV&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h1 id=&#34;レイトレ合宿とは&#34;&gt;レイトレ合宿とは？&lt;/h1&gt;

&lt;p&gt;レイトレ合宿は、オフラインレンダリングのオフライン集会です。&lt;/p&gt;

&lt;p&gt;この合宿の本戦では、参加者が自作のオフラインレンダラーを実装して、参加者同士の投票によって順位を競います。
参加者は自分の技術力と創造力を駆使して、独自のレンダラーを開発します。&lt;/p&gt;

&lt;p&gt;毎年レンダリングの制限時間が短縮されるため、その制限の中でどれだけ高品質な動画（もしくは画像）を生成できるかが試されます。&lt;/p&gt;

&lt;p&gt;合宿は本戦だけでなく、セミナーやレクリエーションも充実しており、参加者同士の交流や知識の共有も行われます。
セミナーでは最新の研究動向やトレンドが紹介され、レクリエーションではレイトレに関連するユニークな内容が催されます。&lt;/p&gt;

&lt;p&gt;なお、開催地は毎年ランダムにサンプリングされます。
去年のお寺での質素な合宿とは対照的に、今年は熱海の初島のリゾートホテルでのラグジュアリーな合宿でした。分散は高そうです。&lt;/p&gt;

&lt;p&gt;去年のレポートはこちらです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gam0022.net/blog/2023/09/20/rtcamp9/&#34;&gt;レイトレ合宿9で4次元立方体をテーマにしたアニメーションを作成しました | gam0022.net&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;天候にも恵まれて、島や海の風景はとても綺麗でした。&lt;/p&gt;

&lt;p&gt;当日の詳細な様子については、&lt;a href=&#34;https://x.com/TTRS_Yoshi_CG&#34;&gt;@TTRS_Yoshi_CG&lt;/a&gt;さんによるレポートがとても参考になります。
ぜひ合わせて読んでください。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;はてなブログに投稿しました&lt;br&gt;レイトレ合宿10参加記 - TTRS_Yoshiのブログ &lt;a href=&#34;https://t.co/mMWUlTnqWK&#34;&gt;https://t.co/mMWUlTnqWK&lt;/a&gt;&lt;a href=&#34;https://twitter.com/hashtag/%E3%81%AF%E3%81%A6%E3%81%AA%E3%83%96%E3%83%AD%E3%82%B0?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#はてなブログ&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt;&lt;/p&gt;&amp;mdash; Yoshi’s Dreann (@TTRS_Yoshi_CG) &lt;a href=&#34;https://twitter.com/TTRS_Yoshi_CG/status/1846405469507932193?ref_src=twsrc%5Etfw&#34;&gt;October 16, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h1 id=&#34;本戦の自作レンダラーの紹介&#34;&gt;本戦の自作レンダラーの紹介&lt;/h1&gt;

&lt;p&gt;GPUレンダラーをOptiXで開発しました。レンダラーの名前はredflashです。&lt;/p&gt;

&lt;p&gt;こちらがレンダラーのプレゼン資料です。&lt;/p&gt;

&lt;div class=&#34;google-slide-wrap&#34;&gt;
&lt;iframe src=&#34;https://docs.google.com/presentation/d/e/2PACX-1vTJxINrFwO7x5cMHgml-DDgPCS125yE1vM0-vys5lddcUguCEWK8u4TkFD6qZiSsQPnokoseKHZ4JP6/embed?start=false&amp;loop=false&amp;delayms=3000&#34; frameborder=&#34;0&#34; width=&#34;1440&#34; height=&#34;839&#34; allowfullscreen=&#34;true&#34; mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1IRcyHyze1QlRMq5KFJQLhltmN2310svw-IMybdgobKY/edit#slide=id.gbd0ef54b81_0_79&#34;&gt;Google Slides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://speakerdeck.com/gam0022/rtcamp10&#34;&gt;Speaker Deck&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;レンダラーのGitHubリポジトリはこちらです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gam0022/redflash_rtcamp10&#34;&gt;github.com/gam0022/redflash_rtcamp10&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;本戦の実行環境&#34;&gt;本戦の実行環境&lt;/h2&gt;

&lt;p&gt;レイトレ合宿10の本戦では、AWSのEC2環境上で自作のレンダラーを実行する必要があります。インスタンスタイプの選択肢は以下の通りです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GPUレンダラーの場合: g5.xlarge（私はこちらを選択）&lt;/li&gt;
&lt;li&gt;CPUレンダラーの場合: c7i.metal-48xl&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;昨年は2台のインスタンスが利用できましたが、今年はシンプルに1台構成に戻りました。&lt;/p&gt;

&lt;p&gt;1台に戻った理由は聞いていませんが、レンダラーの実行が複雑すぎたからかもしれません。&lt;/p&gt;

&lt;p&gt;詳細なレギュレーションは&lt;a href=&#34;https://github.com/shocker-0x15/rtcamp10_setup/blob/main/exec_env_spec.md&#34;&gt;こちら&lt;/a&gt;に記載があります。&lt;/p&gt;

&lt;h2 id=&#34;ポータルの実装&#34;&gt;ポータルの実装&lt;/h2&gt;

&lt;p&gt;今年は「ポータル」をテーマに選びました。&lt;/p&gt;

&lt;p&gt;他の人と被らなそうな、ビジュアル的にも面白いテーマを選んだつもりでしたが、3位のSamuelさんとテーマが被ってしまったのは予想外でした。&lt;/p&gt;

&lt;p&gt;ポータルの実装方法としてはシンプルなアプローチを取りました。2つのシーンを用意し、レイがポータルを通過することでシーンをトグルさせるようにしました。&lt;/p&gt;

&lt;p&gt;ポータル用のBSDFを用意し、シーンの切り替えはBSDF内で行うことで、レンダラー本体のポータル専用処理を最小限に抑えました。&lt;/p&gt;

&lt;p&gt;箇条書きにすると、以下の流れです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;シーンを2つ用意

&lt;ul&gt;
&lt;li&gt;OptiXのSceneGraphを2つ用意&lt;/li&gt;
&lt;li&gt;scene0（前半の屋内）とscene1（後半の屋外）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;rtPayload構造体にscene_idを定義

&lt;ul&gt;
&lt;li&gt;scene_idでトレースするシーンを切り替え&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ポータル用の特殊なBSDFを用意

&lt;ul&gt;
&lt;li&gt;レイは直進させる&lt;/li&gt;
&lt;li&gt;scene_idを0と1で反転させる&lt;/li&gt;
&lt;li&gt;BSDF実装の補足

&lt;ul&gt;
&lt;li&gt;closest_hit 関数の定義は共通&lt;/li&gt;
&lt;li&gt;BSDFのサンプル方向・pdf計算をCallableProgramで切り替えできる設計&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この手法はとくに参考にしたものはなく、脳内のアイデアをそのまま実装したところ、2日程度で実現できました。&lt;/p&gt;

&lt;p&gt;2つのシーン間でレイが接続されているため、外の景色が床のエリアライトとして反映されます。こちらはスライド用にレンダリングした画像です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2024-10-20-rtcamp10/portal.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2024-10-20-rtcamp10/portal.jpg&#34; alt=&#34;ポータルのエリアライト&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;前半の屋内シーンについて&#34;&gt;前半の屋内シーンについて&lt;/h2&gt;

&lt;p&gt;デノイザーを活用しているとはいえ、ノイズがほとんどない綺麗なレンダリング結果にできました。その点については非常に満足しています。&lt;/p&gt;

&lt;p&gt;屋内シーンのエリアライトについては、当初&lt;a href=&#34;https://gam0022.net/blog/2024/08/15/ltc-shader/&#34;&gt;LTC（Linearly Transformed Cosines）&lt;/a&gt;の利用も検討しましたが、
通常のパストレーシングでも十分に綺麗にレンダリングできることが分かったため、今回はLTCを使用しませんでした。&lt;/p&gt;

&lt;p&gt;ポリゴン数の少ないシンプルなシーンにしたため、レイのサンプリング回数を十分に稼ぐことができました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2024-10-20-rtcamp10/scene0.gif&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2024-10-20-rtcamp10/scene0.gif&#34; alt=&#34;前半シーンのライトのアニメーション&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;部屋のMeshなどはBlenderのGeometry Nodesを使用してPlaneを押し出すことで簡単に作成しました。&lt;/p&gt;

&lt;p&gt;レイトレ合宿とは関係ありませんが、BlenderのGeometry Nodesを実験していた様子です。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;zh&#34; dir=&#34;ltr&#34;&gt;Blender Geometry Nodes 完全理解！（大嘘） &lt;a href=&#34;https://t.co/jQEeCpACL8&#34;&gt;pic.twitter.com/jQEeCpACL8&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1841129249979449510?ref_src=twsrc%5Etfw&#34;&gt;October 1, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&#34;後半の屋外シーンのレイマーチングの高速化について&#34;&gt;後半の屋外シーンのレイマーチングの高速化について&lt;/h2&gt;

&lt;p&gt;レイマーチングではBVHなどの空間分割による交差判定の高速化ができないため、速度面ではかなり不利です。&lt;/p&gt;

&lt;p&gt;後半のシーンを屋外にした理由は、屋外シーンなら少ないサンプリングでも高周波ノイズが目立たないだろうという思惑があったためです。&lt;/p&gt;

&lt;p&gt;昨年実装した&lt;a href=&#34;https://diglib.eg.org/bitstream/handle/10.2312/egs20231014/057-060.pdf?sequence=1&amp;amp;isAllowed=y&#34;&gt;[Bán &amp;amp; Valasek 23] Automatic Step Size Relaxation in Sphere Tracing&lt;/a&gt;については、シーンとの相性が悪く、むしろ速度が落ちてしまったため、泣く泣く無効化しました。同著者のレイマーチングに関する新しい論文は今年は出ていないようでした。&lt;/p&gt;

&lt;p&gt;レイマーチングのプリミティブごとに衝突条件を調整したり、epsを距離に応じてアダプティブに変更したりと地道なチューニングを行った結果、ノイズの少ない結果を得ることができました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2024-10-20-rtcamp10/1200.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2024-10-20-rtcamp10/1200.jpg&#34; alt=&#34;最後のカット&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;本戦の感想&#34;&gt;本戦の感想&lt;/h2&gt;

&lt;p&gt;本戦について、今年も色々なアプローチや切り口に挑戦されている方が多く、個性を感じるレンダラーが多かったです。&lt;/p&gt;

&lt;p&gt;個人的に印象的だったのは、次の3作品でした。&lt;/p&gt;

&lt;h3 id=&#34;shockerさん-ボリュームメトリック-コースティクス&#34;&gt;Shockerさん：ボリュームメトリック・コースティクス&lt;/h3&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; 10終わりました～！&lt;br&gt;ボリューメトリック・スペクトラルなLVC-BPTを実装して指向性光源による光の経路の可視化・コースティクスのレンダリングを行いました。&lt;br&gt;1位でした！&lt;a href=&#34;https://t.co/gycurLPqsW&#34;&gt;https://t.co/gycurLPqsW&lt;/a&gt; &lt;a href=&#34;https://t.co/afs0U4TeZ9&#34;&gt;pic.twitter.com/afs0U4TeZ9&lt;/a&gt;&lt;/p&gt;&amp;mdash; Shocker (@Shocker_0x15) &lt;a href=&#34;https://twitter.com/Shocker_0x15/status/1845387260260474924?ref_src=twsrc%5Etfw&#34;&gt;October 13, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h3 id=&#34;shinji-ogakiさん-geometry-processing-nodesによるfur-generator&#34;&gt;Shinji Ogakiさん：Geometry Processing NodesによるFur Generator&lt;/h3&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; (Ray Tracing Camp) is an event where participants use their own renderer to generate animations within 256 seconds, competing on skill and the quality of their work.&lt;br&gt;&lt;br&gt;(&lt;a href=&#34;https://t.co/9Bj44pqBvo&#34;&gt;https://t.co/9Bj44pqBvo&lt;/a&gt;)&lt;br&gt;&lt;br&gt;Here is my submission🙂 &lt;a href=&#34;https://t.co/uMD1wOcrEE&#34;&gt;pic.twitter.com/uMD1wOcrEE&lt;/a&gt;&lt;/p&gt;&amp;mdash; Shinji Ogaki (@ShinjiOgaki) &lt;a href=&#34;https://twitter.com/ShinjiOgaki/status/1846078025273954812?ref_src=twsrc%5Etfw&#34;&gt;October 15, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h3 id=&#34;samuel-huang-初参加-さん-ポータルと本格的に作り込まれたエディター環境&#34;&gt;Samuel Huang（初参加！）さん：ポータルと本格的に作り込まれたエディター環境&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://raytracing.jp/rtcamp10/movie/Ether__Samuel_Huang__GPU.mp4&#34;&gt;動画リンク&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;セミナー&#34;&gt;セミナー&lt;/h1&gt;

&lt;p&gt;今回のレイトレ合宿10では、参加者全員（&lt;strong&gt;24人！&lt;/strong&gt;）がセミナーを発表をしました。&lt;/p&gt;

&lt;p&gt;私は「つぶやきGLSL解読！」という内容で発表を行いました。&lt;/p&gt;

&lt;p&gt;このセミナーでは、GLSLのコードをリアルタイムで編集しながら口頭で解説する形式を取りました。&lt;/p&gt;

&lt;p&gt;スライド資料は補助的に使っただけなので、スライドの情報だけでは伝わらない部分が多いと思いますが、雰囲気だけでも伝われば幸いです。&lt;/p&gt;

&lt;div class=&#34;google-slide-wrap&#34;&gt;
&lt;iframe src=&#34;https://docs.google.com/presentation/d/e/2PACX-1vSFRS9tepyqET4G_WH4masZffHYa-U8BSafrptmwePDqo59U0DMsoztnp3SWENY6DtVxDST-dloZkc7/embed?start=false&amp;loop=false&amp;delayms=3000&#34; frameborder=&#34;0&#34; width=&#34;1440&#34; height=&#34;839&#34; allowfullscreen=&#34;true&#34; mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1cyUxFuOa-5OTdOu2v9XfczwpI-HGx1c4G716FbvPez0/edit#slide=id.g27a8e85b88a_0_0&#34;&gt;Google Slides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://speakerdeck.com/gam0022/decode-twigl&#34;&gt;Speaker Deck&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;セミナーの感想&#34;&gt;セミナーの感想&lt;/h2&gt;

&lt;p&gt;参加者のバックグラウンドもさまざまだったため、さまざまな分野の興味深い話を聞くことができて、非常に楽しかったです。&lt;/p&gt;

&lt;p&gt;私は以下の3つの発表に票を入れました。&lt;/p&gt;

&lt;h3 id=&#34;知られざるnanの世界-by-hole-ベストプレゼンター賞&#34;&gt;知られざるNaNの世界 by hole（🏆 ベストプレゼンター賞）&lt;/h3&gt;

&lt;p&gt;NaN自体は広く知られていますが、詳しい情報については自分も含めてほとんどの人が知らないことが多かったため、非常に楽しめる発表でした。&lt;/p&gt;

&lt;p&gt;発表中に「へぇ～」と心の中で20回くらい叫んでしまいました。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;レイトレ合宿10でNaNとInfについての話をしました。&lt;br&gt;qNaNとsNaNの違いやNaN-Boxingといった、知ってる人にとっては常識だけど知らない人も多い、みたいな話題を取り上げました。&lt;br&gt;僕自身、まだまだ勉強中なので突っ込みください！&lt;a href=&#34;https://t.co/r05vnreh1h&#34;&gt;https://t.co/r05vnreh1h&lt;/a&gt;&lt;/p&gt;&amp;mdash; hole (@h013) &lt;a href=&#34;https://twitter.com/h013/status/1846092543773356383?ref_src=twsrc%5Etfw&#34;&gt;October 15, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h3 id=&#34;gpu-hash-tableについて-by-nishiki&#34;&gt;GPU Hash Tableについて by Nishiki&lt;/h3&gt;

&lt;iframe class=&#34;speakerdeck-iframe&#34; frameborder=&#34;0&#34; src=&#34;https://speakerdeck.com/player/554aaceac0f44ec790c18bb7e33366e4&#34; title=&#34;GPU Hash Table | レイトレ合宿10&#34; allowfullscreen=&#34;true&#34; style=&#34;border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 315;&#34; data-ratio=&#34;1.7777777777777777&#34;&gt;&lt;/iframe&gt;

&lt;h3 id=&#34;overlapped-multi-view-rendering-by-samuel-huang&#34;&gt;Overlapped Multi-View Rendering by Samuel Huang&lt;/h3&gt;

&lt;p&gt;ポータルの実装についての発表でした。&lt;/p&gt;

&lt;p&gt;（スライドは現時点では非公開）&lt;/p&gt;

&lt;h1 id=&#34;nanを讃える歌-silent-nan&#34;&gt;NaNを讃える歌 &amp;ldquo;Silent NaN&amp;rdquo;&lt;/h1&gt;

&lt;p&gt;1日目のセミナーの後、唐突に非常に眩しいケミカルライトが配られ、「NaNを讃える歌 &amp;ldquo;Silent NaN&amp;rdquo;」が流れました。&lt;/p&gt;

&lt;p&gt;ペンライトを振りながらNaNを讃える歌を口ずさむ集団は、異様な光景で非常にシュールでした。&lt;/p&gt;

&lt;p&gt;それに加えて、曲のクオリティも異常に高く、とても良い曲だなと思いました。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;今回の &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; では &lt;a href=&#34;https://twitter.com/ykozw88?ref_src=twsrc%5Etfw&#34;&gt;@ykozw88&lt;/a&gt; さんといっしょに&amp;quot;AI&amp;quot;の力を借りてNaNを讃える歌 &amp;quot;Silent NaN&amp;quot; をつくりました&lt;a href=&#34;https://t.co/oGPaefork2&#34;&gt;https://t.co/oGPaefork2&lt;/a&gt;&lt;br&gt;&lt;br&gt;&amp;quot;No solution, just a NaN star.&amp;quot;、&amp;quot;Live with ambiguity.&amp;quot;あたりがお気に入りの歌詞です。&lt;/p&gt;&amp;mdash; hole (@h013) &lt;a href=&#34;https://twitter.com/h013/status/1845629474144141809?ref_src=twsrc%5Etfw&#34;&gt;October 14, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;qme&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/7u0dgH8O5h&#34;&gt;pic.twitter.com/7u0dgH8O5h&lt;/a&gt;&lt;/p&gt;&amp;mdash; ハガ (@hagat) &lt;a href=&#34;https://twitter.com/hagat/status/1844748184758944240?ref_src=twsrc%5Etfw&#34;&gt;October 11, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h1 id=&#34;スポンザのジグソーパズル&#34;&gt;スポンザのジグソーパズル&lt;/h1&gt;

&lt;p&gt;レイトレ合宿では、毎年ユニークなレクリエーションが開催されます。&lt;/p&gt;

&lt;p&gt;今年のレクリエーションは「Sponzaのジグソーパズル」でした。&lt;/p&gt;

&lt;p&gt;レクリエーションの内容は直前まで秘密にされていたため、参加者は「一体何が起きるんだろう？」という気持ちで臨むことになりました。&lt;/p&gt;

&lt;p&gt;昨年は難易度が高すぎる「マテリアル神経衰弱」、過去には本格的な「レイトレ検定」などが開催されました。&lt;/p&gt;

&lt;p&gt;今年は各チーム3人に分かれ、チーム対抗で「500ピースのSponzaのジグソーパズル」を1時間で組み立てるというものでした。&lt;/p&gt;

&lt;p&gt;Sponzaは旗の部分は色がついているものの、影など同じような色の領域も多いため、ジグソーパズルとしての難易度は高めです。&lt;/p&gt;

&lt;p&gt;500ピースのパズルを1時間で組み立てることは不可能だったので、勝敗は完成したピースの数で決めることになりました。&lt;/p&gt;

&lt;p&gt;私たちのチームと優勝チームのピース数はほぼ同じだったのですが、最終的には私がチーム代表としてじゃんけんをし、敗北しました… 😭&lt;/p&gt;

&lt;p&gt;今年は惜しいところまで勝ち進めていたので、非常に残念でした。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;Sponzaのジグソーパズル🧩難しすぎる😱 &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/NBhu0qc5mC&#34;&gt;pic.twitter.com/NBhu0qc5mC&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1845004022857511076?ref_src=twsrc%5Etfw&#34;&gt;October 12, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Yoshi’s Dreamさんは帰宅後に7時間かけて完成させていました！&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;Crytek Sponzaパズル(500 pieces)完成！&lt;br&gt;&lt;br&gt;所要時間: 7時間 &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/0QxcQ1uvw9&#34;&gt;pic.twitter.com/0QxcQ1uvw9&lt;/a&gt;&lt;/p&gt;&amp;mdash; Yoshi’s Dreann (@TTRS_Yoshi_CG) &lt;a href=&#34;https://twitter.com/TTRS_Yoshi_CG/status/1845715482953072906?ref_src=twsrc%5Etfw&#34;&gt;October 14, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h1 id=&#34;全体の感想&#34;&gt;全体の感想&lt;/h1&gt;

&lt;p&gt;今年も参加者の方々から多くの刺激を受けることができました！&lt;/p&gt;

&lt;p&gt;本戦やセミナーで様々な知識を吸収できたことはもちろん、今年のレクリエーションもレイトレに関連したユニークな内容で非常に楽しめました。&lt;/p&gt;

&lt;p&gt;素晴らしいイベントを開催してくださった運営の方々、そして他の参加者の皆さん、本当にありがとうございました！&lt;/p&gt;

&lt;h1 id=&#34;初島-熱海の観光&#34;&gt;初島～熱海の観光&lt;/h1&gt;

&lt;p&gt;最後にレイトレ合宿に関する主に私のツイートをまとめます。&lt;/p&gt;

&lt;p&gt;今回の初島のホテルは、海や夜空の景色が絶景で、料理もとても美味しかったので、最高でした！&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;温泉シャーク♨️🦈 &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/F8GEuF5Pr3&#34;&gt;pic.twitter.com/F8GEuF5Pr3&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1844582100910931976?ref_src=twsrc%5Etfw&#34;&gt;October 11, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;ラーメンとザンギ食べる &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/LOrmEjZDO6&#34;&gt;pic.twitter.com/LOrmEjZDO6&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1844583043912303040?ref_src=twsrc%5Etfw&#34;&gt;October 11, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;リサとガスパール &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/PPPDzZGGRp&#34;&gt;pic.twitter.com/PPPDzZGGRp&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1844606844532293658?ref_src=twsrc%5Etfw&#34;&gt;October 11, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;部屋が広い！海が見える！ &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/uRpABVdR4W&#34;&gt;pic.twitter.com/uRpABVdR4W&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1844623714387677691?ref_src=twsrc%5Etfw&#34;&gt;October 11, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;絶景を背景にセミナー中🌅 &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/vwFIYI12YM&#34;&gt;pic.twitter.com/vwFIYI12YM&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1844653730182144346?ref_src=twsrc%5Etfw&#34;&gt;October 11, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;qme&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/7u0dgH8O5h&#34;&gt;pic.twitter.com/7u0dgH8O5h&lt;/a&gt;&lt;/p&gt;&amp;mdash; ハガ (@hagat) &lt;a href=&#34;https://twitter.com/hagat/status/1844748184758944240?ref_src=twsrc%5Etfw&#34;&gt;October 11, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;zxx&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://t.co/5KWu7oEjOC&#34;&gt;pic.twitter.com/5KWu7oEjOC&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1844883945831399878?ref_src=twsrc%5Etfw&#34;&gt;October 11, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;景色が最高すぎる &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/KBGu7g02oX&#34;&gt;pic.twitter.com/KBGu7g02oX&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1844883584001396974?ref_src=twsrc%5Etfw&#34;&gt;October 11, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;朝食 &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/eZ5P1ZPvuT&#34;&gt;pic.twitter.com/eZ5P1ZPvuT&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1844881535188734181?ref_src=twsrc%5Etfw&#34;&gt;October 11, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;昼ごはん &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/9OaLyMUiyj&#34;&gt;pic.twitter.com/9OaLyMUiyj&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1844945037769220497?ref_src=twsrc%5Etfw&#34;&gt;October 12, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;天気が良いので散歩が気持ちいい &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/Yw2LGzJK5G&#34;&gt;pic.twitter.com/Yw2LGzJK5G&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1844945512639889564?ref_src=twsrc%5Etfw&#34;&gt;October 12, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;Sponzaのジグソーパズル🧩難しすぎる😱 &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/NBhu0qc5mC&#34;&gt;pic.twitter.com/NBhu0qc5mC&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1845004022857511076?ref_src=twsrc%5Etfw&#34;&gt;October 12, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;本線開始！ &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/jocWrgrieF&#34;&gt;pic.twitter.com/jocWrgrieF&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1845004305322893564?ref_src=twsrc%5Etfw&#34;&gt;October 12, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;アウトドアレイトレ合宿すごすぎる🚣 &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/QlcE3a72xX&#34;&gt;pic.twitter.com/QlcE3a72xX&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1845027947863998899?ref_src=twsrc%5Etfw&#34;&gt;October 12, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;おはようございます🌞 &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/lxNak7HakI&#34;&gt;pic.twitter.com/lxNak7HakI&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1845219114056605802?ref_src=twsrc%5Etfw&#34;&gt;October 12, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;続き &lt;a href=&#34;https://t.co/DWUTWcBOSR&#34;&gt;pic.twitter.com/DWUTWcBOSR&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1845224386804187525?ref_src=twsrc%5Etfw&#34;&gt;October 12, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;セミナー最終日！ &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/GWcTN1O2RG&#34;&gt;pic.twitter.com/GWcTN1O2RG&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1845241098354163949?ref_src=twsrc%5Etfw&#34;&gt;October 12, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;朝食ビュッフェ &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/ObzeXIvnnb&#34;&gt;pic.twitter.com/ObzeXIvnnb&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1845251310448410865?ref_src=twsrc%5Etfw&#34;&gt;October 12, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;最後のセミナーが始まっています &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/xSxlsyyKOZ&#34;&gt;pic.twitter.com/xSxlsyyKOZ&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1845269552948715541?ref_src=twsrc%5Etfw&#34;&gt;October 13, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;閉会式 &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/iRUy14mA6P&#34;&gt;pic.twitter.com/iRUy14mA6P&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1845283790358446559?ref_src=twsrc%5Etfw&#34;&gt;October 13, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; 10に参加して、同率6位でした！&lt;br&gt;&lt;br&gt;添付の動画は、制限時間256秒で実際にレンダリングされたものです。&lt;br&gt;&lt;br&gt;ポータル用のBSDFを実装し、レンダラー本体のポータル専用処理を最小限に抑えました。&lt;br&gt;&lt;br&gt;今年もレイマーチングとポリゴンが混在するシーンに対応しました！&lt;br&gt;&lt;br&gt;みなさまお疲れ様でした！ &lt;a href=&#34;https://t.co/fzaxSYTA6C&#34;&gt;pic.twitter.com/fzaxSYTA6C&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1845357806406283371?ref_src=twsrc%5Etfw&#34;&gt;October 13, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;6位の賞品です！🎁&lt;br&gt;コンピューターが使えなくなったときに役立ちそう(?)🤔&lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/WEz85okmOD&#34;&gt;pic.twitter.com/WEz85okmOD&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1845365426429317325?ref_src=twsrc%5Etfw&#34;&gt;October 13, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;qme&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/3k2LmCUYo5&#34;&gt;pic.twitter.com/3k2LmCUYo5&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1845305806260142560?ref_src=twsrc%5Etfw&#34;&gt;October 13, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;お昼とおやつ &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/O2WsX58K3q&#34;&gt;pic.twitter.com/O2WsX58K3q&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1845349276509159590?ref_src=twsrc%5Etfw&#34;&gt;October 13, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;私は延泊したので、ここからは延長戦です。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;zxx&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://t.co/1O2ZSyXJtZ&#34;&gt;pic.twitter.com/1O2ZSyXJtZ&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1845620115456630793?ref_src=twsrc%5Etfw&#34;&gt;October 14, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-conversation=&#34;none&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;バー🍷 &lt;a href=&#34;https://t.co/IsCHTNw7sy&#34;&gt;pic.twitter.com/IsCHTNw7sy&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1845620403076751495?ref_src=twsrc%5Etfw&#34;&gt;October 14, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;iPhoneで撮影できるほど星もよく見えました。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;iPhone 14で撮影した星空🌌&lt;br&gt;&lt;br&gt;人工的な光源がなく、空気が綺麗で、天気が良かったので肉眼でも同じくらい星が見えました。&lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/rqo99NG0oa&#34;&gt;pic.twitter.com/rqo99NG0oa&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1845493218160628192?ref_src=twsrc%5Etfw&#34;&gt;October 13, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;朝食&lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; 延長戦 &lt;a href=&#34;https://t.co/H56Q6kh7kr&#34;&gt;pic.twitter.com/H56Q6kh7kr&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1845621303103160714?ref_src=twsrc%5Etfw&#34;&gt;October 14, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;zxx&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://t.co/3dcfWDZWkb&#34;&gt;pic.twitter.com/3dcfWDZWkb&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1845628814979928105?ref_src=twsrc%5Etfw&#34;&gt;October 14, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;密漁禁止🈲⚠️ &lt;a href=&#34;https://t.co/G6DzzAncXP&#34;&gt;pic.twitter.com/G6DzzAncXP&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1845650784169742589?ref_src=twsrc%5Etfw&#34;&gt;October 14, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;写真だと分かりづらいですが、船の通った後の海面が周囲より明るい青色になる現象に気が付きました。
まだまだCGで再現しきれていないネタは多そうだなという発見がありました。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;さよなら初島👋 &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/F5hEMEqeGB&#34;&gt;pic.twitter.com/F5hEMEqeGB&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1845653815145754984?ref_src=twsrc%5Etfw&#34;&gt;October 14, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;近距離でカモメを撮影できました。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;qme&#34; dir=&#34;ltr&#34;&gt;🐦 &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/JgcEnw60Pz&#34;&gt;pic.twitter.com/JgcEnw60Pz&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1845656461252476936?ref_src=twsrc%5Etfw&#34;&gt;October 14, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;スコット本店 &lt;a href=&#34;https://t.co/2Nq2U90dnh&#34;&gt;pic.twitter.com/2Nq2U90dnh&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1845681195532853308?ref_src=twsrc%5Etfw&#34;&gt;October 14, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;東京に戻る前にMOA美術館に行きました。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;MOA美術館から初島が見える &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/FPmNJWvpB8&#34;&gt;pic.twitter.com/FPmNJWvpB8&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1845693313455985104?ref_src=twsrc%5Etfw&#34;&gt;October 14, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;zxx&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://t.co/4Ub6ZScNN8&#34;&gt;pic.twitter.com/4Ub6ZScNN8&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1845716710684557680?ref_src=twsrc%5Etfw&#34;&gt;October 14, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;花弁が貝殻になってるこっちの方が分かりやすそう &lt;a href=&#34;https://t.co/YWI1Z9Prcd&#34;&gt;pic.twitter.com/YWI1Z9Prcd&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1845730786382950722?ref_src=twsrc%5Etfw&#34;&gt;October 14, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;MOA美術館、建築も見応えがあった &lt;a href=&#34;https://t.co/jFNCj0huYF&#34;&gt;pic.twitter.com/jFNCj0huYF&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1845758201222123645?ref_src=twsrc%5Etfw&#34;&gt;October 14, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;NEW ガッパ &lt;a href=&#34;https://t.co/bxMCkvFFSJ&#34;&gt;pic.twitter.com/bxMCkvFFSJ&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1845761915714462109?ref_src=twsrc%5Etfw&#34;&gt;October 14, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;初島は東京からアクセスが良く、海がとても綺麗だったので、また行きたいと思いました。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>新千歳空港国際アニメーション映画祭のNEW CHITOSE 30 Seconds部門に『Transcendental Cube』が入選しました</title>
      <link>https://gam0022.net/blog/2024/10/21/airport-anifes2024-nc30s/</link>
      <pubDate>Mon, 21 Oct 2024 13:10:00 +0900</pubDate>
      
      <guid>https://gam0022.net/blog/2024/10/21/airport-anifes2024-nc30s/</guid>
      <description>&lt;p&gt;私（&lt;a href=&#34;https://x.com/gam0022&#34;&gt;@gam0022&lt;/a&gt;）と &lt;a href=&#34;https://x.com/sadakkey&#34;&gt;@sadakkey&lt;/a&gt; さんが共同で制作した作品『Transcendental Cube』が、新千歳空港国際アニメーション映画祭のNEW CHITOSE 30 Seconds部門に入選しました！&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://airport-anifes.jp/competition/nc30sa_selection/&#34;&gt;NEW CHITOSE 30 Seconds部門 入選作品発表 | 第11回 新千歳空港国際アニメーション映画祭&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;全172作品の応募の中から、入選の8作品に選ばれました🎉&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;新千歳空港館内各所のデジタルサイネージで、一ヶ月間（2024年10月5日～11月5日）放映される予定です。&lt;/p&gt;

&lt;p&gt;もし新千歳空港にお立ち寄りの際には、ぜひご覧ください！映画祭の会期中（11/1～11/5）には私も足を運ぶ予定です。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;新千歳空港国際アニメーション映画祭のNEW CHITOSE 30 Seconds部門に『Transcendental Cube』が入選しました！&lt;a href=&#34;https://twitter.com/sadakkey?ref_src=twsrc%5Etfw&#34;&gt;@sadakkey&lt;/a&gt; さんとの共同制作の作品です。&lt;br&gt;&lt;br&gt;新千歳空港のデジタルサイネージで放映されるそうなので、とても楽しみです！&lt;a href=&#34;https://t.co/4wiMpNdFhY&#34;&gt;https://t.co/4wiMpNdFhY&lt;/a&gt; &lt;a href=&#34;https://t.co/YgJ7QOpIMl&#34;&gt;https://t.co/YgJ7QOpIMl&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1839702676503990629?ref_src=twsrc%5Etfw&#34;&gt;September 27, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;さらに、映画祭の公式のTwitterで私たちの作品を取り上げていただきました！ありがとうございます！&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;30Seconds部門入選作品も毎日放映されてます！✨写真はちょうど良きタイミング。 &lt;a href=&#34;https://t.co/WhSzj5wq41&#34;&gt;https://t.co/WhSzj5wq41&lt;/a&gt;&lt;/p&gt;&amp;mdash; 新千歳空港国際アニメーション映画祭 (@airportanifes) &lt;a href=&#34;https://twitter.com/airportanifes/status/1847816206050611258?ref_src=twsrc%5Etfw&#34;&gt;October 20, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;10/31～1/7に北海道に滞在し、映画祭にも全日程参加しました。そのときに撮影した動画です。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-conversation=&#34;none&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;自分の書いたシェーダーが国際空港で大画面上映される人生は予想できなかった✈️&lt;br&gt;&lt;br&gt;人生は面白い！&lt;a href=&#34;https://twitter.com/hashtag/newchitose2024?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#newchitose2024&lt;/a&gt; &lt;a href=&#34;https://t.co/IhR12znket&#34;&gt;pic.twitter.com/IhR12znket&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1852615568999776340?ref_src=twsrc%5Etfw&#34;&gt;November 2, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&#34;正方形でレンダリングした-transcendental-cube&#34;&gt;正方形でレンダリングした『Transcendental Cube』&lt;/h2&gt;

&lt;h3 id=&#34;full尺&#34;&gt;Full尺&lt;/h3&gt;

&lt;iframe width=&#34;560&#34; height=&#34;560&#34; src=&#34;https://www.youtube.com/embed/k5c7hZN_ZWg?si=Ddh8V4YbsgrbTwCp&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3 id=&#34;30秒版&#34;&gt;30秒版&lt;/h3&gt;

&lt;iframe width=&#34;560&#34; height=&#34;560&#34; src=&#34;https://www.youtube.com/embed/dJ9D-YMZDmA?si=NhVeLEz6bkEFs5sP&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;h2 id=&#34;関連記事&#34;&gt;関連記事&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gam0022.net/blog/2023/05/31/sessions2023-glsl-compo/&#34;&gt;SESSIONS 2023のGLSL Graphics Compoで準優勝しました（グラフィックス解説） | gam0022.net&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>『WebGL 総本山 &#43; normalize.fm あわせて１３周年感謝祭』でGLSLライブコーディングしました</title>
      <link>https://gam0022.net/blog/2024/10/21/livecoding-sn13/</link>
      <pubDate>Mon, 21 Oct 2024 13:00:20 +0900</pubDate>
      
      <guid>https://gam0022.net/blog/2024/10/21/livecoding-sn13/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://sn13.peatix.com/&#34;&gt;『WebGL 総本山 + normalize.fm あわせて１３周年感謝祭』&lt;/a&gt;の夜の部のShader JamsでGLSLのシェーダーライブコーディングしました。&lt;/p&gt;

&lt;p&gt;#normalizeFM のロゴの形状だけを使って4つのシーンを作りました。&lt;/p&gt;

&lt;p&gt;音楽も &lt;a href=&#34;https://x.com/himazin917&#34;&gt;@himazin917&lt;/a&gt; さんによるSonic Piのライブコーディングです。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;「WebGL 総本山 + &lt;a href=&#34;https://twitter.com/normalizefm?ref_src=twsrc%5Etfw&#34;&gt;@normalizefm&lt;/a&gt; あわせて１３周年感謝祭」夜の部 Shader Jamsでライブコーディングした作品です！&lt;a href=&#34;https://twitter.com/hashtag/normalizeFM?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#normalizeFM&lt;/a&gt; のロゴの形状だけを使って4つのシーンを作りました！&lt;br&gt;&lt;br&gt;音楽も &lt;a href=&#34;https://twitter.com/himazin917?ref_src=twsrc%5Etfw&#34;&gt;@himazin917&lt;/a&gt; さんによるSonic Piのライブコーディングです！&lt;br&gt;&lt;br&gt;Shadertoy版: &lt;a href=&#34;https://t.co/G2HaBci6pR&#34;&gt;https://t.co/G2HaBci6pR&lt;/a&gt; &lt;a href=&#34;https://t.co/lLPuzrVNQx&#34;&gt;pic.twitter.com/lLPuzrVNQx&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1840262849983328528?ref_src=twsrc%5Etfw&#34;&gt;September 29, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gist.github.com/gam0022/074922bbfb406be3b7bd37218068ad12&#34;&gt;BonzomaticのGLSLシェーダー&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;shadertoy.com/view/XX2yRt&#34;&gt;Shadertoy移植版&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;5人のメンバーによる音と映像のライブコーディングを行い、その一人として参加しました。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;こちら、夜の部のShader Jamsのセットアップをお手伝いしております。&lt;br&gt;&lt;br&gt;Renard &lt;a href=&#34;https://twitter.com/Renard_VRC?ref_src=twsrc%5Etfw&#34;&gt;@Renard_VRC&lt;/a&gt;&lt;br&gt;gam0022 &lt;a href=&#34;https://twitter.com/gam0022?ref_src=twsrc%5Etfw&#34;&gt;@gam0022&lt;/a&gt;&lt;br&gt;kamoshika &lt;a href=&#34;https://twitter.com/kamoshika_vrc?ref_src=twsrc%5Etfw&#34;&gt;@kamoshika_vrc&lt;/a&gt;&lt;br&gt;Niko_14 &lt;a href=&#34;https://twitter.com/himazin917?ref_src=twsrc%5Etfw&#34;&gt;@himazin917&lt;/a&gt;&lt;br&gt;&lt;br&gt;と、doxasユニバースに纏わる豪華なコーダーでセットアップしておりますので、ぜひご来場ください〜〜。 &lt;a href=&#34;https://t.co/VoUodSNfCr&#34;&gt;https://t.co/VoUodSNfCr&lt;/a&gt;&lt;/p&gt;&amp;mdash; 0b5vr (@0b5vr) &lt;a href=&#34;https://twitter.com/0b5vr/status/1825887074001830213?ref_src=twsrc%5Etfw&#34;&gt;August 20, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&#34;当日の会場の様子&#34;&gt;当日の会場の様子&lt;/h2&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;zxx&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://t.co/WPfdY3XFzQ&#34;&gt;pic.twitter.com/WPfdY3XFzQ&lt;/a&gt;&lt;/p&gt;&amp;mdash; kiNaNkomoti (@Kinakomoti2357) &lt;a href=&#34;https://twitter.com/Kinakomoti2357/status/1839989373326307782?ref_src=twsrc%5Etfw&#34;&gt;September 28, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;zxx&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://t.co/NO3pktKtGD&#34;&gt;pic.twitter.com/NO3pktKtGD&lt;/a&gt;&lt;/p&gt;&amp;mdash; Renard (@Renard_VRC) &lt;a href=&#34;https://twitter.com/Renard_VRC/status/1840061611895337291?ref_src=twsrc%5Etfw&#34;&gt;September 28, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&#34;さいごに&#34;&gt;さいごに&lt;/h2&gt;

&lt;p&gt;normalize.fmは初回から全話聞いているくらい熱烈なファンだったので、ライブコーディングのお誘いをいただき、大変光栄でした！とても楽しかったです！&lt;/p&gt;

&lt;p&gt;イベントにご参加いただいた方々、ありがとうございました！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LTC（Linearly Transformed Cosines）によるエリアライトのUnity URP実装の解説のスライド共有</title>
      <link>https://gam0022.net/blog/2024/08/15/ltc-shader/</link>
      <pubDate>Thu, 15 Aug 2024 10:38:57 +0900</pubDate>
      
      <guid>https://gam0022.net/blog/2024/08/15/ltc-shader/</guid>
      <description>&lt;p&gt;昨日、8月14日に&lt;a href=&#34;https://connpass.com/event/325438/&#34;&gt;「ゆるゆるシェーダー交流会」&lt;/a&gt;が開催されました。&lt;/p&gt;

&lt;p&gt;私は『LTC（Linearly Transformed Cosines）によるエリアライトのUnity URP実装』というタイトルでライトニングトーク（LT）を行いました。&lt;/p&gt;

&lt;p&gt;Eric HeitzさんがSIGGRAPH 2016で発表した、エリアライトをリアルタイムに計算する手法をURP上で実装したので、その解説をしました。&lt;/p&gt;

&lt;p&gt;以下に発表資料を共有します。&lt;/p&gt;

&lt;div class=&#34;google-slide-wrap&#34;&gt;
&lt;iframe src=&#34;https://docs.google.com/presentation/d/1OAey5wGU7BIKw7YOpILKz-Ymqv-jysgFeWpvJVVdXm0/embed?start=false&amp;loop=false&amp;delayms=3000&#34; frameborder=&#34;0&#34; width=&#34;1440&#34; height=&#34;839&#34; allowfullscreen=&#34;true&#34; mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1OAey5wGU7BIKw7YOpILKz-Ymqv-jysgFeWpvJVVdXm0/edit?usp=sharing&#34;&gt;スライドの直接リンク&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Twitterのスレッドはこちらです。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;Unity URP上でLTC（Linearly Transformed Cosines）によるエリアライトを実装してみました。&lt;br&gt;&lt;br&gt;パストレーシングと同じようなクオリティのエリアライトがリアルタイムで動作して感動しました！発明された方は偉大！ &lt;a href=&#34;https://t.co/usMWcc6BTO&#34;&gt;pic.twitter.com/usMWcc6BTO&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1812296534874284391?ref_src=twsrc%5Etfw&#34;&gt;July 14, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;この手法のコアなアイデアは、複雑なBRDF分布を単純なcos分布に線形変換し、cos分布上で解析的に積分するというものです。&lt;/p&gt;

&lt;p&gt;エリアライトに必要なBRDFの積分を巧妙なトリックで処理しており、とても賢い手法で個人的には非常に感動しました。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>学園アイドルマスターの眉毛のShaderをUnityで再現してみた</title>
      <link>https://gam0022.net/blog/2024/05/29/gakumasu-mayuge-shader/</link>
      <pubDate>Wed, 29 May 2024 12:00:43 +0900</pubDate>
      
      <guid>https://gam0022.net/blog/2024/05/29/gakumasu-mayuge-shader/</guid>
      <description>&lt;p&gt;ここ最近、&lt;a href=&#34;https://gakuen.idolmaster-official.jp/&#34;&gt;学園アイドルマスター（学マス）&lt;/a&gt;の鼻や眉毛のシェーダーがTwitter（現X）で話題になっていました。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;学マス、鼻先の黒い点が横から見た時に消えるよう処理をしている&lt;br&gt;&lt;br&gt;顔面全体の輪郭線を切ってるのもあって横顔で急な黒が浮いて悪目立ちしたり、鼻の頂点が欠けてシルエットの綺麗さが失われてしまうことに対する対処かな &lt;a href=&#34;https://t.co/82TiB41IDR&#34;&gt;pic.twitter.com/82TiB41IDR&lt;/a&gt;&lt;/p&gt;&amp;mdash; のすけ (@noske2801) &lt;a href=&#34;https://twitter.com/noske2801/status/1791165446764495126?ref_src=twsrc%5Etfw&#34;&gt;May 16, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;学マス、顔周りでいうと眉毛と目周りが正面からはステンシルして髪より前に見えているが回転させていくと横顔に近づくある程度の角度でフェードアウトしてく。キャラのデザインによっては横から見た時ステンシルしてる眉毛はチラつきが気になったりするのでとても真似したい &lt;a href=&#34;https://t.co/8O7WjcbF9w&#34;&gt;pic.twitter.com/8O7WjcbF9w&lt;/a&gt;&lt;/p&gt;&amp;mdash; とれ (@clubnemos) &lt;a href=&#34;https://twitter.com/clubnemos/status/1791175839469740474?ref_src=twsrc%5Etfw&#34;&gt;May 16, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;鼻のアウトラインがカメラの角度で消える実装は容易に思いつくのですが（カメラのViewベクトルと頭のforwardベクトルの内積からディゾルブ等）、&lt;/p&gt;

&lt;p&gt;眉毛が角度でフェードする処理（正面から見ると眉毛が前髪より手前に、横顔に近づくと眉毛がフェードアウトする処理）の実装はすぐには思いつきませんでした。&lt;/p&gt;

&lt;p&gt;技術的にも面白そうなテーマだと思ったので、Unityで再現することにしました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2024-05-29-gakumasu-mayuge-shader/mayu.gif&#34; alt=&#34;mayu.gif&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h1 id=&#34;unity-urp上の再現&#34;&gt;Unity URP上の再現&lt;/h1&gt;

&lt;p&gt;Stencilを使うパターンと、Stencilを使わずにDepth Offsetするパターンの2つをUnity URP上で実装しました。&lt;/p&gt;

&lt;p&gt;プロジェクトファイルはGitHubでも公開しました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gam0022/ShaderPlaygroundURP&#34;&gt;github.com/gam0022/ShaderPlaygroundURP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;モデルの準備&#34;&gt;モデルの準備&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://unity-chan.com/&#34;&gt;UnityちゃんシリーズのSDトーコちゃん&lt;/a&gt;の3Dモデルを使わせていただきました。&lt;/p&gt;

&lt;p&gt;眉毛のメッシュが顔のメッシュとマージされていたので、Blenderの練習も兼ねて眉毛を独立したメッシュとして分割しました。&lt;/p&gt;

&lt;p&gt;Meshを独立させることで、Unity上で独立したパスとして描画ができます。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-conversation=&#34;none&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;使わせていただいた3DモデルはSDトーコちゃんです。&lt;a href=&#34;https://t.co/0THUJaTto6&#34;&gt;https://t.co/0THUJaTto6&lt;/a&gt;&lt;br&gt;&lt;br&gt;眉毛だけ独立したPassで描画したかったので、Blenderの練習も兼ねて眉毛の部分だけMeshを分割する調整をしました。 &lt;a href=&#34;https://t.co/GGSB62osG6&#34;&gt;pic.twitter.com/GGSB62osG6&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1793487696608067731?ref_src=twsrc%5Etfw&#34;&gt;May 23, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&#34;stencilを使うパターン&#34;&gt;Stencilを使うパターン&lt;/h2&gt;

&lt;p&gt;まずはStencilを使うパターンを実装しました。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;学マスの眉毛シェーダー※をUnity上で再現できた。&lt;br&gt;&lt;br&gt;※正面から見ると眉毛が前髪より手前に、横顔に近づくと眉毛がフェードアウトする処理&lt;br&gt;&lt;br&gt;眉毛でStencilを書き込み、前髪の1Pass目で眉毛ではない領域を不透明描画、前髪の2Pass目で眉毛の上から半透明描画してアルファを制御したら、うまくできた🎉 &lt;a href=&#34;https://t.co/DSVmsS66hd&#34;&gt;https://t.co/DSVmsS66hd&lt;/a&gt; &lt;a href=&#34;https://t.co/Gvvvq3LqsE&#34;&gt;pic.twitter.com/Gvvvq3LqsE&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1793477397150679423?ref_src=twsrc%5Etfw&#34;&gt;May 23, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;眉毛と前髪を特殊なシェーダーにして、前髪は2Passで描画しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;眉毛でStencil（今回はStencil値を2）を書き込む&lt;/li&gt;
&lt;li&gt;前髪の1Pass目で眉毛に重ならない領域（Comp NotEqual）を不透明描画&lt;/li&gt;
&lt;li&gt;前髪の2Pass目で眉毛に重なった領域（Comp Equal）を半透明描画してアルファを制御&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;前髪の2Pass目を省略すると、眉毛が常に不透明度100%で描画されます。2Pass目によって前髪を眉毛の上からアルファブレンドすることで、眉毛を半透明に見せています。
2Pass目の前髪のアルファ値が眉毛の透明度、つまり &lt;code&gt;1.0-眉毛の不透明度&lt;/code&gt; になります。&lt;/p&gt;

&lt;h2 id=&#34;depth-offsetするパターン&#34;&gt;Depth Offsetするパターン&lt;/h2&gt;

&lt;p&gt;Stencilは使わずにDepth Offsetするパターンでも実装しました。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-conversation=&#34;none&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;学マスの眉毛シェーダー、Stencilを使わないパターンもできた🎉&lt;br&gt;&lt;br&gt;眉毛だけ2Passで描画&lt;br&gt;・1Pass目：普通に不透明で描画&lt;br&gt;・2Pass目：View空間上でZ Offsetして前髪より手前に移動した状態でアルファブレンドで描画。アルファを顔の角度でフェード&lt;br&gt;&lt;br&gt;この方法が一番シンプルな気がします！ &lt;a href=&#34;https://t.co/r7niDobHzC&#34;&gt;pic.twitter.com/r7niDobHzC&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1794254337205764213?ref_src=twsrc%5Etfw&#34;&gt;May 25, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;眉毛だけ2Passで描画しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;眉毛1Pass目：普通に不透明で描画&lt;/li&gt;
&lt;li&gt;眉毛2Pass目：View空間上でDepth Offsetして前髪より手前に移動した状態でアルファブレンドで描画。アルファを顔の角度でフェード&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;非常にシンプルな実装です。&lt;/p&gt;

&lt;p&gt;眉毛の2Pass目を省略すると通常の描画（前髪に隠れた眉毛は描画されない）になります。&lt;/p&gt;

&lt;p&gt;2Pass目はDepth Offsetをして3D空間上で眉毛を前髪よりも手前に移動することで、実質的にZ Testの無効化と同じ効果があります。&lt;/p&gt;

&lt;p&gt;Z Testを無効化しても同じ効果を得られますが、Z Testを無効化してしまうと背景や他のキャラクターまで眉毛が貫通して描画してしまうため、Depth Offsetの方が利点が多いように思います。&lt;/p&gt;

&lt;p&gt;DepthのOffset量についてはパラメーターなどで調整可能にして、前髪より眉毛が手前になるべく小さい値にしています。&lt;/p&gt;

&lt;p&gt;Depth Offsetのアプローチについては、こちらの中国語の記事で知りました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/696515379&#34;&gt;unity卡渲通过深度偏移实现透明眉毛 - 知乎&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Depth Offsetは頂点シェーダーでこのような処理をしています。&lt;/p&gt;

&lt;p&gt;クリッピング空間上のZにしか影響を与えないように実装したので、深度情報のみが変化し、メッシュのシルエットは変化しません。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;// View空間上でDepth Offset
// https://zhuanlan.zhihu.com/p/696515379
float3 positionWS = TransformObjectToWorld(input.positionOS.xyz);
float3 positionVS = mul(UNITY_MATRIX_V, float4(positionWS, 1.0)).xyz;

// View空間上でDepth Offset
positionVS.z += _DepthOffset;

float4 positionHCS = TransformWViewToHClip(positionVS);
float depth = positionHCS.z / positionHCS.w;
output.positionHCS = TransformObjectToHClip(input.positionOS.xyz);

// クリッピング空間上でオフセットされた深度を適用
output.positionHCS.z = depth * output.positionHCS.w;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;この記事だけを読むと、前髪に被っている／被っていないで、眉毛の透明度が変化するのが不思議に思ったのですが、こちらのツイートで疑問が解決しました。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;前髪に隠れるように普通に眉描いて、その後から前髪の上から半透明でもう一度眉描けば、特別な仕組みは要らなそうですが&lt;br&gt;前髪に被ってるところは髪+眉のブレンドで、被ってないところは眉+眉のブレンドだからアルファ値がいくつでも眉の色がそのまま出ます &lt;a href=&#34;https://t.co/Dr85ppiivn&#34;&gt;https://t.co/Dr85ppiivn&lt;/a&gt;&lt;/p&gt;&amp;mdash; フィン (@phyn_ndk) &lt;a href=&#34;https://twitter.com/phyn_ndk/status/1793637537938113004?ref_src=twsrc%5Etfw&#34;&gt;May 23, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;シェーダー側では何か特別な処理をしなくても、眉毛をDepth Offset（もしくはZ Test無効）してアルファブレンドすれば自然に意図した結果になります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;前髪に被ってるところ

&lt;ul&gt;
&lt;li&gt;髪+眉のブレンドなので、眉の不透明度は眉のアルファ値で変化&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;前髪に被ってないところ

&lt;ul&gt;
&lt;li&gt;眉+眉のブレンドなので、眉のアルファ値がいくつでも眉の色がそのままの色になる（眉の不透明度は100%で固定）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;色々と頭を捻りましたが、最終的にはこんなシンプルな仕組みでも同じ効果が得られて、おもしろいなと思いました。&lt;/p&gt;

&lt;h1 id=&#34;考察とまとめ&#34;&gt;考察とまとめ&lt;/h1&gt;

&lt;p&gt;2パターン実装してみましたが、Depth Offsetするパターンの方が使い勝手の面でも性能面でも優位性がありそうだと思いました。&lt;/p&gt;

&lt;p&gt;Stencilを使うアプローチでは、キャラクターが複数になったときに、顔が重なると破綻してしまいます。たとえば、キャラクターの頭が重なったときに、奥側のキャラクターの眉毛が手前のキャラクターの頭を貫通するということが起こり得ます。&lt;/p&gt;

&lt;p&gt;Depth Offsetするパターンでは、こうした問題を回避できます。&lt;/p&gt;

&lt;p&gt;描画負荷の面でも、眉毛の面積は前髪よりも小さいので、眉毛の方を2PassにするDepth Offsetの方がGPU負荷が低いと予想できます。&lt;/p&gt;

&lt;p&gt;特殊な眉毛のキャラクターを描画をする機会があれば、DetphOffsetを使ってみたいと思いました。&lt;/p&gt;

&lt;p&gt;ちなみに、目（眼球）のようにZ Test無効にすると眼球全体が最前面になって見た目が破綻する要素については、Depth Offsetでは難しいので、Stencilを使うしかないと考えています。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[UE5] プロシージャルコンテンツ生成（PCG）最初に知っておきたいポイントと実践TIPS</title>
      <link>https://gam0022.net/blog/2024/01/01/ue5-pcg-introduction-tips/</link>
      <pubDate>Mon, 01 Jan 2024 14:00:00 +0900</pubDate>
      
      <guid>https://gam0022.net/blog/2024/01/01/ue5-pcg-introduction-tips/</guid>
      <description>&lt;p&gt;新年あけましておめでとうございます！&lt;/p&gt;

&lt;p&gt;大変遅刻しましたが、&lt;a href=&#34;https://qiita.com/advent-calendar/2023/ue&#34;&gt;Unreal Engine (UE) Advent Calendar 2023&lt;/a&gt;の13日目の記事です。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;UE5.2から&lt;a href=&#34;https://docs.unrealengine.com/5.3/ja/procedural-content-generation-overview/&#34;&gt;プロシージャルコンテンツ生成フレームワーク (PCG：Procedural Content Generation Framework) &lt;/a&gt;が追加されました。&lt;/p&gt;

&lt;p&gt;PCGを利用すると、大量のStaticMeshの配置などの手動では大変な作業を自動化に役立ちます。&lt;/p&gt;

&lt;p&gt;Houdini Engine for Unreal Engineでも同じことは可能ですが、UE内で作業が完結するため、よりイテレーションを高速に回せることがメリットだと思います。&lt;/p&gt;

&lt;p&gt;最近PCGを使う機会があったので、PCGについて最初に知りたかったポイントや、よく使うパターンの実践TIPSをまとめます。&lt;/p&gt;

&lt;p&gt;執筆時のバージョンはUE5.3.2です。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-12-27-ue5-pcg-introduction-tips/ogp.jpg&#34; alt=&#34;OGP画像&#34; /&gt;&lt;/p&gt;

&lt;p&gt;UE5のサンプルプロジェクトはGitHubに公開しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gam0022/UE5_Examples&#34;&gt;github.com/gam0022/UE5_Examples&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gam0022/UE5_Examples/tree/main/Content/PCGExamples&#34;&gt;Content/PCGExamples&lt;/a&gt; フォルダを参照してください&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h1 id=&#34;pcgのセットアップ&#34;&gt;PCGのセットアップ&lt;/h1&gt;

&lt;p&gt;以下のプラグインを有効化してください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Procedural Content Generation Framework&lt;/li&gt;
&lt;li&gt;Procedural Content Generation Framework Geometry Script Interop&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;pcgの基本的な使い方&#34;&gt;PCGの基本的な使い方&lt;/h1&gt;

&lt;p&gt;PCGの基本的な使い方については、たくさんの入門記事があるため、今回は割愛します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://historia.co.jp/archives/34360/&#34;&gt;[UE5] PCGの特徴と使い方｜株式会社ヒストリア&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://unrealengine.hatenablog.com/entry/2023/05/27/221601&#34;&gt;UE5 PCG（Procedural Content Generation）ガッツリ入門 - Let&amp;#39;s Enjoy Unreal Engine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Level上にPCG Volumeを作成して、PCGのGraph InstanceにPCG Graphを設定します。&lt;/p&gt;

&lt;h1 id=&#34;pcgの最初に知りたかったポイント&#34;&gt;PCGの最初に知りたかったポイント&lt;/h1&gt;

&lt;h2 id=&#34;example01-シンプルなpcgの例&#34;&gt;Example01: シンプルなPCGの例&lt;/h2&gt;

&lt;p&gt;Landscape上にランダムにMeshを配置し、Mesh同士がぶつからないようにするシンプルなPCGの例です。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-12-27-ue5-pcg-introduction-tips/example01-result.jpg&#34; alt=&#34;シンプルなPCGの例 Example01 結果&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-12-27-ue5-pcg-introduction-tips/example01-graph.png&#34; alt=&#34;シンプルなPCGの例 Example01 PCGGraph&#34; /&gt;&lt;/p&gt;

&lt;p&gt;このPCGでは、以下の4ステップの処理を行っています。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;ポイントの生成

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Get Landscape Data&lt;/code&gt; でLandscapeを取得&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Surface Sampler&lt;/code&gt; でLandscapeに対してポイントを生成&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ポイントの処理

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Transform Points&lt;/code&gt; でランダムな移動と回転&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ポイントのフィルター

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Bounds Modifier&lt;/code&gt; でバウンディングボックスを調整&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Self Pruning&lt;/code&gt; で自己干渉しているポイントを消去&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;StaticMeshを生成

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Static Mesh Spawner&lt;/code&gt; でStaticMeshを生成&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;PCGではポイントを生成してから、ポイントのAttributeを何かしらの方法で加工し、最後にStatic Mesh SpawnerでStaticMeshを生成という流れになります。&lt;/p&gt;

&lt;p&gt;そのため、ポイントにどんなAttributeが存在していて、どのように値が変化するのかを意識することがとても重要です。&lt;/p&gt;

&lt;p&gt;この4ステップの流れは複雑なPCGでもほとんど変わらない定型パターンになります。&lt;/p&gt;

&lt;h2 id=&#34;inspect機能でattributeの内容を確認する&#34;&gt;Inspect機能でAttributeの内容を確認する&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;「ポイントのAttributeの内容をInspect機能で常に確認しよう」&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;この記事で一番伝えたかったポイントです。Attributeの変化を意識することが、PCGマスターへの近道です。&lt;/p&gt;

&lt;p&gt;Houdiniの経験がある方は実感できるのではないでしょうか。&lt;/p&gt;

&lt;p&gt;参考記事: &lt;a href=&#34;https://note.com/aoi/n/n3633a8fb6fc0&#34;&gt;絶対に挫折しないHoudini入門 4 - オブジェクトとジオメトリ｜aoi&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;PCGのポイントはAttributeを持っています。これらがAttributeの具体例です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Position&lt;/li&gt;
&lt;li&gt;Rotation&lt;/li&gt;
&lt;li&gt;Scale&lt;/li&gt;
&lt;li&gt;BoundsMin / BoundsMax&lt;/li&gt;
&lt;li&gt;Color&lt;/li&gt;
&lt;li&gt;Density&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Inspect機能は、ポイントのAttributeを内容を確認するための機能です。HoudiniのGeometry Spreadsheetに相当する機能です。&lt;/p&gt;

&lt;p&gt;PCGの上部のタブから &lt;code&gt;No Debug object selected&lt;/code&gt; と書かれている項目をプルダウンで変更し、現在のPCG Graph名 / PCG Compornetを選んでください。
ノードを右クリックしてInspectにチェックすると、そのノードの処理時点のPointの持つAttributeが表示されます。&lt;/p&gt;

&lt;p&gt;ショートカットとして、ノードを選択してからAキーを押してもInspectが有効になります。&lt;/p&gt;

&lt;p&gt;Inspect中のノードは左上に黄色い●が表示されます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-12-27-ue5-pcg-introduction-tips/pcg-inspect.png&#34; alt=&#34;Inspect機能&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;debug機能でビューポート上でポイントを確認する-self-pruningで重なりを除去&#34;&gt;Debug機能でビューポート上でポイントを確認する + Self Pruningで重なりを除去&lt;/h2&gt;

&lt;p&gt;Debug機能はViewport上でポイントを可視化する機能です。ノードを右クリックしてDebugにチェックするか、Dキーを押すことで有効になります。&lt;/p&gt;

&lt;p&gt;Debug中のノードは左上に青い●が表示されます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-12-27-ue5-pcg-introduction-tips/pcg-debug.png&#34; alt=&#34;Debug機能&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ビューポート上の白・黒・グレーの箱がDebugの表示です。&lt;/p&gt;

&lt;p&gt;箱の色はDensityに対応しており、箱の大きさは &lt;code&gt;Scale&lt;/code&gt; と &lt;code&gt;BoundsMin / BoundsMax&lt;/code&gt; に対応します。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Self Pruning&lt;/code&gt; はポイントが持つバウンディングボックスのAttributeに対して判定が行われます。&lt;/p&gt;

&lt;p&gt;そのため、ステップ3のポイントのフィルターでは、まず &lt;code&gt;Bounds Modifier&lt;/code&gt; でバウンディングボックスを調整してから &lt;code&gt;Self Pruning&lt;/code&gt; しています。&lt;/p&gt;

&lt;p&gt;Inspect機能とDebug機能をつかって、ポイントのAttributeの変化を確認することが、PCGの作業効率アップやPCGへの理解度がアップにつながります。&lt;/p&gt;

&lt;h1 id=&#34;pcgの実践tips&#34;&gt;PCGの実践TIPS&lt;/h1&gt;

&lt;p&gt;PCGでよく使いそうなパターンの実践TIPSを紹介します。&lt;/p&gt;

&lt;h2 id=&#34;example02-特定のstaticmeshを避けて配置&#34;&gt;Example02: 特定のStaticMeshを避けて配置&lt;/h2&gt;

&lt;p&gt;特定のオブジェクトを避けて配置する例です。&lt;/p&gt;

&lt;p&gt;まず手動でテーブルのStaticMeshを配置し、ActorのTagsに &lt;code&gt;SM_Table&lt;/code&gt; を設定します。&lt;/p&gt;

&lt;p&gt;対応前：Example01のままだと、テーブルと椅子が重なり合ってしまいます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-12-27-ue5-pcg-introduction-tips/example02-result-before.jpg&#34; alt=&#34;Example02: 対応前&#34; /&gt;&lt;/p&gt;

&lt;p&gt;対応後：重ならないようになりました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-12-27-ue5-pcg-introduction-tips/example02-result-after.jpg&#34; alt=&#34;Example02: 対応後&#34; /&gt;&lt;/p&gt;

&lt;p&gt;これがPCG Graphです。オレンジ色の枠で部分がExample01から新しく追加した処理です。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-12-27-ue5-pcg-introduction-tips/example02-graph1.png&#34; alt=&#34;Example02: Graphの全体&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;get-actor-dataの設定&#34;&gt;Get Actor Dataの設定&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-12-27-ue5-pcg-introduction-tips/example02-graph2.png&#34; alt=&#34;Example02: GraphのGet Actor Data&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Get Actor Dataはアクターを取得するノードです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Actor Filter: All World Acotrs&lt;/li&gt;
&lt;li&gt;Must Overlap Self: ON（Volumeの範囲内だけに限定します）&lt;/li&gt;
&lt;li&gt;Actor Selection Tag: SM_Talbe（StaticMeshに設定したタグを指定）&lt;/li&gt;
&lt;li&gt;Select Multiple: ON（テーブルが複数ある場合はONにします。基本的にONで良いと思います）&lt;/li&gt;
&lt;li&gt;Mode: Get Single Point&lt;/li&gt;
&lt;li&gt;Merge Single Point Data: ON&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;differenceの設定&#34;&gt;Differenceの設定&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-12-27-ue5-pcg-introduction-tips/example02-graph3.png&#34; alt=&#34;Example02: GraphのDifference&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Differenceは差集合を計算するノードです。今回の例では、テーブルのバウンディングボックスと重なる椅子を削除します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Density Function: Binary&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;example02のまとめ&#34;&gt;Example02のまとめ&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Get Actor Dataでは、Tagでフィルターすることで特定のActorやStaticMeshを取得できます。&lt;/li&gt;
&lt;li&gt;Differenceを使うことで特定の範囲内のポイントを消去できます。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;example03-特定のstaticmeshの周囲に配置&#34;&gt;Example03: 特定のStaticMeshの周囲に配置&lt;/h2&gt;

&lt;p&gt;岩を手動配置して、その周りに花を自動配置する例です。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-12-27-ue5-pcg-introduction-tips/example03-result.jpg&#34; alt=&#34;Example03: 結果&#34; /&gt;&lt;/p&gt;

&lt;p&gt;PCG Graphの全体図です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-12-27-ue5-pcg-introduction-tips/example03-graph-all.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-12-27-ue5-pcg-introduction-tips/example03-graph-all.png&#34; alt=&#34;Example03: PCG Graphの全体図&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;岩の周囲にポイントを生成する&#34;&gt;岩の周囲にポイントを生成する&lt;/h3&gt;

&lt;p&gt;まずは岩のアクターの周囲にポイントを生成します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-12-27-ue5-pcg-introduction-tips/example03-graph1.png&#34; alt=&#34;Example03: バウンディングボックスを指定したSurfaceSampler&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Example02と同じようにTag指定で岩のActorを取得し、&lt;code&gt;Bounds Modifier&lt;/code&gt; でバウンディングボックスを5倍に拡大します。&lt;/p&gt;

&lt;p&gt;Surface SamplerのBounding Shapeに拡大したバウンディングボックスを指定することで、岩の周囲にポイントを生成できます。&lt;/p&gt;

&lt;p&gt;ポイントの生成範囲を調整する場合は &lt;code&gt;Bounds Modifier&lt;/code&gt; で5倍の数値を調整します。&lt;/p&gt;

&lt;h3 id=&#34;distanceノードで岩からの距離に応じたdensityを設定する&#34;&gt;Distanceノードで岩からの距離に応じたDensityを設定する&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-12-27-ue5-pcg-introduction-tips/example03-graph-distance.png&#34; alt=&#34;Example03: Distanceノード&#34; /&gt;&lt;/p&gt;

&lt;p&gt;DistanceノードでTargetへのPointの距離を計算できます。&lt;/p&gt;

&lt;p&gt;SetDensityをONにして、Maximum Distanceを指定することで、距離から0-1の範囲にDensityを設定できます。&lt;/p&gt;

&lt;p&gt;DensityをOneMinusノードで反転してから、Density Filterで中心から離れたポイントを削除します。&lt;/p&gt;

&lt;h3 id=&#34;densityの調整&#34;&gt;Densityの調整&lt;/h3&gt;

&lt;p&gt;PowやMultiplyでDensityを調整します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-12-27-ue5-pcg-introduction-tips/example03-graph-density-multiply.png&#34; alt=&#34;Example03: でDensityを調整&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;定数ノードの作成&#34;&gt;定数ノードの作成&lt;/h4&gt;

&lt;p&gt;2.0や4.0の定数のノードを作成するには、Create Attributeノードを作成し、TypeをDoubeにし、Double Valueを調整します。&lt;/p&gt;

&lt;p&gt;筆者は定数ノードの名前が分からずにしばらく悩みました😱&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-12-27-ue5-pcg-introduction-tips/create-attribute-1.png&#34; alt=&#34;Create Attribute 作成&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-12-27-ue5-pcg-introduction-tips/create-attribute-2.png&#34; alt=&#34;Create Attribute 設定&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;static-meshの生成&#34;&gt;Static Meshの生成&lt;/h3&gt;

&lt;p&gt;最後にStatic Mesh SpawnerでStaticMeshを生成します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-12-27-ue5-pcg-introduction-tips/example03-graph-staticmesh.png&#34; alt=&#34;Create Attribute 設定&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;example04-splineで囲んだ領域内に木を生やす&#34;&gt;Example04: Splineで囲んだ領域内に木を生やす&lt;/h2&gt;

&lt;p&gt;Splineで囲んだ領域内に木を生やす例です。SplineとPCGを組み合わせるためにはブループリントが必要になります。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-12-27-ue5-pcg-introduction-tips/example04-result.jpg&#34; alt=&#34;Example04: 結果&#34; /&gt;&lt;/p&gt;

&lt;p&gt;PCG Graphの全体図です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-12-27-ue5-pcg-introduction-tips/example04-graph-all.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-12-27-ue5-pcg-introduction-tips/example04-graph-all.png&#34; alt=&#34;Example04: PCG Graphの全体図&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;ブループリントの作成&#34;&gt;ブループリントの作成&lt;/h3&gt;

&lt;p&gt;Actorクラスのブループリントを作成します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-12-27-ue5-pcg-introduction-tips/example04-bp.png&#34; alt=&#34;Example04: ブループリント&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ブループリント内にSplineを作成し、Component Tagsに &lt;code&gt;ForestZone&lt;/code&gt; と設定します。&lt;/p&gt;

&lt;p&gt;木を生やす目的以外のSplineを使う場合も想定して、Splineの判別用にComponent Tagsを設定しています。&lt;/p&gt;

&lt;p&gt;たとえば、道に木を生やしたくない場合、RoadのTagを持ったSpline上にポイントをサンプリングして、
Example02で紹介したDifferenceノードで道にある木を削除するような使い方が可能になります。&lt;/p&gt;

&lt;p&gt;次にブループリント内にPCG Componentを作成し、PCG Graphを指定します。&lt;/p&gt;

&lt;h3 id=&#34;spline上のポイント生成&#34;&gt;Spline上のポイント生成&lt;/h3&gt;

&lt;p&gt;Splineの内側にポイント生成します。&lt;/p&gt;

&lt;p&gt;まずは &lt;code&gt;Get Spline Data&lt;/code&gt; でブループリント内にあるSplineを取得します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-12-27-ue5-pcg-introduction-tips/example04-graph-get_spline_data.png&#34; alt=&#34;Example04: Get Spline&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Actor TagsではなくComponent Tagsでフィルターするために、 &lt;code&gt;Filter By Tag&lt;/code&gt; ノードを使いました。&lt;/p&gt;

&lt;p&gt;Component Tagsにした方が1つのActor内に複数のSplineを生成できるので使い勝手が良くなります。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-12-27-ue5-pcg-introduction-tips/example04-filter_by_tag.png&#34; alt=&#34;Example04: Filter By Tag&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Spline Sampler&lt;/code&gt; でSplineの内部にポイントを生成します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-12-27-ue5-pcg-introduction-tips/example04-graph-spline_sampler.png&#34; alt=&#34;Example04: Spline Sampler&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Dimention: On Interior（Splineの内側を指定します）&lt;/li&gt;
&lt;li&gt;Unbounded: ON&lt;/li&gt;
&lt;li&gt;Interior Sampling Spacingで密度を調整します&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;landscape上へのプロジェクション&#34;&gt;Landscape上へのプロジェクション&lt;/h3&gt;

&lt;p&gt;Transform Pointsでランダム移動とZ軸上のランダム回転してから、Spline上に生成したポイントを &lt;code&gt;Projection&lt;/code&gt; でランドスケープ上に移動します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-12-27-ue5-pcg-introduction-tips/example04-graph-projection.png&#34; alt=&#34;Example04: Projection&#34; /&gt;&lt;/p&gt;

&lt;p&gt;木は上方向に真っ直ぐに生やしたいので、Project Rotations はOFFにしました。&lt;/p&gt;

&lt;h3 id=&#34;重なりを除去-staticmesh生成&#34;&gt;重なりを除去 + StaticMesh生成&lt;/h3&gt;

&lt;p&gt;Example01でも登場した Bounds Modifier と Self Pruning のコンボ技で重なり合ったポイントを消します。&lt;/p&gt;

&lt;p&gt;最後に Static Mesh Spawner でStaticMeshを生成して完了です。&lt;/p&gt;

&lt;p&gt;このあたりの処理は定形パターンですね。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-12-27-ue5-pcg-introduction-tips/example04-graph-static_mesh_spawnerpng.png&#34; alt=&#34;Example04: Projection&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;まとめ&#34;&gt;まとめ&lt;/h1&gt;

&lt;p&gt;PCGの基本的なデバッグ方法やよくある処理のパターンを解説しました。&lt;/p&gt;

&lt;p&gt;PCGの基本的な処理の流れとしては、ポイントを生成して、Attributeを処理してから、最後にStaticMeshの生成になります。&lt;/p&gt;

&lt;p&gt;InspectやDebugを使いながらAttributeの変化を確認すれば、あまり迷わずに使いこなすことができると思います。&lt;/p&gt;

&lt;p&gt;StaticMesh上へのポイント生成だったり、複雑なPCGを作成するためにサブグラフ化する方法なども紹介しようと思いましたが、記事が長くなりすぎるので別記事にしたいと思います。&lt;/p&gt;

&lt;p&gt;それでは良いPCGライフを！&lt;/p&gt;

&lt;h1 id=&#34;利用させていただいたasset&#34;&gt;利用させていただいたAsset&lt;/h1&gt;

&lt;p&gt;記事のサンプル作成にあたり、以下のアセットを利用させていただきました。ありがとうございます！&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.unrealengine.com/marketplace/ja/product/landscape-pro-auto-generated-material&#34;&gt;Landscape Pro 2.0 Auto-Generated Material&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Quixel

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://quixel.com/megascans/home?assetId=wjglaj3s&#34;&gt;https://quixel.com/megascans/home?assetId=wjglaj3s&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://quixel.com/megascans/home?assetId=wjglai2s&#34;&gt;https://quixel.com/megascans/home?assetId=wjglai2s&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://quixel.com/megascans/home?assetId=veigfjmaw&#34;&gt;https://quixel.com/megascans/home?assetId=veigfjmaw&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>映画館でGLSLライブコーディングをしました（第10回新千歳空港国際アニメーション映画祭）</title>
      <link>https://gam0022.net/blog/2023/11/20/livecoding-airport-animefes2023/</link>
      <pubDate>Mon, 20 Nov 2023 10:50:40 +0900</pubDate>
      
      <guid>https://gam0022.net/blog/2023/11/20/livecoding-airport-animefes2023/</guid>
      <description>&lt;h1 id=&#34;更新履歴&#34;&gt;更新履歴&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;2023-12-29 YouTube動画を埋め込みました&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;はじめに&#34;&gt;はじめに&lt;/h1&gt;

&lt;p&gt;11月2日～11月6日に開催された&lt;a href=&#34;https://airport-anifes.jp/&#34;&gt;第10回新千歳空港国際アニメーション映画祭&lt;/a&gt;でデモシーンの上映とGLSLのシェーダーライブコーディングをしました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-11-20-livecoding-airport-animefes2023/C20231104_0197.MP4_snapshot_17.56.475.jpg&#34; alt=&#34;GLSLライブコーディング@第10回新千歳空港国際アニメーション映画祭&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;今回のアニメーション映画祭では、&lt;a href=&#34;https://sessions.frontl1ne.net/&#34;&gt;SESSIONS&lt;/a&gt;として2つのプログラムを行いました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://airport-anifes.jp/programs/talk_technical_creation/&#34;&gt;トーク：技術が中心の創作活動「テクニカルクリエーション」と「デモシーン」&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://airport-anifes.jp/programs/live_demoscene/&#34;&gt;上映＋ライブ：「デモシーン」で表現される世界と「ライブコーディング」の世界&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;1つ目のプログラムでは、&lt;a href=&#34;https://twitter.com/FL1NE&#34;&gt;@FL1NE&lt;/a&gt;さんがデモシーンが生まれた歴史であったり、テクニカルクリエーションやそのイベントであるSESSIONSの説明を行いました。
デモシーンの歴史について網羅されている資料は少なく、とても貴重な発表だと感じました。&lt;/p&gt;

&lt;div class=&#34;movie-wrap&#34;&gt;
&lt;iframe width=&#34;1920&#34; height=&#34;1080&#34; src=&#34;https://www.youtube.com/embed/1hOYpema_fg?si=UlFrrGRWBY1NzOod&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;2つ目のプログラムでは、前半は@FL1NEさんが司会を務めながら映画館で国内外のデモシーンの上映を行い、後半は私と&lt;a href=&#34;https://twitter.com/Renardealer&#34;&gt;@Renardealer&lt;/a&gt;さんの2人でGLSLのシェーダーライブコーディングを行いました。
映画館という超大画面＋最高の音響でのライブコーディングは本当に楽しかったです！！
音楽も&lt;a href=&#34;https://twitter.com/himazin917&#34;&gt;@himazin917&lt;/a&gt;さんのSonic Piによるライブコーディングの演奏でした。&lt;/p&gt;

&lt;div class=&#34;movie-wrap&#34;&gt;
&lt;iframe width=&#34;1920&#34; height=&#34;1080&#34; src=&#34;https://www.youtube.com/embed/B_Yst6SSVn0?si=Hzpq6Lqb6ulePhmy&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h1 id=&#34;デモシーン上映&#34;&gt;デモシーン上映&lt;/h1&gt;

&lt;p&gt;国内外のデモシーン9作品を上映しました。&lt;/p&gt;

&lt;p&gt;PCデモから64K Introや4K Introまで幅広くセレクトしました。
動画の再生ではなく、その場でのexeファイルの実行によるリアルタイムの本当のデモシーンの上映を行いました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-11-20-livecoding-airport-animefes2023/C20231104_0193.MP4_snapshot_13.14.026.jpg&#34; alt=&#34;映画館で上映されたWORMHOLE&#34; /&gt;&lt;/p&gt;

&lt;p&gt;私と&lt;a href=&#34;https://twitter.com/sadakkey&#34;&gt;@sadakkey&lt;/a&gt;さんによる作品である&lt;a href=&#34;https://www.youtube.com/watch?v=NMNJV-Pbqtk&#34;&gt;WORMHOLE&lt;/a&gt;も上映されました。&lt;/p&gt;

&lt;p&gt;自分の作品が映画館で上映されているという事実が信じられず、非日常体験だなぁと思いました。&lt;/p&gt;

&lt;p&gt;2nd Stage BOSSなど個人的に大好きなデモも映画館で見られました！&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-11-20-livecoding-airport-animefes2023/C20231104_0193.MP4_snapshot_46.17.407.jpg&#34; alt=&#34;映画館で上映された2nd Stage BOSS&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;glslライブコーディング&#34;&gt;GLSLライブコーディング&lt;/h1&gt;

&lt;p&gt;Renardと2人でBonzomaticというライブコーディング用のエディターをつかったGLSLライブコーディングを行いました。&lt;/p&gt;

&lt;p&gt;今回はエキシビションということで一部の関数は持ち込みOKのルールで行いました。
時間制限はRevisionのShaderShowdownと同じく25分でした。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-conversation=&#34;none&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;25分間のGLSLライブコーディングでした。&lt;br&gt;&lt;br&gt;今回はエキシビションということで一部の関数は持ち込みOKのルールで行いました。&lt;br&gt;&lt;br&gt;トラブルでFFT（サウンドを拾う機能）が動作しなかったのと、時間が足りずにシーン切り替えの実装は間に合わなかったので、動画用にコードを少しだけ修正しています。 &lt;a href=&#34;https://t.co/LQoERgILPG&#34;&gt;pic.twitter.com/LQoERgILPG&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1721025346848653593?ref_src=twsrc%5Etfw&#34;&gt;November 5, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;ライブコーディングの楽しさは雰囲気を知ってもらうことが目標だったので、解説を交えながら、複数のシーンを次々に切り替えていく作戦でいきました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;シーン1: IFSによるトンネルのシーン&lt;/li&gt;
&lt;li&gt;シーン2: MengerSpongeをベースにして&lt;a href=&#34;https://www.youtube.com/watch?v=NMNJV-Pbqtk&#34;&gt;WORMHOLE&lt;/a&gt;風のトンネルのシーン&lt;/li&gt;
&lt;li&gt;シーン3: Mandelboxのシーン&lt;/li&gt;
&lt;li&gt;シーン4: シーン3を&lt;a href=&#34;https://seikaisuru-kado.com/&#34;&gt;正解するカド&lt;/a&gt;の「カド」風にしたシーン&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;第10回新千歳空港国際アニメーション映画祭で「GLSL ライブコーディング」を行いました。&lt;br&gt;&lt;br&gt;音楽も &lt;a href=&#34;https://twitter.com/himazin917?ref_src=twsrc%5Etfw&#34;&gt;@himazin917&lt;/a&gt; さんのSonic Piによるライブコーディングによる演奏です。&lt;br&gt;&lt;br&gt;映画館という超大画面＋最高の音響でのライブコーディング、本当に楽しかった！！！&lt;a href=&#34;https://twitter.com/hashtag/newchitose2023?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#newchitose2023&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/SESSIONS_Party?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SESSIONS_Party&lt;/a&gt; &lt;a href=&#34;https://t.co/kbpZcDgZq9&#34;&gt;pic.twitter.com/kbpZcDgZq9&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1721024192278409556?ref_src=twsrc%5Etfw&#34;&gt;November 5, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;正解するカドが伝わるのか正直あまり自信がなかったのですが、意外に反応が良かったのでホッとしました。&lt;/p&gt;

&lt;p&gt;途中でバグらせてしまって時間が足りなくなってしまいましたが、むしろライブ感が演出できて結果的には良かったのかなと思います。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://t.co/GoB6m63pvx&#34;&gt;https://t.co/GoB6m63pvx&lt;/a&gt;&lt;br&gt;第10回新千歳空港国際アニメーション映画祭にて25分にわたるライブコーディングをしました！&lt;br&gt;音楽も &lt;a href=&#34;https://twitter.com/himazin917?ref_src=twsrc%5Etfw&#34;&gt;@himazin917&lt;/a&gt; さんによるライブコーディングです！&lt;br&gt;&lt;br&gt;(本番の録画が出来なかったのでこれは練習の録画ですが、本番でも同じ絵が出せました！)&lt;a href=&#34;https://twitter.com/hashtag/newchitose2023?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#newchitose2023&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/SESSIONS_Party?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SESSIONS_Party&lt;/a&gt; &lt;a href=&#34;https://t.co/LdQnLTYL0x&#34;&gt;pic.twitter.com/LdQnLTYL0x&lt;/a&gt;&lt;/p&gt;&amp;mdash; Renard (@Renardealer) &lt;a href=&#34;https://twitter.com/Renardealer/status/1721195825932743087?ref_src=twsrc%5Etfw&#34;&gt;November 5, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;対戦相手であるRenardさんの作品は素晴らしかったです。
タイル張りの複数のシーンがおしゃれにトランジションで切り替わり、さらにカメラのアニメーションやトランジションのバーのアニメーションが心地よく、非常に高いクオリティの作品でした！&lt;/p&gt;

&lt;p&gt;エキシビションだったので順位付けはありませんでした。&lt;/p&gt;

&lt;h1 id=&#34;感想&#34;&gt;感想&lt;/h1&gt;

&lt;p&gt;映画館という最高の環境でデモシーンを上映したり、ライブコーディングを行うことができて、本当に楽しかったです。&lt;/p&gt;

&lt;p&gt;このような貴重なチャンスをいただけて本当に嬉しく思います。&lt;/p&gt;

&lt;p&gt;ライブコーディング中に歓声があがったり、プログラム終了後の時間だったり、映画祭の関係者のパーティーでも興味をもってくださった方々からたくさん感想や質問をいただいて、やって良かったと心から思いました。&lt;/p&gt;

&lt;p&gt;Twitter上でもたくさん感想をいただけて嬉しかったです！&lt;/p&gt;

&lt;p&gt;映画祭のスタッフの方々、参加者の方々、デモシーンの上映とライブコーディング用にハイエンドPCを手配してくださったツクモ様、本当にありがとうございました！！！&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-conversation=&#34;none&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;上映＋ライブ：「デモシーン」で表現される世界と「ライブコーディング」の世界、後半ライブコーディングは見てて楽しい凄い体験でした。&lt;br&gt;&lt;br&gt;コーディング変更する度に背景映像や音が変わっていくのは圧巻。これは凄い。&lt;br&gt;&lt;br&gt;そして、ここでまさか正解するカドが出てくるとは思わず笑った。まさがさかだよ &lt;a href=&#34;https://t.co/OUJtMax3MB&#34;&gt;pic.twitter.com/OUJtMax3MB&lt;/a&gt;&lt;/p&gt;&amp;mdash; NOG (@NOGjp) &lt;a href=&#34;https://twitter.com/NOGjp/status/1720779213186482574?ref_src=twsrc%5Etfw&#34;&gt;November 4, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-conversation=&#34;none&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;二日目は25アニメ &amp;amp; 1ソフトクリームでした！　ライブコーディングも凄かったです！&lt;/p&gt;&amp;mdash; 南野これ式　コミティアQ38b (@mebaGna) &lt;a href=&#34;https://twitter.com/mebaGna/status/1720783163826565600?ref_src=twsrc%5Etfw&#34;&gt;November 4, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;これ実際に見たんだけどライブコーディングかなり面白かった。25分でMVのようなデモシーンが出来ちゃうの凄い世界だね&lt;/p&gt;&amp;mdash; サチイ (@mg_sachi1) &lt;a href=&#34;https://twitter.com/mg_sachi1/status/1720789301703950827?ref_src=twsrc%5Etfw&#34;&gt;November 4, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;第10回新千歳空港国際アニメーション映画祭」今日の最後は、上映＋ライブ『「デモシーン」で表現される世界と「ライブコーディング」の世界』へ。凄い世界でした。リアルタイムに映像や音楽を生成するプログラムを制作する「デモシーン」をはじめとしたテクニカルクリエーションのイベント「SESSIONS」… &lt;a href=&#34;https://t.co/Sxjt3CsSQS&#34;&gt;pic.twitter.com/Sxjt3CsSQS&lt;/a&gt;&lt;/p&gt;&amp;mdash; 矢倉 あゆみ (@babyish_guide) &lt;a href=&#34;https://twitter.com/babyish_guide/status/1720814720289219035?ref_src=twsrc%5Etfw&#34;&gt;November 4, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;今日の最後の方シアター2でやってた「デモシーン」で表現される世界と⁰「ライブコーディング」の世界、めっっっっっっちゃくちゃ面白かった！！！！！！！👏👏👏👏👏👏&lt;br&gt;面白すぎてそのまま帰りたくなくて、数人でプロント閉店時間まで面白すぎたね…！と語り合いました😂😂&lt;a href=&#34;https://twitter.com/hashtag/newchitose2023?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#newchitose2023&lt;/a&gt;&lt;a href=&#34;https://twitter.com/hashtag/SESSIONS?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SESSIONS&lt;/a&gt;&lt;/p&gt;&amp;mdash; さとうゆか / SATO Yuka (@satoyuka_01) &lt;a href=&#34;https://twitter.com/satoyuka_01/status/1720838739130523962?ref_src=twsrc%5Etfw&#34;&gt;November 4, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;昨日のライブコーディングは良かったよなー。&lt;br&gt;&lt;br&gt;あの環境、絶対楽しいと思うので、家帰ったら構築してみたい。でも解説サイトとかあるんかな？&lt;/p&gt;&amp;mdash; NOG (@NOGjp) &lt;a href=&#34;https://twitter.com/NOGjp/status/1720927272461545735?ref_src=twsrc%5Etfw&#34;&gt;November 4, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;「上映＋ライブ：「デモシーン」で表現される世界と「ライブコーディング」の世界」最高すぎた……！　「メガデモ」の傑作選にくわえ（なんと4KBの作品も！）、コーディングによってリアルタイムで映像を生成する「ライブコーティング」のデモンストレーションも！&lt;a href=&#34;https://twitter.com/hashtag/newchitose2023?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#newchitose2023&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/SESSIONS_Party?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SESSIONS_Party&lt;/a&gt; &lt;a href=&#34;https://t.co/PJbbbyL5Oa&#34;&gt;pic.twitter.com/PJbbbyL5Oa&lt;/a&gt;&lt;/p&gt;&amp;mdash; 田中大裕(Daisuke Tanaka) (@diecoo1025) &lt;a href=&#34;https://twitter.com/diecoo1025/status/1721152668998189144?ref_src=twsrc%5Etfw&#34;&gt;November 5, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;まさか映画祭でライブコーディングを楽しめるとは。。最高でした &lt;a href=&#34;https://t.co/SVbHJnHnS6&#34;&gt;https://t.co/SVbHJnHnS6&lt;/a&gt;&lt;/p&gt;&amp;mdash; Achabox (@achabox) &lt;a href=&#34;https://twitter.com/achabox/status/1721206960912257467?ref_src=twsrc%5Etfw&#34;&gt;November 5, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&#34;キーボードが使えないトラブル&#34;&gt;キーボードが使えないトラブル&lt;/h2&gt;

&lt;p&gt;ライブコーディング用に&lt;a href=&#34;https://amzn.to/46pfG4W&#34;&gt;いつも使っている無線キーボード&lt;/a&gt;を持ち込んだのに、USBのレシーバーを家に忘れるというミスをしました。
詰んだかと思われたのですが、Bluetoothでも接続できたのでセーフでした。危なかった！&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;ライブコーディングのために愛用の無線キーボードを北海道まで飛行機で持ってきたのに、レシーバーを家に置いてきた😇&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1720386131488133405?ref_src=twsrc%5Etfw&#34;&gt;November 3, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h1 id=&#34;映画祭の感想&#34;&gt;映画祭の感想&lt;/h1&gt;

&lt;p&gt;映画祭というイベントは初参加だったので、とても新鮮に楽しめました。&lt;/p&gt;

&lt;p&gt;印象に残ったプログラムは&lt;a href=&#34;https://airport-anifes.jp/programs/frieren_anime/&#34;&gt;葬送のフリーレン（スタッフトーク付き）&lt;/a&gt;です。
アニメの4話まで上映した後、スタッフトークがあり、制作の裏話を聞くことができました。アニメ放送中で忙しい中のご対応に感謝しかありませんでした。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://airport-anifes.jp/feature_item/komada-a-whisky-family/&#34;&gt;駒田蒸留所へようこそ&lt;/a&gt;の先行上映もありました。
幻のウイスキー「KOMA」を復活させるために奮闘する話でしたが、人間ドラマもとても良かったです。
ウイスキーの設定や監修が本格的で解像度が高く、世界にぐっと引き込まれました。
11月10日から一般の劇場でも公開されています。とても良い作品だったので、ぜひ映画館で見てください。&lt;/p&gt;

&lt;p&gt;いろんな短編作品が上映される&lt;a href=&#34;https://airport-anifes.jp/programs/compe_jp/&#34;&gt;コンペティション&lt;/a&gt;や&lt;a href=&#34;https://airport-anifes.jp/programs/otototabi_newchitose2023/&#34;&gt;音楽ライブ&lt;/a&gt;も楽しかったです。
コンペティションは投票で順位が決まるので、デモシーンに通じるものを感じました。&lt;/p&gt;

&lt;p&gt;新千歳空港国際も商業施設が充実していて驚きました。
会期中は空港内のホテルに滞在していたので、3日くらい空港から外に一歩も出なかったのですが、飽きることなく楽しめました。空港の温泉も露天風呂があって良かったです。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TDF 16ms #0（2023）のGLSL Graphics Compoで3位入賞しました</title>
      <link>https://gam0022.net/blog/2023/10/30/tdf16ms0/</link>
      <pubDate>Mon, 30 Oct 2023 10:00:00 +0900</pubDate>
      
      <guid>https://gam0022.net/blog/2023/10/30/tdf16ms0/</guid>
      <description>&lt;p&gt;2023年10月22日にオンライン（YouTube配信）で開催された&lt;a href=&#34;https://16ms.tokyodemofest.jp/&#34;&gt;TDF 16ms #0&lt;/a&gt;に参加し、GLSL Graphics Compo部門で3位をいただきました！&lt;/p&gt;

&lt;p&gt;作品のタイトルは『Infinite Keys』で、ゲーミングキーボードをモチーフにしました。&lt;/p&gt;

&lt;div class=&#34;movie-wrap&#34;&gt;
&lt;iframe width=&#34;1920&#34; height=&#34;1080&#34; src=&#34;https://www.youtube.com/embed/B4ZirkFOdZg&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;以下は『Infinite Keys』の各種リンクです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://youtu.be/B4ZirkFOdZg&#34;&gt;📺 YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.shadertoy.com/view/csKfzw&#34;&gt;👁️ Shadertoy&lt;/a&gt; ※高負荷のためRTX3080以上のGPU推奨&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.pouet.net/prod.php?which=95342&#34;&gt;📦 Pouet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;&amp;quot;Infinite Keys&amp;quot; by &lt;a href=&#34;https://twitter.com/gam0022?ref_src=twsrc%5Etfw&#34;&gt;@gam0022&lt;/a&gt;&lt;br&gt;&lt;br&gt;3rd Place in GLSL Graphics Compo at &lt;a href=&#34;https://twitter.com/hashtag/TokyoDemoFest?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#TokyoDemoFest&lt;/a&gt; 16ms #0&lt;a href=&#34;https://twitter.com/hashtag/TokyoDemoFest?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#TokyoDemoFest&lt;/a&gt; 16ms #0 のGLSLグラフィックスコンポで3位に入賞しました！ &lt;a href=&#34;https://t.co/EsJitdiOdV&#34;&gt;pic.twitter.com/EsJitdiOdV&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1716107013154087009?ref_src=twsrc%5Etfw&#34;&gt;October 22, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h1 id=&#34;tdf-16ms-0アーカイブ&#34;&gt;TDF 16ms #0アーカイブ&lt;/h1&gt;

&lt;p&gt;TDF 16ms #0はYouTubeライブでストリーミングされていたので、アーカイブが残っています。&lt;/p&gt;

&lt;div class=&#34;movie-wrap&#34;&gt;
&lt;iframe width=&#34;1920&#34; height=&#34;1080&#34; src=&#34;https://www.youtube.com/embed/MmOaXb9ldz8&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;閉会式ではTDF 16msのコンセプトについての説明がありました。「シーンの炎を絶やさない🔥」「持続可能なデモパーティ」の話が興味深かったです。&lt;/p&gt;

&lt;p&gt;さまざまな試行錯誤をしていただいているオーガナイザーの方々に深く感謝します。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-10-30-tdf16ms0/5-52-51_screenshot.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-10-30-tdf16ms0/5-52-51_screenshot.png&#34; alt=&#34;シーンの炎を絶やさない🔥&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-10-30-tdf16ms0/5-53-20_screenshot.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-10-30-tdf16ms0/5-53-20_screenshot.png&#34; alt=&#34;3つのコンセプト&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-10-30-tdf16ms0/5-53-46_screenshot.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-10-30-tdf16ms0/5-53-46_screenshot.png&#34; alt=&#34;持続可能なデモパーティ&#34; /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>レイトレ合宿9で4次元立方体をテーマにしたアニメーションを作成しました</title>
      <link>https://gam0022.net/blog/2023/09/20/rtcamp9/</link>
      <pubDate>Wed, 20 Sep 2023 12:00:00 +0900</pubDate>
      
      <guid>https://gam0022.net/blog/2023/09/20/rtcamp9/</guid>
      <description>&lt;p&gt;9月1日(金)～9月3日(日)に&lt;a href=&#34;http://www.seichoji.com/&#34;&gt;日蓮宗大本山清澄寺&lt;/a&gt;で開催された&lt;a href=&#34;https://sites.google.com/view/rtcamp9/home&#34;&gt;レイトレ合宿9&lt;/a&gt;に参加しました。&lt;/p&gt;

&lt;p&gt;4次元空間上で回転してから、それを3次元に投影することで、内外が入れ替わるような不思議なループアニメーションをテーマにしました。&lt;/p&gt;

&lt;p&gt;自作のレンダラーで &lt;strong&gt;5分の制限時間&lt;/strong&gt; でレンダリングして4位をいただきました！次の動画は合宿運営側で制限時間内にレンダリングしたものです。&lt;/p&gt;

&lt;video playsinline=&#34;&#34; loop=&#34;&#34; muted=&#34;&#34; controls=&#34;&#34; width=&#34;100%&#34; src=&#34;https://gam0022.net/images/posts/2023-09-19-rtcamp9/gam_crf12.mp4&#34; poster=&#34;/images/posts/2023-09-19-rtcamp9/218.jpg&#34;&gt;&lt;/video&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;時間制限なしで4K解像度でレンダリングした動画はYouTubeにアップロードしました。&lt;/p&gt;

&lt;div class=&#34;movie-wrap&#34;&gt;
&lt;iframe width=&#34;1920&#34; height=&#34;1080&#34; src=&#34;https://www.youtube.com/embed/ohbv8_jCQtc&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;YouTubeの仕様の勉強も兼ねて、ループアニメーションという特性を活かした&lt;a href=&#34;https://youtube.com/shorts/SgPbXt50Jw0?si=n_qbmh5-ouQYhrTp&#34;&gt;YouTubeショート版&lt;/a&gt;も作成しました。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; 9、4Dをテーマにして4位でした！&lt;br&gt;&lt;br&gt;4次元空間上で回転し、それから3次元に投影することで、内外が入れ替わるような不思議なループアニメーションを制作しました。&lt;br&gt;&lt;br&gt;OptiXで開発した自作レンダラーで300秒以内にレンダリングしました。 &lt;a href=&#34;https://t.co/aP4w23rAYT&#34;&gt;pic.twitter.com/aP4w23rAYT&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1698130408406462644?ref_src=twsrc%5Etfw&#34;&gt;September 3, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h1 id=&#34;お寺で合宿&#34;&gt;お寺で合宿！？&lt;/h1&gt;

&lt;p&gt;去年のレイトレ8は沖縄のラグジュアリーなホテルでの開催でしたが、今年は対照的に質素にお寺での開催でした。
運営メンバー曰く、ダイナミックレンジの広さを重視しているそうです！&lt;/p&gt;

&lt;p&gt;去年のレポートはこちらです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gam0022.net/blog/2022/10/17/rtcamp8/&#34;&gt;レイトレ合宿8参加レポート | gam0022.net&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;当日の詳細な様子については、&lt;a href=&#34;https://twitter.com/Kinakomoti2357/status/1703970431546605827&#34;&gt;@Kinakomoti2357&lt;/a&gt;さんのレポートがとても参考になります。
ぜひ合わせて読んでください。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; 9の参加レポートを書きました&lt;a href=&#34;https://t.co/f8vi2PbrJC&#34;&gt;https://t.co/f8vi2PbrJC&lt;/a&gt;&lt;/p&gt;&amp;mdash; KiNaNkomoti C102_2日目西か-03b (@Kinakomoti2357) &lt;a href=&#34;https://twitter.com/Kinakomoti2357/status/1703970431546605827?ref_src=twsrc%5Etfw&#34;&gt;September 19, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h1 id=&#34;本戦の実行環境&#34;&gt;本戦の実行環境&lt;/h1&gt;

&lt;p&gt;レイトレ合宿9の本戦では、AWSを利用してレンダラーを実行する必要があります。インスタンスタイプの選択肢は以下の通りです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CPUレンダラーの場合: c6i.32xlargeを2台&lt;/li&gt;
&lt;li&gt;GPUレンダラーの場合: g4dn.xlargeを2台（私はこちらを選択）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今年、新たなルールとして2台のインスタンスを利用できるようになりました。&lt;/p&gt;

&lt;p&gt;私はフレームを半分に分割して2台のインスタンスを活用する単純な戦略にしました。
余談ですが、片方のインスタンスで描画が失敗してもバレないようにループは2周するようにしました（笑）。&lt;/p&gt;

&lt;p&gt;毎年、新しい試みが取り入れられることが、この合宿の魅力の一つだと思います。&lt;/p&gt;

&lt;h1 id=&#34;自作レンダラーの紹介&#34;&gt;自作レンダラーの紹介&lt;/h1&gt;

&lt;p&gt;GPUレンダラーをOptiXで開発しました。レンダラーの名前はredflashです。&lt;/p&gt;

&lt;p&gt;こちらがレンダラーのプレゼン資料です。&lt;/p&gt;

&lt;div class=&#34;google-slide-wrap&#34;&gt;
&lt;iframe src=&#34;https://docs.google.com/presentation/d/e/2PACX-1vQbWup2egsNq-4MgXMBmQnp-M9HBHbotYQZq-C2ABcRaQNRqBFs3zgkQVWfrqCUctZlqQzskBRiAEEX/embed?start=false&amp;loop=false&amp;delayms=3000&#34; frameborder=&#34;0&#34; width=&#34;1440&#34; height=&#34;839&#34; allowfullscreen=&#34;true&#34; mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://speakerdeck.com/gam0022/rtcamp9&#34;&gt;Speaker Deck版&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;プレゼン資料をベースにしながら、当日話した内容などを文章として補足しながら紹介します。&lt;/p&gt;

&lt;h2 id=&#34;アピールポイント&#34;&gt;アピールポイント&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-09-19-rtcamp9/slide_2p.png&#34; alt=&#34;アピールポイント&#34; /&gt;&lt;/p&gt;

&lt;p&gt;アピールポイントは次の2点です。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;4D上の回転を3Dに投影することで、内外が入れ替わる不思議なアニメーション&lt;/li&gt;
&lt;li&gt;2023年に発表されたばかりのレイマーチングの高速化の論文を実装

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://diglib.eg.org/bitstream/handle/10.2312/egs20231014/057-060.pdf?sequence=1&amp;amp;isAllowed=y&#34;&gt;[Bán&amp;amp;Valasek 23] Automatic Step Size Relaxation in Sphere Tracing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;基本機能&#34;&gt;基本機能&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-09-19-rtcamp9/slide_3p.png&#34; alt=&#34;基本機能&#34; /&gt;&lt;/p&gt;

&lt;p&gt;レンダラーの基本機能です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Unidirectional Path Tracing

&lt;ul&gt;
&lt;li&gt;implemented in NVIDIA® OptiX 6.5&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Materials

&lt;ul&gt;
&lt;li&gt;Disney BRDF&lt;/li&gt;
&lt;li&gt;Lambert Diffuse&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;NEE（Next Event Estimation）&lt;/li&gt;
&lt;li&gt;MIS（Multiple Importance Sampling）&lt;/li&gt;
&lt;li&gt;Primitives

&lt;ul&gt;
&lt;li&gt;Sphere&lt;/li&gt;
&lt;li&gt;Mesh&lt;/li&gt;
&lt;li&gt;Distance Function (Raymarching)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ACES Filmic Tone Mapping&lt;/li&gt;
&lt;li&gt;Deep Learning Denoising&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;シンプルな単方向のパストレーシングで、NEEやMISサンプリングの効率化をしています。&lt;/p&gt;

&lt;p&gt;OptiXのカスタムなプリミティブの衝突判定としてレイマーチングを実装し、距離関数によるプリミティブもサポートしています。
詳しくは過去の記事を参考にしてください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gam0022.net/blog/2019/08/05/optix-raymarching-pathtracing/&#34;&gt;NVIDIA® OptiX上で『レイマーチング×パストレーシング』による物理ベースレンダラーを実装した | gam0022.net&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;余談ですが、昨今のレイトレ合宿では1フレームに使える時間が減っているのため、単方向のパストレーシングが多い印象でした。&lt;/p&gt;

&lt;h2 id=&#34;レンダラーの出力設定&#34;&gt;レンダラーの出力設定&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-09-19-rtcamp9/slide_4p.png&#34; alt=&#34;レンダラーの出力設定&#34; /&gt;&lt;/p&gt;

&lt;p&gt;レンダラーの出力設定について、解像度はフルHD（1920x1080）、長さはレギュレーション上の最大の10秒にしました。&lt;/p&gt;

&lt;p&gt;30FPSで10秒なので、合計300フレームを描画しました。&lt;/p&gt;

&lt;p&gt;制限時間が300秒（5分）なので、1フレームあたりに使える時間は1秒とかなり短めでしたが、ほとんどノイズが出ない綺麗な結果にできました。&lt;/p&gt;

&lt;h2 id=&#34;超立方体-4次元上の回転&#34;&gt;超立方体（4次元上の回転）&lt;/h2&gt;

&lt;p&gt;レイトレ合宿で何を作ろうと考えた時、動画の最大の長さが10秒だったので、ループ可能なアニメーションが良さそうだと思いました。&lt;/p&gt;

&lt;p&gt;ふと、TokyoDemoFest2021のShowdown準決勝で&lt;a href=&#34;https://twitter.com/sp4ghet&#34;&gt;sp4ghet&lt;/a&gt;さんが&lt;a href=&#34;https://www.shadertoy.com/view/stcSDM&#34;&gt;表裏が裏返るようなアニメーション&lt;/a&gt;を作っていたのを思い出して、自分でもやってみました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-09-19-rtcamp9/slide_5p.png&#34; alt=&#34;超立方体&#34; /&gt;&lt;/p&gt;

&lt;p&gt;超立方体とは4次元空間上の立方体です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zellij.hatenablog.com/entry/20121201/p1&#34;&gt;4次元の立方体の理解 - 大人になってからの再学習&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;4次元の回転を3次元から観測すると、内側と外側がグルグルと入れ替わるようなおもしろいアニメーションになります。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-09-19-rtcamp9/Tesseract.gif&#34; alt=&#34;Tesseract&#34; /&gt;&lt;/p&gt;

&lt;p&gt;このアニメーションは&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB:8-cell-simple.gif&#34;&gt;Wikipedia&lt;/a&gt;から引用しました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-09-19-rtcamp9/slide_7p.png&#34; alt=&#34;描画の流れ&#34; /&gt;&lt;/p&gt;

&lt;p&gt;具体的な実装としては、距離関数に与える座標をうまく加工しているだけです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;3次元座標を4次元に変換（逆ステレオ投影）&lt;/li&gt;
&lt;li&gt;4次元空間上で回転&lt;/li&gt;
&lt;li&gt;4次元座標を3次元に変換（ステレオ投影）&lt;/li&gt;
&lt;li&gt;3次元空間上で描画&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以下は、ステレオ投影とその利用例をCUDA C言語で実装したものになります。&lt;/p&gt;

&lt;p&gt;実際の距離関数はマテリアル分けだったり、複数の距離関数を合成したりと、もう少し複雑になっていますが、分かりやすさ重視でシンプルにしました。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// 3次元座標を4次元に変換（逆ステレオ投影）
float4 inverseStereographic(float3 p)
{
    float k = 2.0 / (1.0 + dot(p, p));
    return make_float4(k * p, k - 1.0);
}

// 4次元座標を3次元に変換（ステレオ投影）
float3 stereographic(float4 p4)
{
    float k = 1.0 / (1.0 + p4.w);
    return k * make_float3(p4.x, p4.y, p4.z);
}

// 距離関数での利用例
float map(float3 pos)
{
    float f = length(pos);

    // 3Dから4Dに逆ステレオ投影
    float4 p4d = inverseStereographic(pos);

    // 4D空間のZW平面上の回転
    float2 p4d_zw = make_float2(p4d.z, p4d.w);
    rot(p4d_zw, (-time + 0.01) / 5 * TAU);
    p4d.z = p4d_zw.x;
    p4d.w = p4d_zw.y;

    // 4Dから3Dにステレオ変換
    float3 p = stereographic(p4d);

    // 3D上で距離関数を評価
    float d = dMenger(p / _MengerUniformScale0, _MengerOffset0, _MengerScale0, _MengerIteration0);
    d *= _MengerUniformScale0;

    // 空間の歪みを考慮して距離関数をスケール（0.7は係数）
    float e = length(p);
    d *= min(1.0, 0.7 / e) * max(1.0, f);

    return d;
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;4次元から3次元のステレオ投影の幾何学的な理解については、3Blue1Brownの動画にとても助けられました。&lt;/p&gt;

&lt;div class=&#34;movie-wrap&#34;&gt;
&lt;iframe width=&#34;1920&#34; height=&#34;1080&#34; src=&#34;https://www.youtube.com/embed/94NmanMgR9k?si=S0an_wHu7KWIyVq9&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-09-19-rtcamp9/slide_9p.png&#34; alt=&#34;シーン構成&#34; /&gt;&lt;/p&gt;

&lt;p&gt;MengerSpongeと呼ばれる有名なフラクタルをベースにしました。外側と内側は2種類のMengerSpongeから構成されます。&lt;/p&gt;

&lt;p&gt;外側と内側で対照的なマテリアルに設定していて、外側は複雑な金属感、内側はシンプルなサイバー感をイメージしました。&lt;/p&gt;

&lt;p&gt;アニメーションの途中で部屋を暗くしていますが、サイバー感のあるマテリアルが光ってかっこよくなるように調整を試行錯誤しました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-09-19-rtcamp9/slide_11p.png&#34; alt=&#34;モデリングの試行錯誤&#34; /&gt;&lt;/p&gt;

&lt;p&gt;モデリングはUnity上で行ってパラメーター調整してから、後からCUDAに移植するアプローチをとりました。&lt;/p&gt;

&lt;p&gt;パラメーター調整はUnity上の方が作業しやすいからです。&lt;/p&gt;

&lt;h2 id=&#34;レイマーチングの高速化&#34;&gt;レイマーチングの高速化&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-09-19-rtcamp9/slide_12p.png&#34; alt=&#34;レイマーチング（Sphere Tracing）の高速化の研究&#34; /&gt;&lt;/p&gt;

&lt;p&gt;レイマーチングの高速化の論文を3つを調査しました。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://diglib.eg.org/handle/10.2312/stag.20141233.001-008&#34;&gt;[Keinert et al. 14] Enhanced Sphere Tracing&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;@Hirai0827さんによる&lt;a href=&#34;https://qiita.com/Hirai0827/items/eddcb73a1976c3088b88&#34;&gt;日本語解説&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://diglib.eg.org/bitstream/handle/10.2312/egs20181037/029-032.pdf&#34;&gt;[Bán&amp;amp;Valasek 18] Accelerating Sphere Tracing&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;@Hirai0827さんによる&lt;a href=&#34;https://qiita.com/Hirai0827/items/e05e13f343357d648b1b&#34;&gt;日本語解説&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://diglib.eg.org/bitstream/handle/10.2312/egs20231014/057-060.pdf?sequence=1&amp;amp;isAllowed=y&#34;&gt;[Bán&amp;amp;Valasek 23] Automatic Step Size Relaxation in Sphere Tracing&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;この3つの手法の基本的な考え方はどれも共通していて、通常より大きくレイを進めて、進み過ぎたら引き返すというシンプルなものです。&lt;/p&gt;

&lt;h3 id=&#34;keinert-et-al-14-enhanced-sphere-tracing&#34;&gt;[Keinert et al. 14] Enhanced Sphere Tracing&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-09-19-rtcamp9/slide_13p.png&#34; alt=&#34;[Keinert et al. 14] Enhanced Sphere Tracing&#34; /&gt;&lt;/p&gt;

&lt;p&gt;[Keinert et al. 14] では、レイのステップを $\omega \in[1,2)$ 倍して通常より大きくレイを進めます。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ω&lt;/code&gt; が小さいと効果が薄れてしまい、 &lt;code&gt;ω&lt;/code&gt; が大きすぎると引き返しが発生して効率が悪くなります。&lt;/p&gt;

&lt;p&gt;そのため、適切な &lt;code&gt;ω&lt;/code&gt; はシーンの形状に応じて手動で調整する必要があります。&lt;/p&gt;

&lt;p&gt;その他、この論文では「スクリーンスペースを考慮した交差点の選択」「自己交差を防ぐためのεの動的設定」「非連続性の緩和」「凸形状物質における最適化」にも触れられていますが、今回は割愛します。&lt;/p&gt;

&lt;h3 id=&#34;bán-valasek-18-accelerating-sphere-tracing&#34;&gt;[Bán&amp;amp;Valasek 18] Accelerating Sphere Tracing&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-09-19-rtcamp9/slide_14p.png&#34; alt=&#34;[Bán&amp;amp;Valasek 18] Accelerating Sphere Tracing&#34; /&gt;&lt;/p&gt;

&lt;p&gt;[Bán&amp;amp;Valasek 18] は [Keinert et al. 14] の改良版で、レイを大きく進めるステップを定数ではなく状況に応じて計算します。&lt;/p&gt;

&lt;p&gt;具体的にはシーンの形状を平面に仮定して次のステップを予測します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;マーチングループの現在のステップSphere（半径 $r_n$ ）&lt;/li&gt;
&lt;li&gt;そのSphereに接する平面&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上の2つにぴったり接する次のステップのSphere（半径 $r_{n+1}$）を決定し、ステップ $d_{n+1}$ を求めます。&lt;/p&gt;

&lt;p&gt;さらに、シーンが平面でないカーブした面を考慮して、ωで調整できるようにします。&lt;/p&gt;

&lt;p&gt;$$
d_{n+1} = r_n + \omega r_{n+1}, \omega \in(0,1)
$$&lt;/p&gt;

&lt;h3 id=&#34;bán-valasek-23-automatic-step-size-relaxation-in-sphere-tracing&#34;&gt;[Bán&amp;amp;Valasek 23] Automatic Step Size Relaxation in Sphere Tracing&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-09-19-rtcamp9/slide_15p.png&#34; alt=&#34;[Bán&amp;amp;Valasek 23] Automatic Step Size Relaxation in Sphere Tracing&#34; /&gt;&lt;/p&gt;

&lt;p&gt;[Bán&amp;amp;Valasek 23] は [Bán&amp;amp;Valasek 18] と同じ著者による研究で、平面を仮定する基本的なアプローチはそのままに &lt;code&gt;ω&lt;/code&gt; を自動調整するようにさらに改良したものです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;引き返しが起きない状態が続けばωを大きく

&lt;ul&gt;
&lt;li&gt;どのくらい大きくするかは $\beta \in(0,1)$ で調整&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;引き返しが発生したらωをリセット&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;前の2つの手法より良いか同等の結果となっていました。基本アプローチは同じでパラメーター調整の工夫なので、納得できる結果です。&lt;/p&gt;

&lt;h4 id=&#34;bán-valasek-23-の結果&#34;&gt;[Bán&amp;amp;Valasek 23] の結果&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-09-19-rtcamp9/slide_16p.png&#34; alt=&#34;[Bán&amp;amp;Valasek 23] Automatic Step Size Relaxation in Sphere Tracingの結果&#34; /&gt;&lt;/p&gt;

&lt;p&gt;今回の提出シーンを使って、同じサンプリング数のレンダリング時間を計測したところ、約1.9倍ほど高速化しました（β=0.2）。&lt;/p&gt;

&lt;p&gt;ここまで効果があるとは正直驚きでした。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-09-19-rtcamp9/slide_17p.png&#34; alt=&#34;[Bán&amp;amp;Valasek 23] Automatic Step Size Relaxation in Sphere Tracingの結果 時間ごと&#34; /&gt;&lt;/p&gt;

&lt;p&gt;時系列で見ていくと、歪みの少ないシーンほど効果が高く、歪みの大きいシーンは効果が少し下がるようでした。&lt;/p&gt;

&lt;p&gt;この理由はシーンの形状に平面を仮定しているのが関係ありそうな気がしました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-09-19-rtcamp9/slide_18p.png&#34; alt=&#34;[Bán&amp;amp;Valasek 23] Automatic Step Size Relaxation in Sphere Tracingの結果 Mandelbox&#34; /&gt;&lt;/p&gt;

&lt;p&gt;一方で去年のレイトレ合宿8のシーンで試したところ、むしろ性能が半分ほどに大きく劣化してしまいました。&lt;/p&gt;

&lt;p&gt;Mandelboxというフラクタルのシーンだったのですが、平面が少なく、曲面で構成されるのが原因かもしれません。&lt;/p&gt;

&lt;p&gt;まとめると、以下のような傾向がありそうでした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MengerSpongeのように平面から構成されるフラクタルとは相性が良い&lt;/li&gt;
&lt;li&gt;Mandelboxのように曲面から構成されるフラクタルとは相性が悪い&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;色んなシーンで検証したわけではないので、あくまで予想ですが、なんとなく納得はできる結果になりました。&lt;/p&gt;

&lt;h1 id=&#34;セミナーの発表資料&#34;&gt;セミナーの発表資料&lt;/h1&gt;

&lt;p&gt;45分枠をいただたので、2つのテーマ（20分＋25分）で発表しました。&lt;/p&gt;

&lt;h2 id=&#34;object-space-raymarching-in-unreal-engine-5-2&#34;&gt;Object Space Raymarching in Unreal Engine 5.2&lt;/h2&gt;

&lt;p&gt;レイトレ合宿アドベントカレンダーと同じ内容です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gam0022.net/blog/2023/07/31/raymarching-in-ue5/&#34;&gt;Object Space Raymarching in Unreal Engine 5.2 | gam0022.net&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Unreal Engine 5.2上でオブジェクトスペースのレイマーチングを実装したので、その解説をします。&lt;/p&gt;

&lt;p&gt;レイマーチングをノードだけで実装するのは大変なので、MaterialのCustomノードを用いて複雑な処理はHLSLのコードで実装しました。&lt;/p&gt;

&lt;div class=&#34;google-slide-wrap&#34;&gt;
&lt;iframe src=&#34;https://docs.google.com/presentation/d/e/2PACX-1vQfE3NIpPR3jQ-YISM7paRmMD4Z7-onSKdKK4RGXd8A9K36Wguj9S7zXyo_XCsNB-aFT22gxFyr7Z-c/embed?start=false&amp;loop=false&amp;delayms=3000&#34; frameborder=&#34;0&#34; width=&#34;1440&#34; height=&#34;839&#34; allowfullscreen=&#34;true&#34; mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://speakerdeck.com/gam0022/raymarching-in-ue5&#34;&gt;Speaker Deck版&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;ifsによるフラクタルのモデリング&#34;&gt;IFSによるフラクタルのモデリング&lt;/h2&gt;

&lt;p&gt;今回の合宿でも利用したMengerSpongeなどのフラクタルはIFS（Iterated Function System）と呼ばれる手法で距離関数を実装しています。&lt;/p&gt;

&lt;p&gt;そのIFSについて、現実世界の実例（万華鏡や絞り染め）を用いて説明しました。&lt;/p&gt;

&lt;div class=&#34;google-slide-wrap&#34;&gt;
&lt;iframe src=&#34;https://docs.google.com/presentation/d/e/2PACX-1vTeqnJbtD5u15mXPjgFqQJW854Tr24C-8Ie-EQXme_XxQBbnqTsGBFEO6mvNqpptoxOqdhLyKhjIdcF/embed?start=false&amp;loop=false&amp;delayms=3000&#34; frameborder=&#34;0&#34; width=&#34;1440&#34; height=&#34;839&#34; allowfullscreen=&#34;true&#34; mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://speakerdeck.com/gam0022/ifs-fractal&#34;&gt;Speaker Deck版&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;オススメのセミナー資料&#34;&gt;オススメのセミナー資料&lt;/h1&gt;

&lt;p&gt;どのセミナーもとても参考になる興味深い内容だったのですが、個人的に印象に残ったセミナーの資料を紹介します。&lt;/p&gt;

&lt;h2 id=&#34;現代のgpuの実行スタイルとレイトレ-2023-by-shocker-0x15&#34;&gt;現代のGPUの実行スタイルとレイトレ (2023) by @Shocker_0x15&lt;/h2&gt;

&lt;p&gt;参加者投票によってベストプレゼンター賞にも輝いた &lt;a href=&#34;https://twitter.com/Shocker_0x15&#34;&gt;@Shocker_0x15&lt;/a&gt; さんによる「現代のGPUの実行スタイルとレイトレ (2023)」です。&lt;/p&gt;

&lt;iframe class=&#34;speakerdeck-iframe&#34; frameborder=&#34;0&#34; src=&#34;https://speakerdeck.com/player/3183d0c88c5f4de39daaeb464a2690c9&#34; title=&#34;現代のGPUの実行スタイルとレイトレ (2023)&#34; allowfullscreen=&#34;true&#34; style=&#34;border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 315;&#34; data-ratio=&#34;1.7777777777777777&#34;&gt;&lt;/iframe&gt;

&lt;p&gt;「シェーダーではifが重い」という話はよく耳にしますが、これには古い情報や誤解が混ざっていることがあり、現代のGPUにおいては必ずしも正しいとは言えません。&lt;/p&gt;

&lt;p&gt;現代のGPUにおいて、if文が性能にどのように影響するかを理解するためには、実行ダイバージェンスの観点からアプローチすることが重要です。
また、現代のGPUにおける命令実行戦略、データダイバージェンス、キャッシュとメモリの速度の違い、Occupancy（GPUのリソース利用率）、そしてレイトレーシングにおけるダイバージェンスの問題など、さまざまな要因が影響を与えます。&lt;/p&gt;

&lt;p&gt;残念ながら、このようなトピックに関するまとまった日本語の資料は少ないため、この発表は非常に貴重なものでした。
シェーダーを扱う開発者は一度は目を通しておきたい発表でした！&lt;/p&gt;

&lt;h2 id=&#34;0-0-1-0-の乱数を得るための-本当の-方法-by-h013&#34;&gt;[0.0, 1.0) の乱数を得るための“本当の”方法 by @h013&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://twitter.com/h013&#34;&gt;@h013&lt;/a&gt;さんによる「[0.0, 1.0) の乱数を得るための“本当の”方法」です。&lt;/p&gt;

&lt;iframe class=&#34;speakerdeck-iframe&#34; frameborder=&#34;0&#34; src=&#34;https://speakerdeck.com/player/b000ac1dfa2d479d83756b0267d3f992&#34; title=&#34;[0.0, 1.0) の乱数を得るための“本当の”方法&#34; allowfullscreen=&#34;true&#34; style=&#34;border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 315;&#34; data-ratio=&#34;1.7777777777777777&#34;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;code&gt;[0.0, 1.0)&lt;/code&gt; のfloatの乱数を生成する方法は自明ではなく、ほとんどのC++標準ライブラリーの &lt;code&gt;std::generate_canonical&lt;/code&gt; 実装では &lt;code&gt;[0.0, 1.0)&lt;/code&gt; が保証されていないというのは驚きでした。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[0.0, 1.0)&lt;/code&gt; が保証される方法もパフォーマンス上の問題があったり、最適化の方法がさまざまに考案されていたり、こんなに乱数って奥が深かったんだと思いました。&lt;/p&gt;

&lt;p&gt;これまで乱数について深く考えたことはなかったのですが、貴重な気づきが得られる発表でした。&lt;/p&gt;

&lt;h2 id=&#34;volume-expression-ggx-microfacet-by-kinakomoti2357&#34;&gt;Volume Expression GGX(Microfacet) by @Kinakomoti2357&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://twitter.com/Kinakomoti2357&#34;&gt;@Kinakomoti2357&lt;/a&gt;さんによる「Volume Expression GGX(Microfacet)」です。&lt;/p&gt;

&lt;iframe class=&#34;speakerdeck-iframe&#34; frameborder=&#34;0&#34; src=&#34;https://speakerdeck.com/player/d1ad5e65246047a4a6f87c7a8dbe398f&#34; title=&#34;Volume Expression GGX(Microfacet)&#34; allowfullscreen=&#34;true&#34; style=&#34;border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 315;&#34; data-ratio=&#34;1.7777777777777777&#34;&gt;&lt;/iframe&gt;

&lt;p&gt;きなこもちさんは&lt;a href=&#34;https://booth.pm/ja/items/5004949&#34;&gt;GGXは何処から来たのか&lt;/a&gt;という本を書いた方で、導入のMicrofacet BRDFの説明が分かりやすかったです。
レイトレを始めたばかりの人にもオススメできる内容でした。&lt;/p&gt;

&lt;p&gt;個人的にMultiple-Scatteringの扱いについて気になっていたところだったので参考になりました。&lt;/p&gt;

&lt;p&gt;本題のGGXのVolumeについても興味深い話だと思いました。&lt;/p&gt;

&lt;h1 id=&#34;マテリアル神経衰弱&#34;&gt;マテリアル神経衰弱&lt;/h1&gt;

&lt;p&gt;当日のレクリエーションとしてマテリアル神経衰弱が開催されました。&lt;/p&gt;

&lt;p&gt;カード216枚もあり、ほとんど同じようなカードが多数存在するため、悪意を感じるような難易度の高さでした。&lt;/p&gt;

&lt;p&gt;たとえば、同じ色でもplasticやphenolicなどの材質にバリエーションがあり、ほとんど同じにしか見えないが違うカードが多数ありました。&lt;/p&gt;

&lt;p&gt;その難易度にもかかわらず、優勝チームはなんと3ペアを引き当てていました。すごすぎる…！&lt;/p&gt;

&lt;p&gt;なお、カードはレイトレ合宿のためだけの特注品だそうです！&lt;/p&gt;

&lt;p&gt;レクリエーションの内容は直前まで秘密にされていたため、合宿参加者は「一体何が起きるんだろう？」という気持ちで臨むことになりました。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;マテリアル神経衰弱をしました &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/j4KSiKpGfR&#34;&gt;pic.twitter.com/j4KSiKpGfR&lt;/a&gt;&lt;/p&gt;&amp;mdash; hole (@h013) &lt;a href=&#34;https://twitter.com/h013/status/1697830574294249798?ref_src=twsrc%5Etfw&#34;&gt;September 2, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;マテリアル神経衰弱&lt;br&gt;どれも同じにしか見えない🤯&lt;br&gt; &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/DWP1CbosWD&#34;&gt;pic.twitter.com/DWP1CbosWD&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1697832084034003167?ref_src=twsrc%5Etfw&#34;&gt;September 2, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;部屋対抗マテリアル神経衰弱、優勝！！景品はマテリアルトランプ🃏 &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/LyNN733b9B&#34;&gt;pic.twitter.com/LyNN733b9B&lt;/a&gt;&lt;/p&gt;&amp;mdash; Nishiki (@yknishidate) &lt;a href=&#34;https://twitter.com/yknishidate/status/1697924033504026778?ref_src=twsrc%5Etfw&#34;&gt;September 2, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; 9終了！今年から運営側でしたが変わらず楽しかったです。皆さまありがとうございました！&lt;br&gt;セミナーではベストに選んで頂きましたが、肝心の本戦に出せなかったので来年はリベンジ。&lt;br&gt;&lt;br&gt;写真はレクリエーション用に作ったMERL BRDFトランプによるハードコア神経衰弱 &lt;a href=&#34;https://t.co/FMioEzeoyp&#34;&gt;pic.twitter.com/FMioEzeoyp&lt;/a&gt;&lt;/p&gt;&amp;mdash; Shocker (@Shocker_0x15) &lt;a href=&#34;https://twitter.com/Shocker_0x15/status/1698268528355553623?ref_src=twsrc%5Etfw&#34;&gt;September 3, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h1 id=&#34;感想&#34;&gt;感想&lt;/h1&gt;

&lt;p&gt;本戦は色々なアプローチに挑戦されている方が多く、多様性がありました。
1位のうしおさんはボクセル、2位のholeさんはボリュームなど、計算時間的に難易度な高そうなテーマを扱いながら、ノイズがまったく分からない結果だったので印象的でした。&lt;/p&gt;

&lt;p&gt;去年に引き続き、セミナーは参加者全員で発表しました。参加者のバックグラウンドもさまざまだったので、いろんな分野の興味深い話や深い話を聞くことができて楽しかったです。&lt;/p&gt;

&lt;p&gt;Yoshi&amp;rsquo;s Dreannさんの&lt;a href=&#34;https://speakerdeck.com/runningoutrate/reitorehe-su-9seminazi-liao-svgfnituite&#34;&gt;SVGF&lt;/a&gt;やうでメガネさんの&lt;a href=&#34;https://www.docswell.com/s/udemegane/5247P4-2023-09-06-185245&#34;&gt;ReSTIR PT&lt;/a&gt;など、気になってはいるものの、なかなか手を出せていない手法についての発表も多く、自分も頑張らねばと思いました。&lt;/p&gt;

&lt;p&gt;さまざまなグラフィックスAPIにおけるレイトレの話もありました。kugiさんの&lt;a href=&#34;https://speakerdeck.com/kugimasa/webgpunihong-retemita&#34;&gt;WebGPU&lt;/a&gt;、Nishikiさんの&lt;a href=&#34;https://github.com/yknishidate/rtcamp9/blob/main/Vulkan%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E3%81%AE%E3%81%AF%E3%81%AA%E3%81%97.pdf&#34;&gt;Vulkan&lt;/a&gt;、Pentanさんの&lt;a href=&#34;https://github.com/Pentan/RaytracingCamp2019-23/blob/master/etc/2023/slides/seminar_slide.pdf&#34;&gt;Metal&lt;/a&gt;などです。&lt;/p&gt;

&lt;p&gt;今年は新規の参加者も多かったので、色んな人とお話できるよい機会に恵まれました。&lt;/p&gt;

&lt;p&gt;レイトレ合宿の運営の方々、その他の参加者のみなさん、本当にありがとうございました！&lt;/p&gt;

&lt;h1 id=&#34;写真コーナー&#34;&gt;写真コーナー&lt;/h1&gt;

&lt;p&gt;レイトレ合宿史上初の寺での開催でした。開催地を聞かされた時、お寺で合宿が可能なんだ…という驚きが強かったです。&lt;/p&gt;

&lt;p&gt;最終日は朝4時からお勤めあったり、3食とも精進料理だったりと、生活リズムが健康的になりました。いい経験になりました。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;お寺の朝は早い &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/jR0ZLg2wmR&#34;&gt;pic.twitter.com/jR0ZLg2wmR&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1697707181465100455?ref_src=twsrc%5Etfw&#34;&gt;September 1, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;朝食🍱 &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/y6EHL5ug4e&#34;&gt;pic.twitter.com/y6EHL5ug4e&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1697737461554962700?ref_src=twsrc%5Etfw&#34;&gt;September 1, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;お昼は蕎麦🍜 &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/7punHumnK8&#34;&gt;pic.twitter.com/7punHumnK8&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1697813390520139958?ref_src=twsrc%5Etfw&#34;&gt;September 2, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;夜ご飯🍱 &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/RqQxodezxn&#34;&gt;pic.twitter.com/RqQxodezxn&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1697967291919683822?ref_src=twsrc%5Etfw&#34;&gt;September 2, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;日の出もとても綺麗でした🌅&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;放射状のライトシャフトすごい🌅 &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/GnmDCd9N8Q&#34;&gt;pic.twitter.com/GnmDCd9N8Q&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1698063763306652078?ref_src=twsrc%5Etfw&#34;&gt;September 2, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;日の出🌅 &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/EoIqfssRRf&#34;&gt;pic.twitter.com/EoIqfssRRf&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1698071301800526108?ref_src=twsrc%5Etfw&#34;&gt;September 2, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;フリータイム中に境内を散歩したときの写真たちです。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;お寺⛩️で &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/vGSi0BcIBn&#34;&gt;pic.twitter.com/vGSi0BcIBn&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1697463738268520496?ref_src=twsrc%5Etfw&#34;&gt;September 1, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;巨大な杉🌲 &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/ljckfAnzUM&#34;&gt;pic.twitter.com/ljckfAnzUM&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1697745934405505036?ref_src=twsrc%5Etfw&#34;&gt;September 1, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;qme&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/oCVmNCFvC2&#34;&gt;pic.twitter.com/oCVmNCFvC2&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1697749270676529499?ref_src=twsrc%5Etfw&#34;&gt;September 1, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;海が見える &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/v9skl7fZnx&#34;&gt;pic.twitter.com/v9skl7fZnx&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1697749447936233824?ref_src=twsrc%5Etfw&#34;&gt;September 1, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;マテリアルとフォントが特徴的 &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/ldQbjAjGkz&#34;&gt;pic.twitter.com/ldQbjAjGkz&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1697756752744481206?ref_src=twsrc%5Etfw&#34;&gt;September 1, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;qme&#34; dir=&#34;ltr&#34;&gt;⛩️ &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/tGxQ04mL2A&#34;&gt;pic.twitter.com/tGxQ04mL2A&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1697760465529786856?ref_src=twsrc%5Etfw&#34;&gt;September 1, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;瞑想で精神統一🧘 &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/1wLEOw6GL1&#34;&gt;pic.twitter.com/1wLEOw6GL1&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1697776870610407885?ref_src=twsrc%5Etfw&#34;&gt;September 2, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;神社Now &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/TLUKeayQCB&#34;&gt;pic.twitter.com/TLUKeayQCB&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1698080450391191682?ref_src=twsrc%5Etfw&#34;&gt;September 2, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;見納めです🙏 &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E5%90%88%E5%AE%BF?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#レイトレ合宿&lt;/a&gt; &lt;a href=&#34;https://t.co/Bjin2IOgLG&#34;&gt;pic.twitter.com/Bjin2IOgLG&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1698139360858927237?ref_src=twsrc%5Etfw&#34;&gt;September 3, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>『Unityバイブル R5夏号』の「Shader Graphの基本操作から発展的なテクニックまで」を執筆しました</title>
      <link>https://gam0022.net/blog/2023/08/07/unity-bible/</link>
      <pubDate>Mon, 07 Aug 2023 10:00:00 +0900</pubDate>
      
      <guid>https://gam0022.net/blog/2023/08/07/unity-bible/</guid>
      <description>&lt;p&gt;8/29発売の&lt;a href=&#34;https://amzn.to/41D00wh&#34;&gt;『Unityバイブル R5夏号』&lt;/a&gt;のSECTION 01「Shader Graphの基本操作から発展的なテクニックまで」を執筆しました。&lt;/p&gt;

&lt;!--
[![『Unityバイブル R5夏号』](/images/posts/2023-08-07-unity-bible/thumbnail.jpg)](/images/posts/2023-08-07-unity-bible/thumbnail.png)
--&gt;

&lt;p&gt;&lt;a href=&#34;https://amzn.to/41D00wh&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-08-07-unity-bible/thumbnail.jpg&#34; alt=&#34;『Unityバイブル R5夏号』&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#34;booklink-box&#34; style=&#34;text-align:left;padding-bottom:20px;font-size:small;zoom: 1;overflow: hidden;&#34;&gt;&lt;div class=&#34;booklink-image&#34; style=&#34;float:left;margin:0 15px 10px 0;&#34;&gt;&lt;a href=&#34;https://hb.afl.rakuten.co.jp/hgc/117c8a81.32450c02.117c8a82.14f884ba/yomereba_main_202412192309199444?pc=http%3A%2F%2Fbooks.rakuten.co.jp%2Frb%2F17588439%2F%3Frafcid%3Dwsc_b_bs_1051722217600006323%3Fscid%3Daf_ich_link_urltxt%26m%3Dhttp%3A%2F%2Fm.rakuten.co.jp%2Fev%2Fbook%2F&#34; target=&#34;_blank&#34; &gt;&lt;img src=&#34;https://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/5689/9784862465689_1_3.jpg?_ex=200x200&#34; style=&#34;border: none;&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;booklink-info&#34; style=&#34;line-height:120%;zoom: 1;overflow: hidden;&#34;&gt;&lt;div class=&#34;booklink-name&#34; style=&#34;margin-bottom:10px;line-height:120%&#34;&gt;&lt;a href=&#34;https://hb.afl.rakuten.co.jp/hgc/117c8a81.32450c02.117c8a82.14f884ba/yomereba_main_202412192309199444?pc=http%3A%2F%2Fbooks.rakuten.co.jp%2Frb%2F17588439%2F%3Frafcid%3Dwsc_b_bs_1051722217600006323%3Fscid%3Daf_ich_link_urltxt%26m%3Dhttp%3A%2F%2Fm.rakuten.co.jp%2Fev%2Fbook%2F&#34; target=&#34;_blank&#34; &gt;Unityバイブル R5夏号&lt;/a&gt;&lt;div class=&#34;booklink-powered-date&#34; style=&#34;font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%&#34;&gt;posted with &lt;a href=&#34;https://yomereba.com&#34; rel=&#34;nofollow&#34; target=&#34;_blank&#34;&gt;ヨメレバ&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;booklink-detail&#34; style=&#34;margin-bottom:5px;&#34;&gt;kakunpc/室星 亮太/細田 翔/山本 剛史/小林 慶祐/長谷川 孝二 ボーンデジタル 2023年08月29日頃    &lt;/div&gt;&lt;div class=&#34;booklink-link2&#34; style=&#34;margin-top:10px;&#34;&gt;&lt;div class=&#34;shoplinkrakuten&#34; style=&#34;margin-right:5px;background: url(&#39;//img.yomereba.com/kz_y.gif&#39;) 0 -50px no-repeat;padding: 2px 0 2px 18px;white-space: nowrap;&#34;&gt;&lt;a href=&#34;https://hb.afl.rakuten.co.jp/hgc/117c8a81.32450c02.117c8a82.14f884ba/yomereba_main_202412192309199444?pc=http%3A%2F%2Fbooks.rakuten.co.jp%2Frb%2F17588439%2F%3Frafcid%3Dwsc_b_bs_1051722217600006323%3Fscid%3Daf_ich_link_urltxt%26m%3Dhttp%3A%2F%2Fm.rakuten.co.jp%2Fev%2Fbook%2F&#34; target=&#34;_blank&#34; &gt;楽天ブックスで購入&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;shoplinkamazon&#34; style=&#34;margin-right:5px;background: url(&#39;//img.yomereba.com/kz_y.gif&#39;) 0 0 no-repeat;padding: 2px 0 2px 18px;white-space: nowrap;&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/exec/obidos/asin/4862465684/gam00220c-22/&#34; target=&#34;_blank&#34; &gt;Amazonで購入&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;shoplinkkindle&#34; style=&#34;margin-right:5px;background: url(&#39;//img.yomereba.com/kz_y.gif&#39;) 0 0 no-repeat;padding: 2px 0 2px 18px;white-space: nowrap;&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/gp/search?keywords=Unity%E3%83%90%E3%82%A4%E3%83%96%E3%83%AB%20R5%E5%A4%8F%E5%8F%B7&amp;__mk_ja_JP=%83J%83%5E%83J%83i&amp;url=node%3D2275256051&amp;tag=gam00220c-22&#34; target=&#34;_blank&#34; &gt;Kindleで購入&lt;/a&gt;&lt;/div&gt;               &lt;div class=&#34;shoplinkseven&#34; style=&#34;margin-right:5px;background: url(&#39;//img.yomereba.com/kz_y.gif&#39;) 0 -100px no-repeat;padding: 2px 0 2px 18px;white-space: nowrap;&#34;&gt;&lt;a href=&#34;//ck.jp.ap.valuecommerce.com/servlet/referral?sid=3737095&amp;pid=891162441&amp;vc_url=http%3A%2F%2F7net.omni7.jp%2Fsearch%2F%3FsearchKeywordFlg%3D1%26keyword%3D9784862465689&amp;vcptn=kaereba&#34; target=&#34;_blank&#34; &gt;7netで購入&lt;img src=&#34;//ad.jp.ap.valuecommerce.com/servlet/atq/gifbanner?sid=3737095&amp;pid=891162441&#34; height=&#34;1&#34; width=&#34;1&#34; border=&#34;0&#34;&gt;&lt;/a&gt;&lt;/div&gt;                &lt;div class=&#34;shoplinkkino&#34; style=&#34;margin-right:5px;background: url(&#39;//img.yomereba.com/kz_y.gif&#39;) 0 -350px no-repeat;padding: 2px 0 2px 18px;white-space: nowrap;&#34;&gt;&lt;a href=&#34;//ck.jp.ap.valuecommerce.com/servlet/referral?sid=3737095&amp;pid=891162443&amp;vc_url=http%3A%2F%2Fwww.kinokuniya.co.jp%2Ff%2Fdsg-01-9784862465689&amp;vcptn=kaereba&#34; target=&#34;_blank&#34; &gt;紀伊國屋書店で購入&lt;img src=&#34;//ad.jp.ap.valuecommerce.com/servlet/gifbanner?sid=3737095&amp;pid=891162443&#34; height=&#34;1&#34; width=&#34;1&#34; border=&#34;0&#34;&gt;&lt;/a&gt;&lt;/div&gt;              &lt;div class=&#34;shoplinktoshokan&#34; style=&#34;margin-right:5px;background: url(&#39;//img.yomereba.com/kz_y.gif&#39;) 0 -300px no-repeat;padding: 2px 0 2px 18px;white-space: nowrap;&#34;&gt;&lt;a href=&#34;http://calil.jp/book/4862465684&#34; target=&#34;_blank&#34; &gt;図書館で探す&lt;/a&gt;&lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;booklink-footer&#34; style=&#34;clear: left&#34;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;unityバイブル-r5夏号&#34;&gt;Unityバイブル R5夏号&lt;/h2&gt;

&lt;p&gt;株式会社ボーンデジタルより販売されている「Unityバイブル」シリーズが、年2回の定期刊になりました。&lt;/p&gt;

&lt;p&gt;本書が最初の定期刊として、8月29日に発売されます。&lt;/p&gt;

&lt;p&gt;この号では、「10名の著者による至極の10テーマ」が取り上げられています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;高品質なグラフィックスを表現するためのUniversal RPの各種機能の解説&lt;/li&gt;
&lt;li&gt;Shader Graphの基本操作から発展的なテクニックまで&lt;/li&gt;
&lt;li&gt;TimelineでUIとキャラクターの演出をつけてみよう&lt;/li&gt;
&lt;li&gt;Photon Fusionによるリアルタイムネットワークゲーム&lt;/li&gt;
&lt;li&gt;Unity Localizationを使ってゲームを多言語化してみよう&lt;/li&gt;
&lt;li&gt;ゲームプレイの自動テスト&lt;/li&gt;
&lt;li&gt;.NET向けIDE「JetBrains Rider」の活用【前編】&lt;/li&gt;
&lt;li&gt;Editor拡張で作業効率を上げよう&lt;/li&gt;
&lt;li&gt;すぐに使えるゲームサウンド演出&lt;/li&gt;
&lt;li&gt;VRアプリケーションにおけるVRMアバターの導入&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;前回の&lt;a href=&#34;https://gam0022.net/blog/2021/06/08/unity-bible2/&#34;&gt;『Unityゲーム プログラミング・バイブル 2nd Generation』&lt;/a&gt;は1000ページ超えの厚さで「鈍器」とも言われていましたが、本書はテーマを厳選して300ページに凝縮されたボリュームに仕上がりました。
1テーマあたり約30ページとなり、各テーマの掘り下げも十分です。&lt;/p&gt;

&lt;h2 id=&#34;shader-graphの基本操作から発展的なテクニックまで&#34;&gt;Shader Graphの基本操作から発展的なテクニックまで&lt;/h2&gt;

&lt;p&gt;10のテーマのうち、「Shader Graphの基本操作から発展的なテクニックまで」というセクションを私が担当しました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-08-07-unity-bible/Collage3.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-08-07-unity-bible/Collage3.png&#34; alt=&#34;Shader Graphの基本操作から発展的なテクニックまで&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;SDユニティちゃん ©Unity Technologies Japan/UCL&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;このセクションでは初心者向けの基本的な使い方から、Custom Functionなどの発展的なテーマまで幅広く扱いました。&lt;/p&gt;

&lt;p&gt;Shader Graphを使う上で覚えおきたい重要なポイントをピックアップし、30ページにわたって丁寧に解説しています。&lt;/p&gt;

&lt;p&gt;以下がセクションの見出しです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Shader Graphとは？

&lt;ul&gt;
&lt;li&gt;コラム：Shader Graph vs ShaderLab&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Shader Graphの基本画面&lt;/li&gt;
&lt;li&gt;サンプル1：基本操作とPBRテクスチャ対応シェーダー

&lt;ul&gt;
&lt;li&gt;TIPS：Ridirect Nodeでエッジを整理しよう&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;サンプル2：ディゾルブシェーダー

&lt;ul&gt;
&lt;li&gt;TIPS：BackboardのCategory機能でプロパティを整理しよう&lt;/li&gt;
&lt;li&gt;TIPS：Sticky Noteでコメントを残そう&lt;/li&gt;
&lt;li&gt;TIPS：Group Selectionでノードをまとめよう&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;サンプル3：ToonシェーダーとCustom Function

&lt;ul&gt;
&lt;li&gt;TIPS：Sub Graphで機能を再利用しよう&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;サンプル4：プロシージャルテクスチャ&lt;/li&gt;
&lt;li&gt;サンプル5：ポストエフェクト&lt;/li&gt;
&lt;li&gt;このセクションのまとめと次のステップ

&lt;ul&gt;
&lt;li&gt;シェーダーとデモシーン&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Shader Graphの各機能をバランスよくマスターするための、5つの小規模なサンプルを用意しました。&lt;/p&gt;

&lt;p&gt;（2023-08-14追記）サンプルコードをGitHubで公開しました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gam0022/UnityBibleR5Summer-ShaderGraphTutorial&#34;&gt;github.com/gam0022/UnityBibleR5Summer-ShaderGraphTutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;なるべく複雑にならないようにシンプルに保ちながらも、そこそこの見栄えのするサンプルを目指しました。&lt;/p&gt;

&lt;p&gt;TIPSでは「Ridirect Node」「BackboardのCategory機能」「Group Selection」「Sub Graph」など覚えておくと作業効率を向上できる機能の使い方なども紹介しました。&lt;/p&gt;

&lt;p&gt;&lt;del&gt;さいごに、この本の発行部数はAmazonの予約数によって決まるとのことなので、興味を持っていただける方はぜひ予約していただければ幸いです🙇‍♂️&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;ご予約いただいた方はありがとうございました！&lt;/p&gt;

&lt;div class=&#34;booklink-box&#34; style=&#34;text-align:left;padding-bottom:20px;font-size:small;zoom: 1;overflow: hidden;&#34;&gt;&lt;div class=&#34;booklink-image&#34; style=&#34;float:left;margin:0 15px 10px 0;&#34;&gt;&lt;a href=&#34;https://hb.afl.rakuten.co.jp/hgc/117c8a81.32450c02.117c8a82.14f884ba/yomereba_main_202412192309199444?pc=http%3A%2F%2Fbooks.rakuten.co.jp%2Frb%2F17588439%2F%3Frafcid%3Dwsc_b_bs_1051722217600006323%3Fscid%3Daf_ich_link_urltxt%26m%3Dhttp%3A%2F%2Fm.rakuten.co.jp%2Fev%2Fbook%2F&#34; target=&#34;_blank&#34; &gt;&lt;img src=&#34;https://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/5689/9784862465689_1_3.jpg?_ex=200x200&#34; style=&#34;border: none;&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;booklink-info&#34; style=&#34;line-height:120%;zoom: 1;overflow: hidden;&#34;&gt;&lt;div class=&#34;booklink-name&#34; style=&#34;margin-bottom:10px;line-height:120%&#34;&gt;&lt;a href=&#34;https://hb.afl.rakuten.co.jp/hgc/117c8a81.32450c02.117c8a82.14f884ba/yomereba_main_202412192309199444?pc=http%3A%2F%2Fbooks.rakuten.co.jp%2Frb%2F17588439%2F%3Frafcid%3Dwsc_b_bs_1051722217600006323%3Fscid%3Daf_ich_link_urltxt%26m%3Dhttp%3A%2F%2Fm.rakuten.co.jp%2Fev%2Fbook%2F&#34; target=&#34;_blank&#34; &gt;Unityバイブル R5夏号&lt;/a&gt;&lt;div class=&#34;booklink-powered-date&#34; style=&#34;font-size:8pt;margin-top:5px;font-family:verdana;line-height:120%&#34;&gt;posted with &lt;a href=&#34;https://yomereba.com&#34; rel=&#34;nofollow&#34; target=&#34;_blank&#34;&gt;ヨメレバ&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;booklink-detail&#34; style=&#34;margin-bottom:5px;&#34;&gt;kakunpc/室星 亮太/細田 翔/山本 剛史/小林 慶祐/長谷川 孝二 ボーンデジタル 2023年08月29日頃    &lt;/div&gt;&lt;div class=&#34;booklink-link2&#34; style=&#34;margin-top:10px;&#34;&gt;&lt;div class=&#34;shoplinkrakuten&#34; style=&#34;margin-right:5px;background: url(&#39;//img.yomereba.com/kz_y.gif&#39;) 0 -50px no-repeat;padding: 2px 0 2px 18px;white-space: nowrap;&#34;&gt;&lt;a href=&#34;https://hb.afl.rakuten.co.jp/hgc/117c8a81.32450c02.117c8a82.14f884ba/yomereba_main_202412192309199444?pc=http%3A%2F%2Fbooks.rakuten.co.jp%2Frb%2F17588439%2F%3Frafcid%3Dwsc_b_bs_1051722217600006323%3Fscid%3Daf_ich_link_urltxt%26m%3Dhttp%3A%2F%2Fm.rakuten.co.jp%2Fev%2Fbook%2F&#34; target=&#34;_blank&#34; &gt;楽天ブックスで購入&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;shoplinkamazon&#34; style=&#34;margin-right:5px;background: url(&#39;//img.yomereba.com/kz_y.gif&#39;) 0 0 no-repeat;padding: 2px 0 2px 18px;white-space: nowrap;&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/exec/obidos/asin/4862465684/gam00220c-22/&#34; target=&#34;_blank&#34; &gt;Amazonで購入&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;shoplinkkindle&#34; style=&#34;margin-right:5px;background: url(&#39;//img.yomereba.com/kz_y.gif&#39;) 0 0 no-repeat;padding: 2px 0 2px 18px;white-space: nowrap;&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/gp/search?keywords=Unity%E3%83%90%E3%82%A4%E3%83%96%E3%83%AB%20R5%E5%A4%8F%E5%8F%B7&amp;__mk_ja_JP=%83J%83%5E%83J%83i&amp;url=node%3D2275256051&amp;tag=gam00220c-22&#34; target=&#34;_blank&#34; &gt;Kindleで購入&lt;/a&gt;&lt;/div&gt;               &lt;div class=&#34;shoplinkseven&#34; style=&#34;margin-right:5px;background: url(&#39;//img.yomereba.com/kz_y.gif&#39;) 0 -100px no-repeat;padding: 2px 0 2px 18px;white-space: nowrap;&#34;&gt;&lt;a href=&#34;//ck.jp.ap.valuecommerce.com/servlet/referral?sid=3737095&amp;pid=891162441&amp;vc_url=http%3A%2F%2F7net.omni7.jp%2Fsearch%2F%3FsearchKeywordFlg%3D1%26keyword%3D9784862465689&amp;vcptn=kaereba&#34; target=&#34;_blank&#34; &gt;7netで購入&lt;img src=&#34;//ad.jp.ap.valuecommerce.com/servlet/atq/gifbanner?sid=3737095&amp;pid=891162441&#34; height=&#34;1&#34; width=&#34;1&#34; border=&#34;0&#34;&gt;&lt;/a&gt;&lt;/div&gt;                &lt;div class=&#34;shoplinkkino&#34; style=&#34;margin-right:5px;background: url(&#39;//img.yomereba.com/kz_y.gif&#39;) 0 -350px no-repeat;padding: 2px 0 2px 18px;white-space: nowrap;&#34;&gt;&lt;a href=&#34;//ck.jp.ap.valuecommerce.com/servlet/referral?sid=3737095&amp;pid=891162443&amp;vc_url=http%3A%2F%2Fwww.kinokuniya.co.jp%2Ff%2Fdsg-01-9784862465689&amp;vcptn=kaereba&#34; target=&#34;_blank&#34; &gt;紀伊國屋書店で購入&lt;img src=&#34;//ad.jp.ap.valuecommerce.com/servlet/gifbanner?sid=3737095&amp;pid=891162443&#34; height=&#34;1&#34; width=&#34;1&#34; border=&#34;0&#34;&gt;&lt;/a&gt;&lt;/div&gt;              &lt;div class=&#34;shoplinktoshokan&#34; style=&#34;margin-right:5px;background: url(&#39;//img.yomereba.com/kz_y.gif&#39;) 0 -300px no-repeat;padding: 2px 0 2px 18px;white-space: nowrap;&#34;&gt;&lt;a href=&#34;http://calil.jp/book/4862465684&#34; target=&#34;_blank&#34; &gt;図書館で探す&lt;/a&gt;&lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;booklink-footer&#34; style=&#34;clear: left&#34;&gt;&lt;/div&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Object Space Raymarching in Unreal Engine 5.2</title>
      <link>https://gam0022.net/blog/2023/07/31/raymarching-in-ue5/</link>
      <pubDate>Mon, 31 Jul 2023 10:00:00 +0900</pubDate>
      
      <guid>https://gam0022.net/blog/2023/07/31/raymarching-in-ue5/</guid>
      <description>&lt;p&gt;これは&lt;a href=&#34;https://sites.google.com/view/rtcamp9/home&#34;&gt;レイトレ合宿9&lt;/a&gt;のアドベントカレンダーの記事です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;あまりレイトレに関連しないテーマですが、レイは飛ばしているので大目に見てください&lt;/li&gt;
&lt;li&gt;レイトレ合宿ではレンダラーを自作する必要があるため、ゲームエンジンは使えません&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-07-30-raymarching-in-ue5/RaymarchingInUE5_thumbnail_v7.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-07-30-raymarching-in-ue5/RaymarchingInUE5_thumbnail_v7.jpg&#34; alt=&#34;Object Space Raymarching in Unreal Engine 5.2&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;はじめに&#34;&gt;はじめに&lt;/h1&gt;

&lt;p&gt;Unreal Engine 5.2上でオブジェクトスペースのレイマーチングを実装したので、その解説をします。&lt;/p&gt;

&lt;p&gt;レイマーチングをノードだけで実装するのは大変なので、MaterialのCustomノードを用いて複雑な処理はHLSLのコードで実装しました。&lt;/p&gt;

&lt;p&gt;UE（Unreal Engine）のプロジェクトはGitHubに公開しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gam0022/RaymarchingInUE5/&#34;&gt;github.com/gam0022/RaymarchingInUE5/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Object Space Raymarching in Unreal Engine 5.2&lt;a href=&#34;https://twitter.com/hashtag/UE5?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#UE5&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/UnrealEngine?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#UnrealEngine&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/UnrealEngine5?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#UnrealEngine5&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/Shader?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#Shader&lt;/a&gt; &lt;a href=&#34;https://t.co/42n2W87HnJ&#34;&gt;pic.twitter.com/42n2W87HnJ&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1684596333209075712?ref_src=twsrc%5Etfw&#34;&gt;July 27, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-conversation=&#34;none&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Randomization of glowing animation borders&lt;a href=&#34;https://twitter.com/hashtag/UE5?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#UE5&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/UnrealEngine?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#UnrealEngine&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/UnrealEngine5?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#UnrealEngine5&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/Shader?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#Shader&lt;/a&gt; &lt;a href=&#34;https://t.co/FvLbVtE9Q3&#34;&gt;pic.twitter.com/FvLbVtE9Q3&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1685583942920089600?ref_src=twsrc%5Etfw&#34;&gt;July 30, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;読者対象&#34;&gt;読者対象&lt;/h2&gt;

&lt;p&gt;この記事は以下の読者を対象としています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1週間前の自分&lt;/li&gt;
&lt;li&gt;レイマーチングやシェーダーの実装経験はあるが、UEは初心者の方&lt;/li&gt;
&lt;li&gt;UEのカスタムシェーダーやMaterial Editorに興味がある方&lt;/li&gt;
&lt;li&gt;UE上でノードでは難しい複雑なシェーダーを実装してみたい人&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;結果&#34;&gt;結果&lt;/h1&gt;

&lt;p&gt;まずは実装結果を紹介します。&lt;/p&gt;

&lt;h2 id=&#34;オブジェクトスペースのレイマーチング&#34;&gt;オブジェクトスペースのレイマーチング&lt;/h2&gt;

&lt;p&gt;オブジェクトスペースのレイマーチングを実装しました。カスタムシェーダーをCubeに適用し、レイマーチングを行います。Cubeをレイマーチングのバウンディングボックスとして使用します。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-07-30-raymarching-in-ue5/object_space_raymarching_v1.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-07-30-raymarching-in-ue5/object_space_raymarching_v1.png&#34; alt=&#34;オブジェクトスペースのレイマーチング&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;オブジェクトスペースにすることで、フルスクリーンのレイマーチングと比較して処理負荷を抑えることができます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;カメラではなくCubeの表面からレイを飛ばすことで、レイマーチングの衝突判定を少ないイテレーション回数に抑えられる&lt;/li&gt;
&lt;li&gt;レイマーチングの負荷の高いシェーダーの描画範囲を制限できる&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;パラメーターのリアルタイム編集&#34;&gt;パラメーターのリアルタイム編集&lt;/h2&gt;

&lt;p&gt;レイマーチングによる描画を行っているため、フラクタルのパラメーターをリアルタイムに編集できます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-07-30-raymarching-in-ue5/param_v1.gif&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-07-30-raymarching-in-ue5/param_v1.gif&#34; alt=&#34;IFSパラメーターのアニメーション1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-07-30-raymarching-in-ue5/param_v2.gif&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-07-30-raymarching-in-ue5/param_v2.gif&#34; alt=&#34;IFSパラメーターのアニメーション2&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;▲グローのアニメーションのボーダーを乱数で散らしたバージョン&lt;/p&gt;

&lt;h2 id=&#34;actorのトランスフォームに追従&#34;&gt;Actorのトランスフォームに追従&lt;/h2&gt;

&lt;p&gt;オブジェクトスペースのレイマーチングの実装のため、Actor（UnityのGameObjectに相当）のトランスフォームに追従します。&lt;/p&gt;

&lt;h3 id=&#34;平行移動&#34;&gt;平行移動&lt;/h3&gt;

&lt;p&gt;平行移動の結果を見ると、UEのレンダリング結果と統合できていることがわかります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;他のオブジェクトと相互にライティングの影響を受けている&lt;/li&gt;
&lt;li&gt;床に反射し、ライティング結果が周囲に自然に馴染んでいる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-07-30-raymarching-in-ue5/transform_translation_v1.gif&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-07-30-raymarching-in-ue5/transform_translation_v1.gif&#34; alt=&#34;平行移動&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;回転&#34;&gt;回転&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-07-30-raymarching-in-ue5/transform_rotation_v1.gif&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-07-30-raymarching-in-ue5/transform_rotation_v1.gif&#34; alt=&#34;回転&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;拡大縮小&#34;&gt;拡大縮小&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-07-30-raymarching-in-ue5/transform_scale_v1.gif&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-07-30-raymarching-in-ue5/transform_scale_v1.gif&#34; alt=&#34;拡大縮小&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;実装の解説&#34;&gt;実装の解説&lt;/h1&gt;

&lt;p&gt;ここからは実装の解説をします。&lt;/p&gt;

&lt;h2 id=&#34;実装の全体流れ&#34;&gt;実装の全体流れ&lt;/h2&gt;

&lt;p&gt;以下は実装の流れです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;UE上のHLSL（.ush）シェーダー開発環境の構築

&lt;ul&gt;
&lt;li&gt;C++の開発環境のセットアップ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AddShaderSourceDirectoryMapping&lt;/code&gt; を使用してシェーダーを配置するディレクトリを登録&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;UE上のレイマーチングの実装

&lt;ul&gt;
&lt;li&gt;HLSL（.ush）でレイマーチングを実装&lt;/li&gt;
&lt;li&gt;MaterialのCustomノードの &lt;code&gt;Include File Paths&lt;/code&gt; にHLSLシェーダー（.ush）を指定し、レイマーチングの関数を呼び出す&lt;/li&gt;
&lt;li&gt;Customノードの計算結果をResultノードに出力し、ライティング計算はエンジン側に任せる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;発展的な内容

&lt;ul&gt;
&lt;li&gt;オブジェクトスペースのレイマーチングに対応&lt;/li&gt;
&lt;li&gt;レイマーチングの空間にカメラが潜った場合を考慮&lt;/li&gt;
&lt;li&gt;他のオブジェクトの前後関係の解消&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;hlsl-ush-によるシェーダー開発環境の構築&#34;&gt;HLSL（.ush）によるシェーダー開発環境の構築&lt;/h2&gt;

&lt;p&gt;Unityでは、シェーダーファイル（.shader）をAssetsフォルダーに配置するだけで認識されますが、UEではシェーダーを配置するディレクトリを明示的にエンジンに認識させる必要があります。&lt;/p&gt;

&lt;p&gt;シェーダーを書くためにC++のコードを記述する必要があるのは面倒ですが、仕方ありませんね。&lt;/p&gt;

&lt;p&gt;C++の関数である&lt;a href=&#34;https://docs.unrealengine.com/5.2/en-US/API/Runtime/RenderCore/AddShaderSourceDirectoryMapping/&#34;&gt;AddShaderSourceDirectoryMapping&lt;/a&gt;を呼び出すことで、エンジンがHLSLシェーダー（.ush）を認識できるようになります。&lt;/p&gt;

&lt;p&gt;まずは、C++の開発環境を整える必要があります。以下の記事を参考に、UE用のC++の開発環境をセットアップしました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/posita33/books/ue5_starter_cpp_and_bp_001/viewer/chap_01_vs2022_setup&#34;&gt;Visual Studio 2022のセットアップ｜Unreal Engine 5から始める C++ &amp;amp; Blueprint&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;C++の開発環境をセットアップしたら、次の記事の「普通の方法」を参考にして、AddShaderSourceDirectoryMappingを呼び出してシェーダーを配置するディレクトリをエンジン側に登録します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/takaf51/items/cd98bd83fe5965d0de30#%E6%99%AE%E9%80%9A%E3%81%AE%E6%96%B9%E6%B3%95&#34;&gt;UE4,5 プロジェクトファイル内の外部シェーダーファイル(usf, ush, hlsl)をインクルードする為の設定。 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;手順を箇条書きにすると以下のようになります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;C++プロジェクト化&lt;/li&gt;
&lt;li&gt;&lt;code&gt;プロジェクト名.Build.cs&lt;/code&gt; に &lt;code&gt;RenderCore&lt;/code&gt; への依存関係を追加&lt;/li&gt;
&lt;li&gt;プロジェクトにモジュール開始と終了の関数を追加&lt;/li&gt;
&lt;li&gt;モジュール開始のStartupModule()に下記のコードを追加&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;FString ShaderDir = FPaths::Combine(FPaths::ProjectDir(), &amp;quot;Shaders&amp;quot;);
AddShaderSourceDirectoryMapping(&amp;quot;/Project&amp;quot;, ShaderDir);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;このコードにより、プロジェクトの直下にある &lt;code&gt;Shaders&lt;/code&gt; ディレクトリに配置されたHLSLシェーダー（.ush）をエンジン側からIncludeできるようになります。&lt;/p&gt;

&lt;h3 id=&#34;余談-昔のueでhlslの関数定義やincludeは大変だった&#34;&gt;余談：昔のUEでHLSLの関数定義やincludeは大変だった&lt;/h3&gt;

&lt;p&gt;過去のUEでは、HLSLをIncludeすることができず、Customノードの展開される仕様を利用して、関数定義や#includeをインジェクションする必要があったようです。&lt;/p&gt;

&lt;p&gt;これは大変ですね。エンジンの改善により、HLSLのシェーダー開発がより使いやすくなったことは、喜ばしい進化と言えるでしょう。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;もんしょさんと話していたのは、カスタムノードをカッコで閉じちゃえば、あとは自由にコード書けちゃうぜ！というネタです。&lt;br&gt;実はこのTweetのマテリアルもこれを使用して書かれています。&lt;a href=&#34;https://t.co/y3P8BkDWyw&#34;&gt;https://t.co/y3P8BkDWyw&lt;/a&gt; &lt;a href=&#34;https://t.co/M4M5WX4u7m&#34;&gt;pic.twitter.com/M4M5WX4u7m&lt;/a&gt;&lt;/p&gt;&amp;mdash; Takuro Kayumi (@TakuroKX) &lt;a href=&#34;https://twitter.com/TakuroKX/status/670292440369094656?ref_src=twsrc%5Etfw&#34;&gt;November 27, 2015&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://monsho.hatenablog.com/entry/2015/12/23/120142&#34;&gt;Customノード3分ハッキング - もんしょの巣穴ブログ Ver2.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pafuhana1213.hatenablog.com/entry/2015/02/15/152312&#34;&gt;UE4のCustomノード(カスタムHLSLシェーダ)を使ってみた - ぼっちプログラマのメモ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;material全体&#34;&gt;Material全体&lt;/h2&gt;

&lt;p&gt;次の画像はMaterialのグラフ全体です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-07-30-raymarching-in-ue5/material_all_text.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-07-30-raymarching-in-ue5/material_all_text.png&#34; alt=&#34;マテリアル全体&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;このグラフでは、レイマーチングの処理をHLSLで実装し、Customノードから呼び出しています。&lt;/p&gt;

&lt;p&gt;ノードとしては以下の処理のみ実装しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;カメラのレイの生成&lt;/li&gt;
&lt;li&gt;前後関係の解消のためのPixel Depth Offsetの計算&lt;/li&gt;
&lt;li&gt;Emissiveのパターン計算&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、オブジェクトスペースのレイマーチングを行うための座標系の計算もノードで行われています。レイマーチングのCustomノードの前後にはTransformノードが接続されています。&lt;/p&gt;

&lt;h2 id=&#34;hlslシェーダーでレイマーチングを実装&#34;&gt;HLSLシェーダーでレイマーチングを実装&lt;/h2&gt;

&lt;p&gt;MaterialのCustomノードのDetailsからInclude File Pathsを指定し、HLSLファイル（.ush）をインクルードします。&lt;/p&gt;

&lt;p&gt;このとき「実際のファイルパス」と「Include File Paths」の指定に違いがある点に注意してください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ファイルパスの例: &lt;code&gt;D:\UnrealProjects\プロジェクト名\Shaders\Raymarching.ush&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Include File Paths: &lt;code&gt;/Project/Raymarching.ush&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;Raymarching.ush&lt;/code&gt; のHLSLコードの実装例は以下の通りです。レイマーチングの基本的な実装方法については説明しません。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#pragma once

float sdBox(float3 p, float3 b)
{
    float3 q = abs(p) - b;
    return length(max(q, 0.0)) + min(max(q.x, max(q.y, q.z)), 0.0);
}

// メンガーのスポンジの距離関数
float dMenger(float3 z0, float3 offset, float scale, inout float4 ifsPosition)
{
    float4 z = float4(z0, 1.0);

    [loop]
    for (int n = 0; n &amp;lt; 4; n++)
    {
        z = abs(z);

        if (z.x &amp;lt; z.y) z.xy = z.yx;
        if (z.x &amp;lt; z.z) z.xz = z.zx;
        if (z.y &amp;lt; z.z) z.yz = z.zy;

        z *= scale;
        z.xyz -= offset * (scale - 1.0);

        if (z.z &amp;lt; - 0.5 * offset.z * (scale - 1.0))
        {
            z.z += offset.z * (scale - 1.0);
        }
    }

    ifsPosition = z;

    return (length(max(abs(z.xyz) - float3(1.0, 1.0, 1.0), 0.0)) - 0.05) / z.w;
}

float map(float3 pos, float uniformScale, float3 mengerOffst, float mengerScale, inout float4 ifsPosition)
{
    pos /= uniformScale;

    float d = dMenger(pos, mengerOffst, mengerScale, ifsPosition);
    d *= uniformScale;

    return d;
}

// 偏微分から法線を計算
float3 calcNormal(float3 p, float uniformScale, float3 mengerOffst, float mengerScale, inout float4 ifsPosition)
{
    float eps = 0.001;

    return normalize(float3(
        map(p + float3(eps, 0.0, 0.0), uniformScale, mengerOffst, mengerScale, ifsPosition) - map(p + float3(-eps, 0.0, 0.0), uniformScale, mengerOffst, mengerScale, ifsPosition),
        map(p + float3(0.0, eps, 0.0), uniformScale, mengerOffst, mengerScale, ifsPosition) - map(p + float3(0.0, -eps, 0.0), uniformScale, mengerOffst, mengerScale, ifsPosition),
        map(p + float3(0.0, 0.0, eps), uniformScale, mengerOffst, mengerScale, ifsPosition) - map(p + float3(0.0, 0.0, -eps), uniformScale, mengerOffst, mengerScale, ifsPosition)
    ));
}

// Ambient Occlusionを計算
float calcAO(float3 pos, float3 nor, float uniformScale, float3 mengerOffst, float mengerScale, inout float4 ifsPosition)
{
    float occ = 0.0;
    float sca = 1.0;

    for (int i = 0; i &amp;lt; 5; i++)
    {
        float h = 0.01 + 0.12 * float(i) / 4.0;
        float d = map(pos + h * nor, uniformScale, mengerOffst, mengerScale, ifsPosition);
        occ += (h - d) * sca;
        sca *= 0.95;
        if (occ &amp;gt; 0.35) break;
    }

    return saturate(clamp(1.0 - 3.0 * occ, 0.0, 1.0) * (0.5 + 0.5 * nor.y));
}

// エッジを計算
float calcEdge(float3 p, float uniformScale, float3 mengerOffst, float mengerScale, inout float4 ifsPosition)
{
    float edge = 0.0;
    float2 e = float2(0.01, 0);

    float d1 = map(p + e.xyy, uniformScale, mengerOffst, mengerScale, ifsPosition);
    float d2 = map(p - e.xyy, uniformScale, mengerOffst, mengerScale, ifsPosition);
    float d3 = map(p + e.yxy, uniformScale, mengerOffst, mengerScale, ifsPosition);
    float d4 = map(p - e.yxy, uniformScale, mengerOffst, mengerScale, ifsPosition);
    float d5 = map(p + e.yyx, uniformScale, mengerOffst, mengerScale, ifsPosition);
    float d6 = map(p - e.yyx, uniformScale, mengerOffst, mengerScale, ifsPosition);
    float d = map(p, uniformScale, mengerOffst, mengerScale, ifsPosition) * 2.;

    edge = abs(d1 + d2 - d) + abs(d3 + d4 - d) + abs(d5 + d6 - d);
    edge = smoothstep(0., 1., sqrt(edge / e.x * 2.));

    return edge;
}

// 原点にあるサイズが100x100x100のCubeの内部にいるかどうかを判定
float isInsideCube(float3 p)
{
    return sdBox(p, (50).xxx) &amp;lt;= 0;
}

void raymarching(
    // Inputs
    float3 origin, float3 ray, int raymarchingLoop,
    float uniformScale, float3 mengerOffst, float mengerScale,

    // Additional Outpus
    inout float hit, inout float depth, inout float3 hitPosition, inout float4 ifsPosition,
    inout float3 albedo, inout float3 normal, inout float ao, inout float emissive
)
{
    // レイマーチング
    hit = 0;
    depth = 0.0;// レイの進んだ距離
    float3 p = origin;// レイの先端の座標
    int i = 0;// レイマーチングのループカウンター

    [loop]
    for (i = 0; i &amp;lt; raymarchingLoop; i++)
    {
        float d = map(p, uniformScale, mengerOffst, mengerScale, ifsPosition);

        // 最短距離を0に近似できるなら、オブジェクトに衝突したとみなして、ループを抜けます
        if (abs(d) &amp;lt; 0.1)
        {
            break;
        }

        depth += d;// 最短距離だけレイを進めます
        p = origin + ray * depth;// レイの先端の座標を更新します
    }

    // バウンディングボックスの中にレイが留まっていればヒットしたと判定
    hit = isInsideCube(p);
    hitPosition = p;

    float4 _ifsPosition;

    if (hit)
    {
        // ライティングのパラメーター
        normal = calcNormal(p, uniformScale, mengerOffst, mengerScale, _ifsPosition);// 法線
        emissive = calcEdge(p, uniformScale, mengerOffst, mengerScale, _ifsPosition);// エッジ
        ao = calcAO(p, normal, uniformScale, mengerOffst, mengerScale, _ifsPosition);// AO
    }
    else
    {
        albedo = float3(0, 0, 0);
        discard;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;customノードのdetails&#34;&gt;CustomノードのDetails&lt;/h2&gt;

&lt;p&gt;CustomノードのDetailsは以下のように設定します。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-07-30-raymarching-in-ue5/material_custom_details.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-07-30-raymarching-in-ue5/material_custom_details.png&#34; alt=&#34;CustomノードのDetails&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CustomノードのCodeでは、raymarhcing関数を呼び出します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;albedo = objectAlbedo;

raymarching(
    origin, ray, raymarchingLoop,
    uniformScale, mengerOffst, mengerScale,
    hit, depth, hitPosition, ifsPosition,
    albedo, normal, ao, emissive
);

return albedo;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Inputs&lt;/code&gt;と&lt;code&gt;Additional Outpus&lt;/code&gt;には、&lt;code&gt;Raymarching.ush&lt;/code&gt;の&lt;code&gt;raymarching&lt;/code&gt;関数の全パラメーターを指定します。&lt;/p&gt;

&lt;p&gt;パラメーターの多い関数なので手間はかかりますが、ミスのないように注意しながら1個1個指定します。&lt;/p&gt;

&lt;p&gt;注意点として、関数のパラメーターの順序を変更したり、新しいパラメーターを追加すると、ノードの接続情報も再設定する必要があります。&lt;/p&gt;

&lt;!--
UEのMaterialのノードの接続は番号（整数のインデックス）で接続情報を保持しているようなので、パラメーターの順序を入れ替えたり、途中にパラメーターを追加すると、ノード上の接続もやり直しになります。
--&gt;

&lt;p&gt;繰り返しになりますが、Include File Pathsは実際のファイルパスとは異なる点に留意して、&lt;code&gt;/Project/Raymarching.ush&lt;/code&gt;と指定してください。&lt;/p&gt;

&lt;h2 id=&#34;material全体のdetails&#34;&gt;Material全体のDetails&lt;/h2&gt;

&lt;p&gt;Material全体のDetailsは以下のように設定します。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-07-30-raymarching-in-ue5/material_graph_details_text.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-07-30-raymarching-in-ue5/material_graph_details_text.png&#34; alt=&#34;Material全体のDetails&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Material Domain: Surface

&lt;ul&gt;
&lt;li&gt;レイマーチングはボリュームレダリングの印象があるかもしれませんが、Surfaceで問題ありません&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Blend Mode: Masked

&lt;ul&gt;
&lt;li&gt;レイマーチングの衝突判定によって形状をマスクする必要があります&lt;/li&gt;
&lt;li&gt;このオプションを有効にすることで、Opacity Maskを出力できます

&lt;ul&gt;
&lt;li&gt;交差している場合は1、交差していない場合は0を出力します&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Shading Model: Default Lit

&lt;ul&gt;
&lt;li&gt;ライティング計算はエンジン側に任せます&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Two Sideded: ON

&lt;ul&gt;
&lt;li&gt;カメラがレイマーチングの内部に入った場合に両面描画が必要です&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;materialノード解説-カメラのレイの生成&#34;&gt;Materialノード解説：カメラのレイの生成&lt;/h2&gt;

&lt;p&gt;ここからはノードの解説をします。まずはカメラのレイを生成するためのノードです。&lt;/p&gt;

&lt;p&gt;次のようなノードでカメラのレイを生成しています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-07-30-raymarching-in-ue5/material_camera_text.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-07-30-raymarching-in-ue5/material_camera_text.png&#34; alt=&#34;Materialノード解説：カメラのレイの生成&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;レイは2つの3次元ベクトルで定義されます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;origin: レイの原点&lt;/li&gt;
&lt;li&gt;ray: レイの向き&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;rayの計算&#34;&gt;rayの計算&lt;/h3&gt;

&lt;p&gt;レイの方向（ray）はシンプルです。&lt;/p&gt;

&lt;p&gt;カメラの位置と、描画しようとしているSurfaceの座標（Absolute World Position）の差分（Subtract）から計算できます。&lt;/p&gt;

&lt;p&gt;正規化（Normalize）してから、Transform Vectorノードでワールドスペースからローカルスペースに変換しています。&lt;/p&gt;

&lt;p&gt;今回はオブジェクトスペースのレイマーチングのため、レイマーチングのCustomノードに入力する位置や向きはすべてローカルスペースに変換する必要があります。&lt;/p&gt;

&lt;h3 id=&#34;originの計算&#34;&gt;originの計算&lt;/h3&gt;

&lt;p&gt;レイの原点（origin）の計算には分岐（DynamicBranch）があります。&lt;/p&gt;

&lt;p&gt;これはカメラがレイマーチングの空間の内部に潜った場合を考慮しているためです。&lt;/p&gt;

&lt;p&gt;カメラの位置によってoriginを分岐しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;カメラが外部にある場合: origin = Absolute World Position&lt;/li&gt;
&lt;li&gt;カメラが内部にある場合: origin = カメラの位置&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、originもローカルスペースにする必要があるため、Transform Positionノードで変換しています。&lt;/p&gt;

&lt;p&gt;カメラの内部/外部の判定はInsideCubeノードで行われています。これもCustomノードです。&lt;/p&gt;

&lt;p&gt;Codeには &lt;code&gt;isInsideCube(localPos)&lt;/code&gt; と指定しています。これは&lt;code&gt;Raymarching.ush&lt;/code&gt;で定義された関数です。&lt;/p&gt;

&lt;p&gt;この分岐によって、カメラがレイマーチングの外部にある場合でも内部にある場合でも、問題なく動作するようになっています。&lt;/p&gt;

&lt;p&gt;また、「Two Sideded: ON」にしている理由は、カメラがレイマーチングの内部に入っている場合において、Cubeの裏面側でレイマーチングを描画するためです。&lt;/p&gt;

&lt;p&gt;これによって、以下のGIFアニメーションでは、カメラがレイマーチングの空間の内部に入り込んだ場合でも正常に描画されています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-07-30-raymarching-in-ue5/camera_inside_v1.gif&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-07-30-raymarching-in-ue5/camera_inside_v1.gif&#34; alt=&#34;カメラがレイマーチングの空間の内部に潜った場合&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;materialノード解説-resultノードへの出力&#34;&gt;Materialノード解説：Resultノードへの出力&lt;/h2&gt;

&lt;p&gt;RaymarchingのCustomノードの出力を、それぞれResultノードに接続します。&lt;/p&gt;

&lt;p&gt;これによりレイマーチングの衝突判定の結果をライティング計算に反映させます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;hit

&lt;ul&gt;
&lt;li&gt;レイマーチングの衝突判定の結果（0なら衝突しなかった、1なら衝突した）です&lt;/li&gt;
&lt;li&gt;Resultノードの &lt;code&gt;Opacity Mask&lt;/code&gt; に接続することで、レイマーチングがヒットしなかったPixelをdiscardできます&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;normal

&lt;ul&gt;
&lt;li&gt;ローカルスペースの法線です&lt;/li&gt;
&lt;li&gt;ワールドスペースに変換（TransformVector）してから、Resultノードの &lt;code&gt;Normal&lt;/code&gt; に接続します&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ao

&lt;ul&gt;
&lt;li&gt;[0-1]のパラメーターなので、そのままResultノードの &lt;code&gt;Ambient Occlusion&lt;/code&gt; に接続します&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-07-30-raymarching-in-ue5/material_raymarching_result_text.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-07-30-raymarching-in-ue5/material_raymarching_result_text.png&#34; alt=&#34;Materialノード解説：Resultノードへの出力&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;materialノード解説-前後関係の解決-pixel-depth-offsetの計算&#34;&gt;Materialノード解説：前後関係の解決（Pixel Depth Offsetの計算）&lt;/h2&gt;

&lt;p&gt;他のオブジェクトと重なった場合でも、前後関係を正しく解決するための工夫について説明します。&lt;/p&gt;

&lt;p&gt;以下のGIFアニメーションのように、白い球体と重なっている場合でも、前後関係を正しく解決できています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-07-30-raymarching-in-ue5/depth_transform_v1.gif&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-07-30-raymarching-in-ue5/depth_transform_v1.gif&#34; alt=&#34;前後関係の解決: 平行移動&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-07-30-raymarching-in-ue5/depth_scale_v1.gif&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-07-30-raymarching-in-ue5/depth_scale_v1.gif&#34; alt=&#34;前後関係の解決: スケール&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;UEのMaterialではDepthBufferを直接書き込むことはできませんが、ワールド座標でのDepthの押し込み距離から、Pixel Depth Offsetを計算することで前後関係を解決しています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-07-30-raymarching-in-ue5/material_pixel_depth_offset_text.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-07-30-raymarching-in-ue5/material_pixel_depth_offset_text.png&#34; alt=&#34;Materialノード解説：前後関係の解決（Pixel Depth Offsetの計算）&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pixel Depth Offsetは、ワールド空間でのオフセット距離を計算する必要があります。したがって、Raymarchingの衝突点（hit）をTransform Positionノードを使用してワールド座標に変換し、Absolute World Positionとの差分（Subtract）を計算し、その距離（Length）を計算しています。&lt;/p&gt;

&lt;p&gt;Pixel Depth Offsetでは、カメラの奥方向にのみオフセットできます。逆に手前にオフセットさせることはできません。この制約は、パフォーマンスの向上を目的としています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/EGJ-Nori_Shinoyama/items/42cb29e95eca601250db&#34;&gt;[UE4] Pixel Depth Offsetは何故画面奥にしか行かないのかまた本当に重たいのかどうか問題 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;カメラがレイマーチングの内部にある場合、Cubeの裏面のSurfaceからは、衝突点（hit）が手前に来るため、Pixel Depth Offsetはマイナス値となります。
しかしこのマイナス値は利用できないため、カメラが内部にある場合は、&lt;code&gt;Pixel Depth Offset = 0&lt;/code&gt; となるようにLerpノードで分岐しています&lt;/p&gt;

&lt;!--
今回はLerpで分岐を処理しましたが、`Max(0, x)` でも良いと思います。
--&gt;

&lt;h1 id=&#34;まとめ&#34;&gt;まとめ&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;UE5.2でオブジェクトスペースのレイマーチングを実装できた

&lt;ul&gt;
&lt;li&gt;Actorに追従し、通常のMeshのようにギズモによりマウスで配置や変形ができる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;エンジンのレンダリング機能とも破綻なく統合できた

&lt;ul&gt;
&lt;li&gt;床への反射やグローバルイルミネーションに統合できた&lt;/li&gt;
&lt;li&gt;Opacity Mask、Pixel Depth Offsetを利用して、他のオブジェクトの前後関係なども解決できた&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ノードとコードの役割分担をうまくできた

&lt;ul&gt;
&lt;li&gt;複雑な処理はHLSLによるコードで実装し、Customノードで呼び出す&lt;/li&gt;
&lt;li&gt;オブジェクトスペースのための座標変換はノードを利用することでシンプルに実装できた&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;UEの細かいTipsについては別記事でまとめる予定

&lt;ul&gt;
&lt;li&gt;「Ctrl + 1 + 左クリック」でスカラーの定数ノードを作成できる&lt;/li&gt;
&lt;li&gt;VS2022プロジェクトの作成に失敗する場合、Source Code Editorを再選択すると解決することがある&lt;/li&gt;
&lt;li&gt;UnityとUEの座標系やスケールの違いについて&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;参考資料&#34;&gt;参考資料&lt;/h1&gt;

&lt;p&gt;UE4やUnity上でのレイマーチング実装の前例を以下に紹介します。これらの情報をとても参考にさせていただきました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://coposuke.hateblo.jp/entry/2019/12/11/002521&#34;&gt;【UE4】Object Space Raymarching (Material Editor) - コポうぇぶろぐ&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;UE4上でのレイマーチング実装の取り組み&lt;/li&gt;
&lt;li&gt;当時は Include File Paths が存在しなかったため、Customノードの関数定義に対するハックが必要であったことなどに触れています。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://nanka.hateblo.jp/entry/2019/08/27/004905&#34;&gt;Unity HDRPのLitシェーダーを改造してレイマーチングする（GBuffer編） - なんかやる&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Unity HDRP上でのレイマーチング実装の取り組み&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tips.hecomi.com/entry/2016/10/11/225541&#34;&gt;Unity でレイマーチングするシェーダを簡単に作成できるツールを作ってみた&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Unity ビルドインRP・&lt;a href=&#34;https://tips.hecomi.com/entry/2022/05/31/003815&#34;&gt;URP&lt;/a&gt;上でのレイマーチングの実装の取り組み&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>SESSIONS 2023のGLSL Graphics Compoで準優勝しました（グラフィックス解説）</title>
      <link>https://gam0022.net/blog/2023/05/31/sessions2023-glsl-compo/</link>
      <pubDate>Wed, 31 May 2023 06:49:24 +0900</pubDate>
      
      <guid>https://gam0022.net/blog/2023/05/31/sessions2023-glsl-compo/</guid>
      <description>&lt;h1 id=&#34;はじめに&#34;&gt;はじめに&lt;/h1&gt;

&lt;p&gt;2023年4月28日～30日にツインメッセ静岡で開催された&lt;a href=&#34;https://sessions.frontl1ne.net/&#34;&gt;SESSIONS in C4 LAN 2023 SPRING&lt;/a&gt;に参加し、GLSL Graphics Compo部門で2位をいただきました！&lt;/p&gt;

&lt;p&gt;作品のタイトルは『Transcendental Cube』で、シンプルな立方体が複雑なジオメトリーに変形していく非現実的な様子を、写実的で迫力ある映像で表現することをコンセプトにしました。&lt;/p&gt;

&lt;div class=&#34;movie-wrap&#34;&gt;
&lt;iframe width=&#34;1920&#34; height=&#34;1080&#34; src=&#34;https://www.youtube.com/embed/194E3UWj870&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;GLSL Graphics Compoのレギュレーションとして音楽は含められませんが、イベント後の動画用に&lt;a href=&#34;https://twitter.com/sadakkey&#34;&gt;@sadakkey&lt;/a&gt;さんに素晴らしい音楽を制作していただきました。この場を借りて、心から感謝の意を表します！&lt;/p&gt;

&lt;p&gt;以下は『Transcendental Cube』の各種リンクです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://youtu.be/194E3UWj870&#34;&gt;📺 YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.shadertoy.com/view/dldGzj&#34;&gt;👁️ Shadertoy&lt;/a&gt; ※高負荷のためRTX3080以上のGPU推奨&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.pouet.net/prod.php?which=94339&#34;&gt;📦 Pouet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;&amp;quot;Transcendental Cube&amp;quot; &lt;br&gt;&lt;br&gt;2nd place at GLSL Graphics Compo, &lt;a href=&#34;https://twitter.com/hashtag/SESSIONS_Party?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SESSIONS_Party&lt;/a&gt; 2023 🥈&lt;br&gt;&lt;br&gt;SESSIONS 2023のGLSL Graphics Compoで2位を勝ち取りました！ &lt;a href=&#34;https://t.co/Ra2Y0Ccfpx&#34;&gt;pic.twitter.com/Ra2Y0Ccfpx&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1653096277184503808?ref_src=twsrc%5Etfw&#34;&gt;May 1, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;GLSL Graphics Compo の2位でした！&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://twitter.com/hashtag/SESSIONS_Party?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SESSIONS_Party&lt;/a&gt; &lt;a href=&#34;https://t.co/ihD5DfiNz2&#34;&gt;pic.twitter.com/ihD5DfiNz2&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1652527603247616001?ref_src=twsrc%5Etfw&#34;&gt;April 30, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;5月25日に&lt;a href=&#34;https://teamlab.connpass.com/event/282028/&#34;&gt;SESSIONS 2023 AFTER PARTY＠teamLab Office&lt;/a&gt;が開催され、そこで本作品の技術的な解説を行いました。&lt;/p&gt;

&lt;p&gt;その発表資料はこちらです。&lt;/p&gt;

&lt;div class=&#34;google-slide-wrap&#34;&gt;
&lt;iframe src=&#34;https://docs.google.com/presentation/d/e/2PACX-1vRElQgUpyWO1kAOOvmckhu2PAfVZHoRrIU7S59o8MrSMSQpz4LLBUuK1_X20tGZ8S8eSK9-dSkIyYo3/embed?start=false&amp;loop=false&amp;delayms=3000&#34; frameborder=&#34;0&#34; width=&#34;1440&#34; height=&#34;839&#34; allowfullscreen=&#34;true&#34; mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;この記事では、スライドの画像を使用しながら、作品の解説をします。&lt;/p&gt;

&lt;h1 id=&#34;glsl-graphics-compoとは&#34;&gt;GLSL Graphics Compoとは？&lt;/h1&gt;

&lt;p&gt;デモシーンの文化に馴染みのない方に向けて、簡単にGLSL Graphics Compoの概要やレギュレーションについて説明します。&lt;/p&gt;

&lt;p&gt;GLSL Graphics Compoは&lt;a href=&#34;https://twigl.app/&#34;&gt;twigl&lt;/a&gt;上でリアルタイムで動作するGLSLのシェーダーによるグラフィックスを競うコンポです。
コンポはコンペティションの意味で、参加者投票によって順位が決まります。&lt;/p&gt;

&lt;h2 id=&#34;glslシェーダーで映像を作り出す魔法&#34;&gt;GLSLシェーダーで映像を作り出す魔法&lt;/h2&gt;

&lt;p&gt;GLSLシェーダーを使用して、プログラミングのソースコードだけで映像を作り出すことができるのですが、一般的には想像しづらいかもしれません。&lt;/p&gt;

&lt;p&gt;具体的なイメージを掴むために、以下の図をご覧ください。GLSLのコードをコメントや改行、空白文字を取り除いて処理の内容で色分けしました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/slide-glsl-code.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/slide-glsl-code.png&#34; alt=&#34;コメントと空白を削除したGLSLのコード全体&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;この9270文字のGLSLシェーダーに、映像のすべてが実装されています。&lt;/p&gt;

&lt;p&gt;実は、このシェーダーにはシーンのモデリング、ライティング、カメラワーク、演出のシーケンスがすべて含まれているのです。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3Dモデルやテクスチャなどの外部アセットは一切使用していません。すべての3Dデータやテクスチャは、GLSLのコードからプロシージャルに生成されています。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;もちろん、変数名や関数名を1文字に短縮したり、デバッグ用のコードを削除することで文字数をさらに削減することも可能です。しかし、今回は文字数削減よりも可読性を重視してコーディングしました。&lt;/p&gt;

&lt;h2 id=&#34;webgl2-0が利用可能に&#34;&gt;WebGL2.0が利用可能に&lt;/h2&gt;

&lt;p&gt;SESSIONS 2023では、twiglの&lt;code&gt;classic (300 es)&lt;/code&gt;モードが許可されたので、WebGL2.0の機能も利用できるようになりました！&lt;/p&gt;

&lt;p&gt;TokyoDemoFest2021ではGLSL Snadboxがレギュレーションとなっており、WebGL1.0の機能しか使えないという制約があったのですが、今回から配列やビット演算などが利用できるようになりました。&lt;/p&gt;

&lt;p&gt;twiglはWeb上でGLSLのフラグメントシェーダーを編集・実行できるWebGLで実装されたサービスです。&lt;/p&gt;

&lt;p&gt;類似サービスにはGLSL SnadboxやShadertoyなどがありますが、
twiglは &lt;a href=&#34;https://twitter.com/search?q=%23%E3%81%A4%E3%81%B6%E3%82%84%E3%81%8DGLSL&amp;amp;src=hashtag_click&#34;&gt;#つぶやきGLSL&lt;/a&gt; と呼ばれる1ツイートに収まる文字数でGLSLのシェーダー作品を作る文化に特化しています。&lt;/p&gt;

&lt;p&gt;ちなみに今回のGLSL Graphics Compoには文字数の制約はありませんでした。
そのためか上映時間が3分あるような超大作の作品も複数ありました。
文字数に制約はありませんが、複雑すぎるGLSLのコードはコンパイルに時間がかかりすぎてChromeがクラッシュするので、GLSLのコンパイル時間が実質的なコードサイズの制限になります。&lt;/p&gt;

&lt;h2 id=&#34;ローカル上の開発環境の構築&#34;&gt;ローカル上の開発環境の構築&lt;/h2&gt;

&lt;p&gt;node.jsを使用した自作のWebGLフレームワーク（&lt;a href=&#34;https://github.com/gam0022/chromatiq/tree/sessions2023&#34;&gt;chromatiq&lt;/a&gt;）を活用して、ローカル上の開発環境を構築しました。
このフレームワークを使うと、VS Codeでシェーダーを編集し、Chromeでホットリロードが可能です。&lt;/p&gt;

&lt;p&gt;直接twiglやShadertoy上で編集することも可能ですが、ローカル環境を構築するメリットは複数あります。たとえば、コードの自動整形、バージョン管理、時間のシークバーなどが実現できます。&lt;/p&gt;

&lt;p&gt;また、twiglへのポーティングの作業は、以前の記事で紹介したテンプレートを利用しました。
chromatiq用のシェーダーのuniform名はShadertoy互換があるため、&lt;code&gt;Shadertoy → twigl (classic 300es)&lt;/code&gt;のテンプレートが利用可能です。
ポーティングの手順は非常に簡単で、テンプレートのGLSLのコードを先頭にコピー＆ペーストするだけで移植作業が完了します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gam0022.net/blog/2019/03/04/porting-from-shadertoy-to-glslsandbox/&#34;&gt;先頭にコピペするだけ！Shadertoy → GLSL Sandbox / NEORT の移植用ヘッダーコードの紹介 | gam0022.net&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;mad-tracingによるライティング&#34;&gt;Mad Tracingによるライティング&lt;/h1&gt;

&lt;p&gt;ライティングでは次の2つをゴールとしました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Global Illumination&lt;/li&gt;
&lt;li&gt;Bloom&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/lighting-features.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/lighting-features.png&#34; alt=&#34;ライティングの特徴（Global IlluminationとBloomの両立）&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;一般的に、Bloomはマルチパスのポストエフェクトとして実装する必要がありますが、
GLSL Graphics Compoのレギュレーションでは1Passでの実装が必要です。
そこで、1PassでGIとBloomの両方を実現するためにMad Tracingという手法を利用しました。&lt;/p&gt;

&lt;p&gt;Mad Tracingは&lt;a href=&#34;https://twitter.com/Virgill74&#34;&gt;Virgill&lt;/a&gt;さんが開発した手法で、&lt;a href=&#34;https://www.youtube.com/watch?v=5lR76o9lWB0&#34;&gt;End of time&lt;/a&gt;という2018年に発表された4K Introのデモではじめて利用されました。&lt;/p&gt;

&lt;p&gt;Mad Tracingをざっくり説明すると、Path Tracingの亜種のような手法です。
通常のPath Tracingでは、Bloom効果を実現することはできませんが、Mad TracingではBloom効果も含めて計算することが可能です。&lt;/p&gt;

&lt;h2 id=&#34;path-tracing&#34;&gt;Path Tracing&lt;/h2&gt;

&lt;p&gt;Path TracingはGlobal Illuminationを実現可能でフォトリアルなグラフィックスが得意な手法です。&lt;/p&gt;

&lt;p&gt;下記の図のようにBRDFに応じて確率的に反射方向をサンプリングしてレイを大量に飛ばすことで、光源からの影響を計算します。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/pathtracing-1.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/pathtracing-1.png&#34; alt=&#34;パストレーシング①&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下記はGlossyなマテリアルの球体のレンダリング結果と、そのマテリアルのBRDFの反射方向の分布を示した図です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/pathtracing-2.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/pathtracing-2.png&#34; alt=&#34;パストレーシング②&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Glossyなマテリアルでは、球体の周囲の映り込みがブラー（ぼかし）されていることが分かります。このブラーは、レイを複数方向にサンプリングし、その結果を平均することで実現されています。&lt;/p&gt;

&lt;p&gt;難しいことは分からなくても、レイを複数方向に飛ばすことで、ブラー（ぼかし）されるイメージだけ理解できれば問題ありません。&lt;/p&gt;

&lt;h2 id=&#34;レイマーチングとmad-tracing&#34;&gt;レイマーチングとMad Tracing&lt;/h2&gt;

&lt;p&gt;Mad TracingではPath Tracingと同じように表面のroughnessに応じてセカンダリレイを飛ばしてGIを計算します。&lt;/p&gt;

&lt;p&gt;通常のパストレーシングでは物体の表面にヒットしてからセカンダリレイを複数回飛ばすと思いますが、
Mad Tracingではレイマーチングのステップ中にセカンダリレイを近傍のオブジェクトのroughnessに応じて飛ばします。&lt;/p&gt;

&lt;p&gt;ここでレイマーチングとMad Tracingのレイの進む様子を示した図を紹介します。&lt;/p&gt;

&lt;h3 id=&#34;レイマーチングのループの様子&#34;&gt;レイマーチングのループの様子&lt;/h3&gt;

&lt;p&gt;次の図はレイマーチングのループの様子です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/raymarching.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/raymarching.png&#34; alt=&#34;レイマーチングのループの様子&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;レイがRayOriginからスタートして、このようにステップごとにRayDirection方向に進んでいきます。
レイマーチングを勉強したことがある人ならおそらく見覚えのある図です。&lt;/p&gt;

&lt;h3 id=&#34;mad-tracingのループの様子&#34;&gt;Mad Tracingのループの様子&lt;/h3&gt;

&lt;p&gt;そして次の図はMad Tracingのループの様子です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/madtracing.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/madtracing.png&#34; alt=&#34;Mad Tracingのループの様子&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mad Tracingは、レイマーチングのループ中に周囲の空間をサンプリングします。
レイの先端を &lt;code&gt;ro2（ray origin 2）&lt;/code&gt; として、そこからセカンダリーのレイを発射します。この操作をレイマーチングの各ステップで行います。&lt;/p&gt;

&lt;p&gt;こうしてレイの周囲の空間からの光源の影響も蓄積することで、Bloomの効果を1Passで実現できます。&lt;/p&gt;

&lt;p&gt;これによってボリューム感やBloom感のあるライティングを実現できます。その代償として、少々負荷が高い印象です。&lt;/p&gt;

&lt;h2 id=&#34;mad-tracingのコード解説&#34;&gt;Mad Tracingのコード解説&lt;/h2&gt;

&lt;p&gt;実際のGLSLのコードを踏まえてMad Tracingのコード解説します。&lt;/p&gt;

&lt;h3 id=&#34;map関数を2回参照&#34;&gt;map関数を2回参照&lt;/h3&gt;

&lt;p&gt;単なるレイマーチングにも見えますが、よく見るとmap関数を2回呼び出していることが分かります。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/madtracing-code1.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/madtracing-code1.png&#34; alt=&#34;map関数を2回参照&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2つ目のサンプリングであるm2の行は、周囲の空間のサンプリングです。&lt;/p&gt;

&lt;h3 id=&#34;if分岐なしでbloom用-gi用のサンプリングを処理&#34;&gt;if分岐なしでBloom用／GI用のサンプリングを処理&lt;/h3&gt;

&lt;p&gt;map関数の返り値はvec4になっており、xにdistance（レイから物体表面への最短距離）が格納されています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/madtracing-code2.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/madtracing-code2.png&#34; alt=&#34;if分岐なしにBloom用のサンプリングとGI用のサンプリングを両立&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;通常のレイマーチングでは&lt;code&gt;distance &amp;lt; eps&lt;/code&gt;になったらレイとオブジェクトが衝突したとみなしてループを抜けますが、Mad Tracingでは衝突後もループを継続します。&lt;/p&gt;

&lt;p&gt;衝突後にはro2（セカンダリレイの原点）は衝突した点に固定化されるため、Bloom用のサンプリングからPath Tracingのサンプリングにif分岐なしに自動的に切り替わります。&lt;/p&gt;

&lt;p&gt;このようにしてif分岐なしにBloom用のサンプリングとGI用のサンプリングを両立しているのです。&lt;/p&gt;

&lt;h3 id=&#34;ボリュームレンダリング&#34;&gt;ボリュームレンダリング&lt;/h3&gt;

&lt;p&gt;レイマーチングのステップに0.25や0.15の係数を乗算しています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/madtracing-code3.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/madtracing-code3.png&#34; alt=&#34;ボリュームレンダリング&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;これはステップの間隔を小さくしてボリュームレンダリングを行うためです。
ステップの間隔が大きすぎるとBloomのアーティファクトが発生しやすくなります。
逆にステップの間隔が小さすぎると負荷が高くなるので、品質と負荷のトレードオフを考慮して係数を決定しました。&lt;/p&gt;

&lt;h3 id=&#34;アーティファクト防止&#34;&gt;アーティファクト防止&lt;/h3&gt;

&lt;p&gt;レイのスタート位置に乱数でオフセットを加えることで、ボリュームレンダリングのアーティファクトを防止しています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/madtracing-code4.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/madtracing-code4.png&#34; alt=&#34;アーティファクト防止&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;オリジナルのMad Tracingにはない処理ですが、効果が大きかったので追加しました。&lt;/p&gt;

&lt;h3 id=&#34;コンパイル時間短縮&#34;&gt;コンパイル時間短縮&lt;/h3&gt;

&lt;p&gt;この処理はGLSLのコンパイル時間短縮が目的です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/madtracing-code5.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/madtracing-code5.png&#34; alt=&#34;コンパイル時間短縮&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;forループがunroll（展開）されるとコンパイル時間が伸びるので、絶対に実行されないifによって強制的にダイナミックループにしてunrollを防ぎます。&lt;/p&gt;

&lt;p&gt;HLSLでは&lt;code&gt;[unroll]&lt;/code&gt;や&lt;code&gt;[loop]&lt;/code&gt;を明示的に指定が可能ですが、GLSLではこのようなハックが必要となります。&lt;/p&gt;

&lt;h1 id=&#34;ifsによるモデリング&#34;&gt;IFSによるモデリング&lt;/h1&gt;

&lt;p&gt;モデリングに関しては、シンプルなCubeをIFS（Iterated Function System）を使用して複雑にしました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs.png&#34; alt=&#34;IFSによるモデリング&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;上の図は、CubeとそれにIFSを適用した結果を示しています。この結果を得るために使用したGLSLのコードは以下の通りです。&lt;/p&gt;

&lt;p&gt;IFSの理解を深めるためにはコードを確認するのが近道だと思います。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-code.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-code.png&#34; alt=&#34;IFSによるモデリングのGLSLのコード&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;このコードでは、forループの中でいくつかの空間操作（折りたたみ、平行移動、回転）を行い、その後通常通りにCubeの距離関数を計算しています。&lt;/p&gt;

&lt;p&gt;IFSについては、&lt;a href=&#34;https://twitter.com/gaziya5&#34;&gt;@gaziya5&lt;/a&gt;さんの&lt;a href=&#34;https://neort.io/product/bvcrf5s3p9f7gigeevf0&#34;&gt;SDF for raymarching (距離関数のスキル)&lt;/a&gt;の記事がとても参考になります。&lt;/p&gt;

&lt;h2 id=&#34;unityを利用したパラメーター調整&#34;&gt;Unityを利用したパラメーター調整&lt;/h2&gt;

&lt;p&gt;IFSの実装自体は比較的簡単で、forループの中で適切な空間操作を行うだけです。&lt;/p&gt;

&lt;p&gt;一方、IFSのパラメーターの調整は非常に難しいです。今回紹介したIFSのパラメーターは6次元（平行移動3次元 + 回転3次元）です。
6次元の広大なパラメーター空間から、美しい絵を描くための適切なパラメーターを見つける必要があります。
この作業はまさに砂漠からオアシスを見つけるようなものであり、試行錯誤が必要です。&lt;/p&gt;

&lt;p&gt;また、通常は6次元よりもさらに次元数が増えていくことが一般的です。&lt;/p&gt;

&lt;p&gt;今回はUnityでパラメーター調整してからGLSLに移植する形でモデリングを行いました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-unity.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-unity.png&#34; alt=&#34;Unityでパラメーター調整&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unityで調整しているのは以下のような理由からです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;インスペクターで値の操作がしやすい&lt;/li&gt;
&lt;li&gt;Undo/Redoができる&lt;/li&gt;
&lt;li&gt;カメラの操作がしやすい&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;モデリングの試行錯誤&#34;&gt;モデリングの試行錯誤&lt;/h2&gt;

&lt;p&gt;制作初期（4月15日）の段階では、複雑なジオメトリーでしたが、最終的にはシンプルに落ち着きました。&lt;/p&gt;

&lt;p&gt;この変更の理由は、Mad Tracingによって得られるライティング情報量の存在です。ジオメトリーの情報量を抑えることで、ライティングもモデリングの情報量がバランスの取れた結果を得ることができると考えました。&lt;/p&gt;

&lt;p&gt;また、モデリングが複雑になると見た目がごちゃごちゃしてしまい、キビキビと変形させたときのかっこよさも損なわれると感じました。&lt;/p&gt;

&lt;p&gt;さらに、ライティングとモデリングの情報量が最大限になると、GPU負荷や動画のビットレートなどにも負荷がかかることが予想されました。そのため、最終的な判断として情報量を適切に制御することとしました。&lt;/p&gt;

&lt;p&gt;これによって、よりバランスの取れた作品を実現することができました。&lt;/p&gt;

&lt;h3 id=&#34;プロトタイプ-unity&#34;&gt;プロトタイプ（Unity）&lt;/h3&gt;

&lt;p&gt;UnityでIFSのパラメーターを試行錯誤している段階では、このようにかなり情報量の多い複雑なジオメトリーでした。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-prototype-unity-1.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-prototype-unity-1.png&#34; alt=&#34;プロトタイプ（Unity）1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-prototype-unity-2.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-prototype-unity-2.png&#34; alt=&#34;プロトタイプ（Unity）2&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-prototype-unity-3.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-prototype-unity-3.png&#34; alt=&#34;プロトタイプ（Unity）3&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-prototype-unity-4.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-prototype-unity-4.png&#34; alt=&#34;プロトタイプ（Unity）4&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;プロトタイプ-glsl&#34;&gt;プロトタイプ（GLSL）&lt;/h3&gt;

&lt;p&gt;最終的にボツになりましたが、このようなモデリングの試作もしていました。ネタ供養です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-prototype-shadertoy-1.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-prototype-shadertoy-1.png&#34; alt=&#34;プロトタイプ（Unity）1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-prototype-shadertoy-2.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-prototype-shadertoy-2.png&#34; alt=&#34;プロトタイプ（Unity）2&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-prototype-shadertoy-3.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-prototype-shadertoy-3.png&#34; alt=&#34;プロトタイプ（Unity）3&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-prototype-shadertoy-4.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-prototype-shadertoy-4.png&#34; alt=&#34;プロトタイプ（Unity）4&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;ifsのバリエーション&#34;&gt;IFSのバリエーション&lt;/h3&gt;

&lt;p&gt;中盤の複雑なIFSのシーンもパラメーター調整のみで実現しました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/chromatiq5096.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/chromatiq5096.png&#34; alt=&#34;IFSのバリエーション&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;壁面の演出&#34;&gt;壁面の演出&lt;/h1&gt;

&lt;p&gt;部屋のジオメトリーは非常にシンプルで、装飾のない完全な直方体です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/wall.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/wall.png&#34; alt=&#34;壁面の演出&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;このシンプルなデザインは、Mad Tracingによる反射の効果を最大限に活かすために採用しました。&lt;/p&gt;

&lt;p&gt;床や壁のシンプルなジオメトリーにより、反射の美しさを引き立たせることができます。周囲の光やオブジェクトが壁面に反射されることで、部屋全体に深みと立体感が生まれます。
さらに、壁面には複数のEmissive（発光）のパターンを取り入れました。壁面の発光パターンにより、部屋の情報量を増やすことができます。
壁面からの発光パターンは、光のダイナミクスや環境の雰囲気を演出する一方、シンプルなジオメトリーとの対比も生み出します。&lt;/p&gt;

&lt;p&gt;結果として、シンプルな部屋のジオメトリーと複雑な壁面のEmissiveのパターンとMad Tracingによる反射の効果が組み合わさり、情報量のバランスがとれた空間を実現できたと思います。&lt;/p&gt;

&lt;h2 id=&#34;ノイズの壁面パターン&#34;&gt;ノイズの壁面パターン&lt;/h2&gt;

&lt;p&gt;序盤の壁面のパターンは、David Hoskinsさんによる有名なHash without Sineによる疑似乱数です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/wall-noise.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/wall-noise.png&#34; alt=&#34;ノイズの壁面パターン&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mad Tracingのアーティファクト防止に利用したhash（擬似的なランダム値を返す関数）関数を再利用しました。&lt;/p&gt;

&lt;p&gt;uv座標に対してfloorを適用してからhashを呼び出すことで、解像度を下げることができます。この結果、QRコードのような雰囲気にできました。&lt;/p&gt;

&lt;h2 id=&#34;警告の壁面パターン&#34;&gt;警告の壁面パターン&lt;/h2&gt;

&lt;p&gt;中盤の警告の壁面パターンでは、六角形のタイルの中心にランダムなマークを描画しました。&lt;/p&gt;

&lt;p&gt;マークには大きく2種類あります。1つ目はSESSIONSのロゴにも使用されている斜めのストライプのパターンであり、もう1つは2DのIFSによって生成されるパターンです。&lt;/p&gt;

&lt;p&gt;2DのIFSパターンは、以下のようなコードで生成されています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/wall-warning.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/wall-warning.png&#34; alt=&#34;警告の壁面パターン&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;IFSは3DのCubeのモデリングでも使用していましたが、もちろん2Dでも利用できます。&lt;/p&gt;

&lt;p&gt;IFSの処理は、Cubeの場合とほぼ同じです。折りたたみ、平行移動、回転などの操作を行います。&lt;/p&gt;

&lt;p&gt;異なる点は、3DではXYZの各軸に対して3回の回転を行っていたのに対し、2Dでは1回の回転で済むことです。&lt;/p&gt;

&lt;p&gt;IFSのパラメーターは事前に調整され、8つのバリエーションを配列に定義しました。六角形のグリッドごとに乱数を生成し、ランダムにパターンを選択するように設定しました。これにより、パターンのバリエーションが豊かになります。&lt;/p&gt;

&lt;h3 id=&#34;neort-上でのリアル空間展示&#34;&gt;NEORT++上でのリアル空間展示&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://neort.io/challenge/ch4hvjsn70rhlpf0n460&#34;&gt;#CURATION_FREE_2&lt;/a&gt;はSESSIONS直後に開催され、タイミングが良かったので参加しました。&lt;/p&gt;

&lt;p&gt;警告のパターンを取り出してNEORTに移植し、NEORT++の展示室に展示させていただきました。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;デジタルアートの新しい体験について考える東京馬喰町のアートギャラリーNEORT++にて5/6, 7に開催される展示”CURATION FREE #2”の作品を募集します。&lt;/p&gt;

&lt;p&gt;本展は、昨年末に行われたキュレーションを介さない展示&amp;rdquo;CURATION FREE&amp;rdquo;の第二弾です。&lt;/p&gt;

&lt;p&gt;期間中、NEORTに投稿された作品が東京馬喰町にあるNEORT++の空間に展示されていきます。&lt;/p&gt;

&lt;p&gt;どんな展示になるか予想ができませんが、表現の多様性を尊重した新しい試みになることを期待します。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-conversation=&#34;none&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;Real &amp;quot;Transcendental Cube&amp;quot;&lt;br&gt;&lt;br&gt;&amp;quot;Transcendental Cube&amp;quot; の壁面の演出の一部をNEORTに移植して &lt;a href=&#34;https://twitter.com/hashtag/CURATION_FREE_2?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#CURATION_FREE_2&lt;/a&gt; のday1に展示しました。&lt;br&gt;&lt;br&gt;（同じような動画を連投して申し訳ないですが、前の動画の画質が微妙だったので…）&lt;a href=&#34;https://twitter.com/hashtag/CURATION_FREE_2?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#CURATION_FREE_2&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/SESSIONS_Party?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SESSIONS_Party&lt;/a&gt; &lt;a href=&#34;https://t.co/Un1t8rBc2m&#34;&gt;pic.twitter.com/Un1t8rBc2m&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1654880194287763456?ref_src=twsrc%5Etfw&#34;&gt;May 6, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;NEORT++の展示室もシンプルな直方体でしたので、作品中のような見え方になるのではないかと期待していました。しかし、実際はそんなことはありませんでした。&lt;/p&gt;

&lt;p&gt;パソコンのディスプレイ上で見たときと、現実世界にプロジェクションされたときの差異が大きく、予想していたような映像体験は残念ながら実現しませんでした。&lt;/p&gt;

&lt;p&gt;しかし、多くの作品を鑑賞する中で、さまざまな新たな発見がありました。展示された作品が実際にどのような風に見えるのか、そのパターンや効果を少しずつ理解することができました。この経験は非常に有意義なものでした。&lt;/p&gt;

&lt;p&gt;NEORT++の展示室の環境では思ったような結果にはならなかったのですが、それでもたくさんの作品に触れ、新たな視点やアイデアを得ることができました。今回の経験を活かして今後の自身の制作にも繋げていきたいです。&lt;/p&gt;

&lt;h1 id=&#34;インスピレーションを得た作品の紹介&#34;&gt;インスピレーションを得た作品の紹介&lt;/h1&gt;

&lt;p&gt;『Transcendental Cube』は複数の作品からインスピレーションを得ながら、それらを自分の中で組み合わせることで独自のコンセプトを形成しました。以下では、そのインスピレーションを受けた作品を紹介します。&lt;/p&gt;

&lt;h2 id=&#34;life-by-setchi&#34;&gt;Life by setchi&lt;/h2&gt;

&lt;p&gt;この作品は、TokyoDemoFest 2018のGLSL Graphics Compoで2位に輝いた作品です。&lt;/p&gt;

&lt;p&gt;シンプルなジオメトリーが複雑に変形するコンセプトはここから触発されました。&lt;/p&gt;

&lt;div class=&#34;movie-wrap&#34;&gt;
&lt;iframe width=&#34;1920&#34; height=&#34;1080&#34; src=&#34;https://www.youtube.com/embed/R4tNEFVz5K8&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&#34;delight-by-mercury&#34;&gt;delight by mercury&lt;/h2&gt;

&lt;p&gt;この作品は、Under Construction 2015のCombined Intro Compoで優勝した作品です。&lt;/p&gt;

&lt;p&gt;美しいグローバルイルミネーション、音楽と映像の見事な同期、そして鮮やかな展開が特徴です。部屋をシンプルにすることで反射を際立たせるアイデアも、この作品からの影響を受けました。&lt;/p&gt;

&lt;div class=&#34;movie-wrap&#34;&gt;
&lt;iframe width=&#34;1920&#34; height=&#34;1080&#34; src=&#34;https://www.youtube.com/embed/UnjIMd3kVf4&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&#34;delayed-by-kaneta&#34;&gt;Delayed by kaneta&lt;/h2&gt;

&lt;p&gt;この作品は、&lt;a href=&#34;https://www.shader1weekcompo.org/&#34;&gt;Shader1weekCompo&lt;/a&gt;の第1回（&lt;a href=&#34;https://neort.io/tag/br0kuak3p9f194rkh8tg&#34;&gt;#S1C001&lt;/a&gt;）で発表されました。&lt;/p&gt;

&lt;p&gt;壁面の発光パターンが床に反射する様子が非常にクールだったので、作品の演出に取り入れました。&lt;/p&gt;

&lt;div class=&#34;movie-wrap&#34;&gt;
&lt;iframe width=&#34;1920&#34; height=&#34;1080&#34; src=&#34;https://www.youtube.com/embed/Noe4SsARPVo&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h1 id=&#34;グラフィックス解説のまとめ&#34;&gt;グラフィックス解説のまとめ&lt;/h1&gt;

&lt;p&gt;本記事では『Transcendental Cube』について、そのグラフィックスについて解説しました。&lt;/p&gt;

&lt;p&gt;この記事が読者の皆さんの制作に少しでもお役に立てれば幸いです。&lt;/p&gt;

&lt;h1 id=&#34;sessionsの振り返り&#34;&gt;SESSIONSの振り返り&lt;/h1&gt;

&lt;p&gt;作品のグラフィックス解説からはテーマが外れてしまいますが、最後にSESSIONSの振り返りを記しておきます。&lt;/p&gt;

&lt;h2 id=&#34;オフラインパーティーの魅力&#34;&gt;オフラインパーティーの魅力&lt;/h2&gt;

&lt;p&gt;TokyoDemoFest2018年以来の約5年ぶりのオフライン開催のデモパーティーということで、大勢でデモを鑑賞したり、交流したりと、懐かしくも楽しい時間を過ごせました。&lt;/p&gt;

&lt;p&gt;オンラインのデモパーティーも素晴らしいものですが、会場の雰囲気や臨場感を直接感じられる点で、やはりオフラインイベントには特別な魅力があると感じています。&lt;/p&gt;

&lt;p&gt;実際に参加者と話をしたり、作品についての感想やアイデアを交換したりすることで、新たな視点やインスピレーションを得ることができました。&lt;/p&gt;

&lt;h2 id=&#34;sessionsについて&#34;&gt;SESSIONSについて&lt;/h2&gt;

&lt;p&gt;SESSIONSは2023年から新たにスタートしたデモパーティーです。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;デモパーティーとはコンピューターを用いたプログラミングやアートに興味のある人々が日本中・世界中から一堂に会し、デモ作品のコンペティション (Compo) やセミナーなどが行われるイベントです。
パーティという名の通り、勉強会のように堅苦しい感じではなく、みんな賑やかに作品の制作過程を見せ合ったりと参加者同士でのコミュニケーションが盛んに行われます。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;SESSIONSの前身である&lt;a href=&#34;https://tokyodemofest.jp/&#34;&gt;TokyoDemoFest&lt;/a&gt;は純粋なデモパーティーに属するものでしたが、SESSIONSはそれとは異なり、デモシーンの枠に囚われず、さまざまなカテゴリーのクリエイティブ作品を募集する「パーティ＆コンペティションイベント」として位置づけられています。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;qme&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/hashtag/SESSIONS_Party?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SESSIONS_Party&lt;/a&gt; &lt;a href=&#34;https://t.co/aSwiTfSjYH&#34;&gt;pic.twitter.com/aSwiTfSjYH&lt;/a&gt;&lt;/p&gt;&amp;mdash; 蘇摩清良 (@soma_arc) &lt;a href=&#34;https://twitter.com/soma_arc/status/1661693568975794178?ref_src=twsrc%5Etfw&#34;&gt;May 25, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;当日の雰囲気は、アフタームービーからよく伝わってきます。&lt;/p&gt;

&lt;p&gt;実際に今回のSESSIONSでも、デモシーンに詳しくない参加者も楽しんで参加している姿を目にすることができました。&lt;/p&gt;

&lt;p&gt;学生や新社会人の若い世代からの参加も多く見られ、これからのSESSIONSの展開が楽しみです！&lt;/p&gt;

&lt;div class=&#34;movie-wrap&#34;&gt;
&lt;iframe width=&#34;1920&#34; height=&#34;1080&#34; src=&#34;https://www.youtube.com/embed/Xyf5op4-hSs&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&#34;c4-lanとのコラボレーション&#34;&gt;C4 LANとのコラボレーション&lt;/h2&gt;

&lt;p&gt;今回のSESSIONSは、&lt;a href=&#34;https://c4-lan.com/&#34;&gt;C4 LAN&lt;/a&gt;というLANパーティーの会場内で開催されました。&lt;/p&gt;

&lt;p&gt;C4 LAN全体の様子は、以下のレポートをご覧ください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://news.mynavi.jp/article/20230505-2672489/&#34;&gt;ゲームイベントとしての認知拡大を目指し、変化を迎えた「C4 LAN 2023 SPRING」レポート | マイナビニュース&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.famitsu.com/news/202305/12302398.html&#34;&gt;【C4 LAN】大量のゲーマーがゲーム機持参で勝手に遊ぶだけ。まあまあどうかしてるのに心地いい。ぬるま湯みたいな闇鍋イベントの生存戦略 | ゲーム・エンタメ最新情報のファミ通.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;デモパーティーの起源は海外のLANパーティーだと言われていますので、今回C4 LAN内で開催されたことに運命的なものを感じました。SESSIONSは会場エントランスのすぐそばでしたので、デモパーティーをあまり知らないC4 LANの参加者にも時々立ち寄っていただくことがありました。&lt;/p&gt;

&lt;h2 id=&#34;ハイレベルだったglsl-graphics-compo&#34;&gt;ハイレベルだったGLSL Graphics Compo&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://files.scene.org/view/parties/2023/sessions23/results.txt&#34;&gt;Result&lt;/a&gt;の通り、GLSL Graphics Compoの応募はなんと15作品もありました。&lt;/p&gt;

&lt;p&gt;作品の数が多いだけでなく、今年は全体的にレベルが高く、近年のGLSL Graphics Compoのレベルのインフレは狂ってるなと思いました（もちろん良い意味で）。&lt;/p&gt;

&lt;p&gt;さらに複数のシーンから構成され、上映時間も2〜3分ほどの展開があり、まるでPCデモに匹敵するクオリティの作品も複数ありました。&lt;/p&gt;

&lt;p&gt;ぜひアーカイブをご覧ください！&lt;/p&gt;

&lt;div class=&#34;movie-wrap&#34;&gt;
&lt;iframe width=&#34;1920&#34; height=&#34;1080&#34; src=&#34;https://www.youtube.com/embed/F-CbQTcHNrc&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h1 id=&#34;参加者レポート&#34;&gt;参加者レポート&lt;/h1&gt;

&lt;p&gt;SESSIONS 2023の参加者のレポートや作品の解説などをまとめました。発見次第、随時追加します。&lt;/p&gt;

&lt;h2 id=&#34;combined-pc-demo-compo優勝作品の解説&#34;&gt;Combined PC Demo Compo優勝作品の解説&lt;/h2&gt;

&lt;p&gt;ukonpowerさんによるWebGLを使用した64K IntroがCombined PC Demo Compoで優勝しました。
このスライドではその制作過程や舞台裏について詳しく解説されています。
とくにBlenderを使ったワークフローの紹介や音楽制作の秘話など、非常に興味深い内容でした。ぜひチェックしてみてください！&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;&amp;quot;ﾃﾞｺﾝﾌﾟﾃｨができるまで&amp;quot;です&lt;a href=&#34;https://t.co/buX0qJg07V&#34;&gt;https://t.co/buX0qJg07V&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://twitter.com/hashtag/SESSIONS_Party?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SESSIONS_Party&lt;/a&gt; &lt;a href=&#34;https://t.co/l8IhsO2wUQ&#34;&gt;pic.twitter.com/l8IhsO2wUQ&lt;/a&gt;&lt;/p&gt;&amp;mdash; ukonpower (@ore_ukonpower) &lt;a href=&#34;https://twitter.com/ore_ukonpower/status/1661713471862636545?ref_src=twsrc%5Etfw&#34;&gt;May 25, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&#34;glsl-graphics-compo優勝作品の解説&#34;&gt;GLSL Graphics Compo優勝作品の解説&lt;/h2&gt;

&lt;p&gt;RenardさんによるGLSL Graphics Compoの優勝作品の解説です。
ApproximateLightという独自の手法を用いたグローバルイルミネーションの計算や、本記事でも解説したMad Tracingの高速化についても紹介されています。
詳細な解説がされており、読み応えがあります。ぜひチェックしてみてください！&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/hashtag/SESSIONS_Party?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SESSIONS_Party&lt;/a&gt;&lt;br&gt;&lt;br&gt;こちらの作品の解説記事を書きました！&lt;a href=&#34;https://t.co/da1inuwbPc&#34;&gt;https://t.co/da1inuwbPc&lt;/a&gt; &lt;a href=&#34;https://t.co/6ijOcdD2Jp&#34;&gt;https://t.co/6ijOcdD2Jp&lt;/a&gt; &lt;a href=&#34;https://t.co/uN1COyotzY&#34;&gt;pic.twitter.com/uN1COyotzY&lt;/a&gt;&lt;/p&gt;&amp;mdash; Renard (@Renardealer) &lt;a href=&#34;https://twitter.com/Renardealer/status/1658116543073452034?ref_src=twsrc%5Etfw&#34;&gt;May 15, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&#34;combined-pc-demo-compo-glsl-graphics-compo&#34;&gt;Combined PC Demo Compo / GLSL Graphics Compo&lt;/h2&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;先日の発表資料です。&lt;br&gt;フラクタルとテセレーション&lt;br&gt; | SESSIONS 2023 After Party&lt;a href=&#34;https://t.co/OpRabk2VKa&#34;&gt;https://t.co/OpRabk2VKa&lt;/a&gt;&lt;a href=&#34;https://twitter.com/hashtag/SESSIONS_Party?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SESSIONS_Party&lt;/a&gt;&lt;/p&gt;&amp;mdash; 蘇摩清良 (@soma_arc) &lt;a href=&#34;https://twitter.com/soma_arc/status/1662817935994540032?ref_src=twsrc%5Etfw&#34;&gt;May 28, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;本日の発表資料（投稿デモの説明）です&lt;br&gt;&lt;br&gt;楽しかった！&lt;a href=&#34;https://t.co/uXKgnPhqza&#34;&gt;https://t.co/uXKgnPhqza&lt;/a&gt;&lt;a href=&#34;https://twitter.com/hashtag/SESSIONS_Party?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SESSIONS_Party&lt;/a&gt;&lt;/p&gt;&amp;mdash; ukeyshima (@ukeyshima) &lt;a href=&#34;https://twitter.com/ukeyshima/status/1661764148802502661?ref_src=twsrc%5Etfw&#34;&gt;May 25, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;初めてPC Demoを作った話｜Saina &lt;a href=&#34;https://twitter.com/SainaKey?ref_src=twsrc%5Etfw&#34;&gt;@SainaKey&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/SESSIONS_Party?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SESSIONS_Party&lt;/a&gt;&lt;a href=&#34;https://twitter.com/hashtag/note?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#note&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/madewithunity?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#madewithunity&lt;/a&gt;&lt;a href=&#34;https://t.co/x5zzLC5VB2&#34;&gt;https://t.co/x5zzLC5VB2&lt;/a&gt;&lt;/p&gt;&amp;mdash; Saina(さいな) (@SainaKey) &lt;a href=&#34;https://twitter.com/SainaKey/status/1652702468474798081?ref_src=twsrc%5Etfw&#34;&gt;April 30, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;SESSIONSに提出したDemoの音楽を解剖します｜蒼空 / sola &lt;a href=&#34;https://twitter.com/sola_117?ref_src=twsrc%5Etfw&#34;&gt;@sola_117&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/note?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#note&lt;/a&gt; &lt;a href=&#34;https://t.co/XplbBpEnOr&#34;&gt;https://t.co/XplbBpEnOr&lt;/a&gt;&lt;/p&gt;&amp;mdash; 蒼空 / sola (@sola_117) &lt;a href=&#34;https://twitter.com/sola_117/status/1653244428134547457?ref_src=twsrc%5Etfw&#34;&gt;May 2, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;すごい大雑把になりますが、SESSIONS の GLSL Compoで提出した作品についての制作経緯について記事にしました。&lt;a href=&#34;https://t.co/EZHDY1ahJ0&#34;&gt;https://t.co/EZHDY1ahJ0&lt;/a&gt;&lt;a href=&#34;https://twitter.com/hashtag/glsl?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#glsl&lt;/a&gt;&lt;a href=&#34;https://twitter.com/hashtag/SESSIONS_Party?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SESSIONS_Party&lt;/a&gt;&lt;/p&gt;&amp;mdash; 独楽回しeddy (@EKey2210) &lt;a href=&#34;https://twitter.com/EKey2210/status/1652660167635501058?ref_src=twsrc%5Etfw&#34;&gt;April 30, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;【補足】&lt;br&gt;・コードには日本語のコメントを書いてあります&lt;br&gt;・ちゃんと壁を通り抜けられないようになっています！&lt;br&gt;・マップはランダムに生成していて、どこまでも続いています！（※浮動小数の精度の許す限り） &lt;a href=&#34;https://t.co/ugBcMKUbQL&#34;&gt;pic.twitter.com/ugBcMKUbQL&lt;/a&gt;&lt;/p&gt;&amp;mdash; Kamoshika (@kamoshika_vrc) &lt;a href=&#34;https://twitter.com/kamoshika_vrc/status/1652700446614781952?ref_src=twsrc%5Etfw&#34;&gt;April 30, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/hashtag/SESSIONS_Party?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SESSIONS_Party&lt;/a&gt; &lt;br&gt;SESSIONSのGLSL compに海賊放送をモチーフにした作品を提出させて頂きました&lt;a href=&#34;https://t.co/DZx5NNzNAJ&#34;&gt;https://t.co/DZx5NNzNAJ&lt;/a&gt; &lt;a href=&#34;https://t.co/HrncS23PrC&#34;&gt;pic.twitter.com/HrncS23PrC&lt;/a&gt;&lt;/p&gt;&amp;mdash; KiNaNkomoti (@Kinakomoti2357) &lt;a href=&#34;https://twitter.com/Kinakomoti2357/status/1652677355901706240?ref_src=twsrc%5Etfw&#34;&gt;April 30, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Just released S͎E͎A͎W͎A͎L͎L͎ &lt;a href=&#34;https://twitter.com/SESSIONS_Party?ref_src=twsrc%5Etfw&#34;&gt;@SESSIONS_Party&lt;/a&gt;, a quick &lt;a href=&#34;https://twitter.com/hashtag/BladeRunner2049?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#BladeRunner2049&lt;/a&gt; inspired shader doodle I did a while back. Check out the final version on &lt;a href=&#34;https://twitter.com/Shadertoy?ref_src=twsrc%5Etfw&#34;&gt;@Shadertoy&lt;/a&gt; ✨: &lt;a href=&#34;https://t.co/ypBZWvp6oD&#34;&gt;https://t.co/ypBZWvp6oD&lt;/a&gt;&lt;a href=&#34;https://twitter.com/hashtag/demoscene?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#demoscene&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/shader?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#shader&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/brutalism?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#brutalism&lt;/a&gt; &lt;a href=&#34;https://t.co/WczF1MLuDm&#34;&gt;pic.twitter.com/WczF1MLuDm&lt;/a&gt;&lt;/p&gt;&amp;mdash; LJ (@LJ_1102) &lt;a href=&#34;https://twitter.com/LJ_1102/status/1653088310988881923?ref_src=twsrc%5Etfw&#34;&gt;May 1, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
